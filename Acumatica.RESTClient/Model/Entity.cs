/* 
 * Default/18.200.001
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 3
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Acumatica.RESTClient.Client.OpenAPIDateConverter;

namespace Acumatica.RESTClient.Model
{
    /// <summary>
    /// Entity
    /// </summary>
    [DataContract]
    public abstract class Entity
    {
        public IEnumerable<EntityField> GetStringFields()
        {
            foreach (var field in this.GetType().GetProperties())
            {
                if (field.PropertyType == typeof(StringValue) )
                {
                    yield return new EntityField(field.PropertyType, ((StringValue)field.GetValue(this))?.Value, field.Name);
                }

            }
        }
        public IEnumerable<DetailEntity> GetDetails()
        {
            foreach (var field in this.GetType().GetProperties())
            {
                if (typeof(IEnumerable).IsAssignableFrom(field.PropertyType) && ((IEnumerable)field.GetValue(this))!=null)
                {
                    yield return new DetailEntity(field.PropertyType, ((IEnumerable)field.GetValue(this)), field.Name);
                }
            }
        }
        public IEnumerable<LinkedEntity> GetLinkedEntities()
        {
            foreach (var field in this.GetType().GetProperties())
            {
                if (typeof(Entity).IsAssignableFrom(field.PropertyType) && ((Entity)field.GetValue(this)) != null)
                {
                    yield return new LinkedEntity(field.PropertyType, (Entity)field.GetValue(this), field.Name);
                }
            }
        }

        [Obsolete("ReturnBehavior property is for backward compatibility with SOAP only. Please use $select and $expand parameters instead.")]
        public ReturnBehavior ReturnBehavior { get; set; }
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public Guid? Id { get; set; }

        /// <summary>
        /// Gets or Sets RowNumber
        /// </summary>
        [DataMember(Name="rowNumber", EmitDefaultValue=false)]
        public long? RowNumber { get; set; }

        /// <summary>
        /// Gets or Sets Note
        /// </summary>
        [DataMember(Name="note", EmitDefaultValue=false)]
        public string Note { get; set; }

        /// <summary>
        /// Gets or Sets Custom
        /// </summary>
        [DataMember(Name="custom", EmitDefaultValue=false)]
        public Dictionary<string, Dictionary<string, CustomField>> Custom { get; set; }

        /// <summary>
        /// Gets or Sets Files
        /// </summary>
        [DataMember(Name="files", EmitDefaultValue=false)]
        public List<FileLink> Files { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
           return ToJson().ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

    }

}
