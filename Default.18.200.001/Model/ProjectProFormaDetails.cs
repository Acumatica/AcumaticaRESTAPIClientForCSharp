/* 
 * Default/18.200.001
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 3
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Acumatica.RESTClient.Client.OpenAPIDateConverter;

namespace Acumatica.DefaultEndpoint.Model
{
    /// <summary>
    /// ProjectProFormaDetails
    /// </summary>
    [DataContract]
    public partial class ProjectProFormaDetails : Entity,  IEquatable<ProjectProFormaDetails>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ProjectProFormaDetails" /> class.
        /// </summary>
        /// <param name="aRDocDate">aRDocDate.</param>
        /// <param name="aRDocDescription">aRDocDescription.</param>
        /// <param name="aRDocOriginalAmount">aRDocOriginalAmount.</param>
        /// <param name="aRDocStatus">aRDocStatus.</param>
        /// <param name="aRDocType">aRDocType.</param>
        /// <param name="aRReferenceNbr">aRReferenceNbr.</param>
        /// <param name="billingNbr">billingNbr.</param>
        /// <param name="description">description.</param>
        /// <param name="invoiceTotal">invoiceTotal.</param>
        /// <param name="openARBalance">openARBalance.</param>
        /// <param name="originalRefNbr">originalRefNbr.</param>
        /// <param name="originalRetainage">originalRetainage.</param>
        /// <param name="paidRetainage">paidRetainage.</param>
        /// <param name="proFormaDate">proFormaDate.</param>
        /// <param name="proFormaReferenceNbr">proFormaReferenceNbr.</param>
        /// <param name="retainageInvoice">retainageInvoice.</param>
        /// <param name="status">status.</param>
        /// <param name="totalAmount">totalAmount.</param>
        /// <param name="unpaidRetainage">unpaidRetainage.</param>
        /// <param name="unreleasedRetainage">unreleasedRetainage.</param>
        public ProjectProFormaDetails(DateTimeValue aRDocDate = default(DateTimeValue), StringValue aRDocDescription = default(StringValue), DecimalValue aRDocOriginalAmount = default(DecimalValue), StringValue aRDocStatus = default(StringValue), StringValue aRDocType = default(StringValue), StringValue aRReferenceNbr = default(StringValue), IntValue billingNbr = default(IntValue), StringValue description = default(StringValue), DecimalValue invoiceTotal = default(DecimalValue), DecimalValue openARBalance = default(DecimalValue), StringValue originalRefNbr = default(StringValue), DecimalValue originalRetainage = default(DecimalValue), DecimalValue paidRetainage = default(DecimalValue), DateTimeValue proFormaDate = default(DateTimeValue), StringValue proFormaReferenceNbr = default(StringValue), BooleanValue retainageInvoice = default(BooleanValue), StringValue status = default(StringValue), DecimalValue totalAmount = default(DecimalValue), DecimalValue unpaidRetainage = default(DecimalValue), DecimalValue unreleasedRetainage = default(DecimalValue), Guid? id = default(Guid?), long? rowNumber = default(long?), string note = default(string), Dictionary<string, Dictionary<string, CustomField>> custom = default(Dictionary<string, Dictionary<string, CustomField>>), List<FileLink> files = default(List<FileLink>)) : base(id, rowNumber, note, custom, files)
        {
            this.ARDocDate = aRDocDate;
            this.ARDocDescription = aRDocDescription;
            this.ARDocOriginalAmount = aRDocOriginalAmount;
            this.ARDocStatus = aRDocStatus;
            this.ARDocType = aRDocType;
            this.ARReferenceNbr = aRReferenceNbr;
            this.BillingNbr = billingNbr;
            this.Description = description;
            this.InvoiceTotal = invoiceTotal;
            this.OpenARBalance = openARBalance;
            this.OriginalRefNbr = originalRefNbr;
            this.OriginalRetainage = originalRetainage;
            this.PaidRetainage = paidRetainage;
            this.ProFormaDate = proFormaDate;
            this.ProFormaReferenceNbr = proFormaReferenceNbr;
            this.RetainageInvoice = retainageInvoice;
            this.Status = status;
            this.TotalAmount = totalAmount;
            this.UnpaidRetainage = unpaidRetainage;
            this.UnreleasedRetainage = unreleasedRetainage;
        }
        
        /// <summary>
        /// Gets or Sets ARDocDate
        /// </summary>
        [DataMember(Name="ARDocDate", EmitDefaultValue=false)]
        public DateTimeValue ARDocDate { get; set; }

        /// <summary>
        /// Gets or Sets ARDocDescription
        /// </summary>
        [DataMember(Name="ARDocDescription", EmitDefaultValue=false)]
        public StringValue ARDocDescription { get; set; }

        /// <summary>
        /// Gets or Sets ARDocOriginalAmount
        /// </summary>
        [DataMember(Name="ARDocOriginalAmount", EmitDefaultValue=false)]
        public DecimalValue ARDocOriginalAmount { get; set; }

        /// <summary>
        /// Gets or Sets ARDocStatus
        /// </summary>
        [DataMember(Name="ARDocStatus", EmitDefaultValue=false)]
        public StringValue ARDocStatus { get; set; }

        /// <summary>
        /// Gets or Sets ARDocType
        /// </summary>
        [DataMember(Name="ARDocType", EmitDefaultValue=false)]
        public StringValue ARDocType { get; set; }

        /// <summary>
        /// Gets or Sets ARReferenceNbr
        /// </summary>
        [DataMember(Name="ARReferenceNbr", EmitDefaultValue=false)]
        public StringValue ARReferenceNbr { get; set; }

        /// <summary>
        /// Gets or Sets BillingNbr
        /// </summary>
        [DataMember(Name="BillingNbr", EmitDefaultValue=false)]
        public IntValue BillingNbr { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name="Description", EmitDefaultValue=false)]
        public StringValue Description { get; set; }

        /// <summary>
        /// Gets or Sets InvoiceTotal
        /// </summary>
        [DataMember(Name="InvoiceTotal", EmitDefaultValue=false)]
        public DecimalValue InvoiceTotal { get; set; }

        /// <summary>
        /// Gets or Sets OpenARBalance
        /// </summary>
        [DataMember(Name="OpenARBalance", EmitDefaultValue=false)]
        public DecimalValue OpenARBalance { get; set; }

        /// <summary>
        /// Gets or Sets OriginalRefNbr
        /// </summary>
        [DataMember(Name="OriginalRefNbr", EmitDefaultValue=false)]
        public StringValue OriginalRefNbr { get; set; }

        /// <summary>
        /// Gets or Sets OriginalRetainage
        /// </summary>
        [DataMember(Name="OriginalRetainage", EmitDefaultValue=false)]
        public DecimalValue OriginalRetainage { get; set; }

        /// <summary>
        /// Gets or Sets PaidRetainage
        /// </summary>
        [DataMember(Name="PaidRetainage", EmitDefaultValue=false)]
        public DecimalValue PaidRetainage { get; set; }

        /// <summary>
        /// Gets or Sets ProFormaDate
        /// </summary>
        [DataMember(Name="ProFormaDate", EmitDefaultValue=false)]
        public DateTimeValue ProFormaDate { get; set; }

        /// <summary>
        /// Gets or Sets ProFormaReferenceNbr
        /// </summary>
        [DataMember(Name="ProFormaReferenceNbr", EmitDefaultValue=false)]
        public StringValue ProFormaReferenceNbr { get; set; }

        /// <summary>
        /// Gets or Sets RetainageInvoice
        /// </summary>
        [DataMember(Name="RetainageInvoice", EmitDefaultValue=false)]
        public BooleanValue RetainageInvoice { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name="Status", EmitDefaultValue=false)]
        public StringValue Status { get; set; }

        /// <summary>
        /// Gets or Sets TotalAmount
        /// </summary>
        [DataMember(Name="TotalAmount", EmitDefaultValue=false)]
        public DecimalValue TotalAmount { get; set; }

        /// <summary>
        /// Gets or Sets UnpaidRetainage
        /// </summary>
        [DataMember(Name="UnpaidRetainage", EmitDefaultValue=false)]
        public DecimalValue UnpaidRetainage { get; set; }

        /// <summary>
        /// Gets or Sets UnreleasedRetainage
        /// </summary>
        [DataMember(Name="UnreleasedRetainage", EmitDefaultValue=false)]
        public DecimalValue UnreleasedRetainage { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ProjectProFormaDetails {\n");
            sb.Append("  ").Append(base.ToString().Replace("\n", "\n  ")).Append("\n");
            sb.Append("  ARDocDate: ").Append(ARDocDate).Append("\n");
            sb.Append("  ARDocDescription: ").Append(ARDocDescription).Append("\n");
            sb.Append("  ARDocOriginalAmount: ").Append(ARDocOriginalAmount).Append("\n");
            sb.Append("  ARDocStatus: ").Append(ARDocStatus).Append("\n");
            sb.Append("  ARDocType: ").Append(ARDocType).Append("\n");
            sb.Append("  ARReferenceNbr: ").Append(ARReferenceNbr).Append("\n");
            sb.Append("  BillingNbr: ").Append(BillingNbr).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  InvoiceTotal: ").Append(InvoiceTotal).Append("\n");
            sb.Append("  OpenARBalance: ").Append(OpenARBalance).Append("\n");
            sb.Append("  OriginalRefNbr: ").Append(OriginalRefNbr).Append("\n");
            sb.Append("  OriginalRetainage: ").Append(OriginalRetainage).Append("\n");
            sb.Append("  PaidRetainage: ").Append(PaidRetainage).Append("\n");
            sb.Append("  ProFormaDate: ").Append(ProFormaDate).Append("\n");
            sb.Append("  ProFormaReferenceNbr: ").Append(ProFormaReferenceNbr).Append("\n");
            sb.Append("  RetainageInvoice: ").Append(RetainageInvoice).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  TotalAmount: ").Append(TotalAmount).Append("\n");
            sb.Append("  UnpaidRetainage: ").Append(UnpaidRetainage).Append("\n");
            sb.Append("  UnreleasedRetainage: ").Append(UnreleasedRetainage).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public override string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ProjectProFormaDetails);
        }

        /// <summary>
        /// Returns true if ProjectProFormaDetails instances are equal
        /// </summary>
        /// <param name="input">Instance of ProjectProFormaDetails to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ProjectProFormaDetails input)
        {
            if (input == null)
                return false;

            return base.Equals(input) && 
                (
                    this.ARDocDate == input.ARDocDate ||
                    (this.ARDocDate != null &&
                    this.ARDocDate.Equals(input.ARDocDate))
                ) && base.Equals(input) && 
                (
                    this.ARDocDescription == input.ARDocDescription ||
                    (this.ARDocDescription != null &&
                    this.ARDocDescription.Equals(input.ARDocDescription))
                ) && base.Equals(input) && 
                (
                    this.ARDocOriginalAmount == input.ARDocOriginalAmount ||
                    (this.ARDocOriginalAmount != null &&
                    this.ARDocOriginalAmount.Equals(input.ARDocOriginalAmount))
                ) && base.Equals(input) && 
                (
                    this.ARDocStatus == input.ARDocStatus ||
                    (this.ARDocStatus != null &&
                    this.ARDocStatus.Equals(input.ARDocStatus))
                ) && base.Equals(input) && 
                (
                    this.ARDocType == input.ARDocType ||
                    (this.ARDocType != null &&
                    this.ARDocType.Equals(input.ARDocType))
                ) && base.Equals(input) && 
                (
                    this.ARReferenceNbr == input.ARReferenceNbr ||
                    (this.ARReferenceNbr != null &&
                    this.ARReferenceNbr.Equals(input.ARReferenceNbr))
                ) && base.Equals(input) && 
                (
                    this.BillingNbr == input.BillingNbr ||
                    (this.BillingNbr != null &&
                    this.BillingNbr.Equals(input.BillingNbr))
                ) && base.Equals(input) && 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && base.Equals(input) && 
                (
                    this.InvoiceTotal == input.InvoiceTotal ||
                    (this.InvoiceTotal != null &&
                    this.InvoiceTotal.Equals(input.InvoiceTotal))
                ) && base.Equals(input) && 
                (
                    this.OpenARBalance == input.OpenARBalance ||
                    (this.OpenARBalance != null &&
                    this.OpenARBalance.Equals(input.OpenARBalance))
                ) && base.Equals(input) && 
                (
                    this.OriginalRefNbr == input.OriginalRefNbr ||
                    (this.OriginalRefNbr != null &&
                    this.OriginalRefNbr.Equals(input.OriginalRefNbr))
                ) && base.Equals(input) && 
                (
                    this.OriginalRetainage == input.OriginalRetainage ||
                    (this.OriginalRetainage != null &&
                    this.OriginalRetainage.Equals(input.OriginalRetainage))
                ) && base.Equals(input) && 
                (
                    this.PaidRetainage == input.PaidRetainage ||
                    (this.PaidRetainage != null &&
                    this.PaidRetainage.Equals(input.PaidRetainage))
                ) && base.Equals(input) && 
                (
                    this.ProFormaDate == input.ProFormaDate ||
                    (this.ProFormaDate != null &&
                    this.ProFormaDate.Equals(input.ProFormaDate))
                ) && base.Equals(input) && 
                (
                    this.ProFormaReferenceNbr == input.ProFormaReferenceNbr ||
                    (this.ProFormaReferenceNbr != null &&
                    this.ProFormaReferenceNbr.Equals(input.ProFormaReferenceNbr))
                ) && base.Equals(input) && 
                (
                    this.RetainageInvoice == input.RetainageInvoice ||
                    (this.RetainageInvoice != null &&
                    this.RetainageInvoice.Equals(input.RetainageInvoice))
                ) && base.Equals(input) && 
                (
                    this.Status == input.Status ||
                    (this.Status != null &&
                    this.Status.Equals(input.Status))
                ) && base.Equals(input) && 
                (
                    this.TotalAmount == input.TotalAmount ||
                    (this.TotalAmount != null &&
                    this.TotalAmount.Equals(input.TotalAmount))
                ) && base.Equals(input) && 
                (
                    this.UnpaidRetainage == input.UnpaidRetainage ||
                    (this.UnpaidRetainage != null &&
                    this.UnpaidRetainage.Equals(input.UnpaidRetainage))
                ) && base.Equals(input) && 
                (
                    this.UnreleasedRetainage == input.UnreleasedRetainage ||
                    (this.UnreleasedRetainage != null &&
                    this.UnreleasedRetainage.Equals(input.UnreleasedRetainage))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = base.GetHashCode();
                if (this.ARDocDate != null)
                    hashCode = hashCode * 59 + this.ARDocDate.GetHashCode();
                if (this.ARDocDescription != null)
                    hashCode = hashCode * 59 + this.ARDocDescription.GetHashCode();
                if (this.ARDocOriginalAmount != null)
                    hashCode = hashCode * 59 + this.ARDocOriginalAmount.GetHashCode();
                if (this.ARDocStatus != null)
                    hashCode = hashCode * 59 + this.ARDocStatus.GetHashCode();
                if (this.ARDocType != null)
                    hashCode = hashCode * 59 + this.ARDocType.GetHashCode();
                if (this.ARReferenceNbr != null)
                    hashCode = hashCode * 59 + this.ARReferenceNbr.GetHashCode();
                if (this.BillingNbr != null)
                    hashCode = hashCode * 59 + this.BillingNbr.GetHashCode();
                if (this.Description != null)
                    hashCode = hashCode * 59 + this.Description.GetHashCode();
                if (this.InvoiceTotal != null)
                    hashCode = hashCode * 59 + this.InvoiceTotal.GetHashCode();
                if (this.OpenARBalance != null)
                    hashCode = hashCode * 59 + this.OpenARBalance.GetHashCode();
                if (this.OriginalRefNbr != null)
                    hashCode = hashCode * 59 + this.OriginalRefNbr.GetHashCode();
                if (this.OriginalRetainage != null)
                    hashCode = hashCode * 59 + this.OriginalRetainage.GetHashCode();
                if (this.PaidRetainage != null)
                    hashCode = hashCode * 59 + this.PaidRetainage.GetHashCode();
                if (this.ProFormaDate != null)
                    hashCode = hashCode * 59 + this.ProFormaDate.GetHashCode();
                if (this.ProFormaReferenceNbr != null)
                    hashCode = hashCode * 59 + this.ProFormaReferenceNbr.GetHashCode();
                if (this.RetainageInvoice != null)
                    hashCode = hashCode * 59 + this.RetainageInvoice.GetHashCode();
                if (this.Status != null)
                    hashCode = hashCode * 59 + this.Status.GetHashCode();
                if (this.TotalAmount != null)
                    hashCode = hashCode * 59 + this.TotalAmount.GetHashCode();
                if (this.UnpaidRetainage != null)
                    hashCode = hashCode * 59 + this.UnpaidRetainage.GetHashCode();
                if (this.UnreleasedRetainage != null)
                    hashCode = hashCode * 59 + this.UnreleasedRetainage.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            foreach(var x in base.BaseValidate(validationContext)) yield return x;
            yield break;
        }
    }

}
