/* 
 * Default/18.200.001
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 3
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Acumatica.RESTClient.Client.OpenAPIDateConverter;

namespace Acumatica.DefaultEndpoint_18_200_001.Model
{
    /// <summary>
    /// Commissions
    /// </summary>
    [DataContract]
    public partial class Commissions : Entity,  IEquatable<Commissions>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Commissions" /> class.
        /// </summary>
        /// <param name="defaultSalesperson">defaultSalesperson.</param>
        /// <param name="salesPersons">salesPersons.</param>
        public Commissions(StringValue defaultSalesperson = default(StringValue), List<SalesPersonDetail> salesPersons = default(List<SalesPersonDetail>), Guid? id = default(Guid?), long? rowNumber = default(long?), string note = default(string), Dictionary<string, Dictionary<string, CustomField>> custom = default(Dictionary<string, Dictionary<string, CustomField>>), List<FileLink> files = default(List<FileLink>)) : base(id, rowNumber, note, custom, files)
        {
            this.DefaultSalesperson = defaultSalesperson;
            this.SalesPersons = salesPersons;
        }
        
        /// <summary>
        /// Gets or Sets DefaultSalesperson
        /// </summary>
        [DataMember(Name="DefaultSalesperson", EmitDefaultValue=false)]
        public StringValue DefaultSalesperson { get; set; }

        /// <summary>
        /// Gets or Sets SalesPersons
        /// </summary>
        [DataMember(Name="SalesPersons", EmitDefaultValue=false)]
        public List<SalesPersonDetail> SalesPersons { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Commissions {\n");
            sb.Append("  ").Append(base.ToString().Replace("\n", "\n  ")).Append("\n");
            sb.Append("  DefaultSalesperson: ").Append(DefaultSalesperson).Append("\n");
            sb.Append("  SalesPersons: ").Append(SalesPersons).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public override string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as Commissions);
        }

        /// <summary>
        /// Returns true if Commissions instances are equal
        /// </summary>
        /// <param name="input">Instance of Commissions to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Commissions input)
        {
            if (input == null)
                return false;

            return base.Equals(input) && 
                (
                    this.DefaultSalesperson == input.DefaultSalesperson ||
                    (this.DefaultSalesperson != null &&
                    this.DefaultSalesperson.Equals(input.DefaultSalesperson))
                ) && base.Equals(input) && 
                (
                    this.SalesPersons == input.SalesPersons ||
                    this.SalesPersons != null &&
                    this.SalesPersons.SequenceEqual(input.SalesPersons)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = base.GetHashCode();
                if (this.DefaultSalesperson != null)
                    hashCode = hashCode * 59 + this.DefaultSalesperson.GetHashCode();
                if (this.SalesPersons != null)
                    hashCode = hashCode * 59 + this.SalesPersons.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            foreach(var x in base.BaseValidate(validationContext)) yield return x;
            yield break;
        }
    }

}
