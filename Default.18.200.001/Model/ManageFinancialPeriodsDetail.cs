/* 
 * Default/18.200.001
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 3
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Acumatica.RESTClient.Client.OpenAPIDateConverter;

namespace Acumatica.DefaultEndpoint.Model
{
    /// <summary>
    /// ManageFinancialPeriodsDetail
    /// </summary>
    [DataContract]
    public partial class ManageFinancialPeriodsDetail : Entity,  IEquatable<ManageFinancialPeriodsDetail>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ManageFinancialPeriodsDetail" /> class.
        /// </summary>
        /// <param name="closedinAP">closedinAP.</param>
        /// <param name="closedinAR">closedinAR.</param>
        /// <param name="closedinCA">closedinCA.</param>
        /// <param name="closedinFA">closedinFA.</param>
        /// <param name="closedinIN">closedinIN.</param>
        /// <param name="descriptionDescription">descriptionDescription.</param>
        /// <param name="financialPeriodID">financialPeriodID.</param>
        /// <param name="selected">selected.</param>
        /// <param name="status">status.</param>
        public ManageFinancialPeriodsDetail(BooleanValue closedinAP = default(BooleanValue), BooleanValue closedinAR = default(BooleanValue), BooleanValue closedinCA = default(BooleanValue), BooleanValue closedinFA = default(BooleanValue), BooleanValue closedinIN = default(BooleanValue), StringValue descriptionDescription = default(StringValue), StringValue financialPeriodID = default(StringValue), BooleanValue selected = default(BooleanValue), StringValue status = default(StringValue), Guid? id = default(Guid?), long? rowNumber = default(long?), string note = default(string), Dictionary<string, Dictionary<string, CustomField>> custom = default(Dictionary<string, Dictionary<string, CustomField>>), List<FileLink> files = default(List<FileLink>)) : base(id, rowNumber, note, custom, files)
        {
            this.ClosedinAP = closedinAP;
            this.ClosedinAR = closedinAR;
            this.ClosedinCA = closedinCA;
            this.ClosedinFA = closedinFA;
            this.ClosedinIN = closedinIN;
            this.DescriptionDescription = descriptionDescription;
            this.FinancialPeriodID = financialPeriodID;
            this.Selected = selected;
            this.Status = status;
        }
        
        /// <summary>
        /// Gets or Sets ClosedinAP
        /// </summary>
        [DataMember(Name="ClosedinAP", EmitDefaultValue=false)]
        public BooleanValue ClosedinAP { get; set; }

        /// <summary>
        /// Gets or Sets ClosedinAR
        /// </summary>
        [DataMember(Name="ClosedinAR", EmitDefaultValue=false)]
        public BooleanValue ClosedinAR { get; set; }

        /// <summary>
        /// Gets or Sets ClosedinCA
        /// </summary>
        [DataMember(Name="ClosedinCA", EmitDefaultValue=false)]
        public BooleanValue ClosedinCA { get; set; }

        /// <summary>
        /// Gets or Sets ClosedinFA
        /// </summary>
        [DataMember(Name="ClosedinFA", EmitDefaultValue=false)]
        public BooleanValue ClosedinFA { get; set; }

        /// <summary>
        /// Gets or Sets ClosedinIN
        /// </summary>
        [DataMember(Name="ClosedinIN", EmitDefaultValue=false)]
        public BooleanValue ClosedinIN { get; set; }

        /// <summary>
        /// Gets or Sets DescriptionDescription
        /// </summary>
        [DataMember(Name="DescriptionDescription", EmitDefaultValue=false)]
        public StringValue DescriptionDescription { get; set; }

        /// <summary>
        /// Gets or Sets FinancialPeriodID
        /// </summary>
        [DataMember(Name="FinancialPeriodID", EmitDefaultValue=false)]
        public StringValue FinancialPeriodID { get; set; }

        /// <summary>
        /// Gets or Sets Selected
        /// </summary>
        [DataMember(Name="Selected", EmitDefaultValue=false)]
        public BooleanValue Selected { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name="Status", EmitDefaultValue=false)]
        public StringValue Status { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ManageFinancialPeriodsDetail {\n");
            sb.Append("  ").Append(base.ToString().Replace("\n", "\n  ")).Append("\n");
            sb.Append("  ClosedinAP: ").Append(ClosedinAP).Append("\n");
            sb.Append("  ClosedinAR: ").Append(ClosedinAR).Append("\n");
            sb.Append("  ClosedinCA: ").Append(ClosedinCA).Append("\n");
            sb.Append("  ClosedinFA: ").Append(ClosedinFA).Append("\n");
            sb.Append("  ClosedinIN: ").Append(ClosedinIN).Append("\n");
            sb.Append("  DescriptionDescription: ").Append(DescriptionDescription).Append("\n");
            sb.Append("  FinancialPeriodID: ").Append(FinancialPeriodID).Append("\n");
            sb.Append("  Selected: ").Append(Selected).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public override string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ManageFinancialPeriodsDetail);
        }

        /// <summary>
        /// Returns true if ManageFinancialPeriodsDetail instances are equal
        /// </summary>
        /// <param name="input">Instance of ManageFinancialPeriodsDetail to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ManageFinancialPeriodsDetail input)
        {
            if (input == null)
                return false;

            return base.Equals(input) && 
                (
                    this.ClosedinAP == input.ClosedinAP ||
                    (this.ClosedinAP != null &&
                    this.ClosedinAP.Equals(input.ClosedinAP))
                ) && base.Equals(input) && 
                (
                    this.ClosedinAR == input.ClosedinAR ||
                    (this.ClosedinAR != null &&
                    this.ClosedinAR.Equals(input.ClosedinAR))
                ) && base.Equals(input) && 
                (
                    this.ClosedinCA == input.ClosedinCA ||
                    (this.ClosedinCA != null &&
                    this.ClosedinCA.Equals(input.ClosedinCA))
                ) && base.Equals(input) && 
                (
                    this.ClosedinFA == input.ClosedinFA ||
                    (this.ClosedinFA != null &&
                    this.ClosedinFA.Equals(input.ClosedinFA))
                ) && base.Equals(input) && 
                (
                    this.ClosedinIN == input.ClosedinIN ||
                    (this.ClosedinIN != null &&
                    this.ClosedinIN.Equals(input.ClosedinIN))
                ) && base.Equals(input) && 
                (
                    this.DescriptionDescription == input.DescriptionDescription ||
                    (this.DescriptionDescription != null &&
                    this.DescriptionDescription.Equals(input.DescriptionDescription))
                ) && base.Equals(input) && 
                (
                    this.FinancialPeriodID == input.FinancialPeriodID ||
                    (this.FinancialPeriodID != null &&
                    this.FinancialPeriodID.Equals(input.FinancialPeriodID))
                ) && base.Equals(input) && 
                (
                    this.Selected == input.Selected ||
                    (this.Selected != null &&
                    this.Selected.Equals(input.Selected))
                ) && base.Equals(input) && 
                (
                    this.Status == input.Status ||
                    (this.Status != null &&
                    this.Status.Equals(input.Status))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = base.GetHashCode();
                if (this.ClosedinAP != null)
                    hashCode = hashCode * 59 + this.ClosedinAP.GetHashCode();
                if (this.ClosedinAR != null)
                    hashCode = hashCode * 59 + this.ClosedinAR.GetHashCode();
                if (this.ClosedinCA != null)
                    hashCode = hashCode * 59 + this.ClosedinCA.GetHashCode();
                if (this.ClosedinFA != null)
                    hashCode = hashCode * 59 + this.ClosedinFA.GetHashCode();
                if (this.ClosedinIN != null)
                    hashCode = hashCode * 59 + this.ClosedinIN.GetHashCode();
                if (this.DescriptionDescription != null)
                    hashCode = hashCode * 59 + this.DescriptionDescription.GetHashCode();
                if (this.FinancialPeriodID != null)
                    hashCode = hashCode * 59 + this.FinancialPeriodID.GetHashCode();
                if (this.Selected != null)
                    hashCode = hashCode * 59 + this.Selected.GetHashCode();
                if (this.Status != null)
                    hashCode = hashCode * 59 + this.Status.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            foreach(var x in base.BaseValidate(validationContext)) yield return x;
            yield break;
        }
    }

}
