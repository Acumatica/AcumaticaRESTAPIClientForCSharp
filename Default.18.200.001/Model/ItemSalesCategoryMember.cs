/* 
 * Default/18.200.001
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 3
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Acumatica.RESTClient.Client.OpenAPIDateConverter;

namespace Acumatica.DefaultEndpoint.Model
{
    /// <summary>
    /// ItemSalesCategoryMember
    /// </summary>
    [DataContract]
    public partial class ItemSalesCategoryMember : Entity,  IEquatable<ItemSalesCategoryMember>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ItemSalesCategoryMember" /> class.
        /// </summary>
        /// <param name="description">description.</param>
        /// <param name="inventoryID">inventoryID.</param>
        /// <param name="itemClass">itemClass.</param>
        /// <param name="itemStatus">itemStatus.</param>
        public ItemSalesCategoryMember(StringValue description = default(StringValue), StringValue inventoryID = default(StringValue), StringValue itemClass = default(StringValue), StringValue itemStatus = default(StringValue), Guid? id = default(Guid?), long? rowNumber = default(long?), string note = default(string), Dictionary<string, Dictionary<string, CustomField>> custom = default(Dictionary<string, Dictionary<string, CustomField>>), List<FileLink> files = default(List<FileLink>)) : base(id, rowNumber, note, custom, files)
        {
            this.Description = description;
            this.InventoryID = inventoryID;
            this.ItemClass = itemClass;
            this.ItemStatus = itemStatus;
        }
        
        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name="Description", EmitDefaultValue=false)]
        public StringValue Description { get; set; }

        /// <summary>
        /// Gets or Sets InventoryID
        /// </summary>
        [DataMember(Name="InventoryID", EmitDefaultValue=false)]
        public StringValue InventoryID { get; set; }

        /// <summary>
        /// Gets or Sets ItemClass
        /// </summary>
        [DataMember(Name="ItemClass", EmitDefaultValue=false)]
        public StringValue ItemClass { get; set; }

        /// <summary>
        /// Gets or Sets ItemStatus
        /// </summary>
        [DataMember(Name="ItemStatus", EmitDefaultValue=false)]
        public StringValue ItemStatus { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ItemSalesCategoryMember {\n");
            sb.Append("  ").Append(base.ToString().Replace("\n", "\n  ")).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  InventoryID: ").Append(InventoryID).Append("\n");
            sb.Append("  ItemClass: ").Append(ItemClass).Append("\n");
            sb.Append("  ItemStatus: ").Append(ItemStatus).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public override string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ItemSalesCategoryMember);
        }

        /// <summary>
        /// Returns true if ItemSalesCategoryMember instances are equal
        /// </summary>
        /// <param name="input">Instance of ItemSalesCategoryMember to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ItemSalesCategoryMember input)
        {
            if (input == null)
                return false;

            return base.Equals(input) && 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && base.Equals(input) && 
                (
                    this.InventoryID == input.InventoryID ||
                    (this.InventoryID != null &&
                    this.InventoryID.Equals(input.InventoryID))
                ) && base.Equals(input) && 
                (
                    this.ItemClass == input.ItemClass ||
                    (this.ItemClass != null &&
                    this.ItemClass.Equals(input.ItemClass))
                ) && base.Equals(input) && 
                (
                    this.ItemStatus == input.ItemStatus ||
                    (this.ItemStatus != null &&
                    this.ItemStatus.Equals(input.ItemStatus))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = base.GetHashCode();
                if (this.Description != null)
                    hashCode = hashCode * 59 + this.Description.GetHashCode();
                if (this.InventoryID != null)
                    hashCode = hashCode * 59 + this.InventoryID.GetHashCode();
                if (this.ItemClass != null)
                    hashCode = hashCode * 59 + this.ItemClass.GetHashCode();
                if (this.ItemStatus != null)
                    hashCode = hashCode * 59 + this.ItemStatus.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            foreach(var x in base.BaseValidate(validationContext)) yield return x;
            yield break;
        }
    }

}
