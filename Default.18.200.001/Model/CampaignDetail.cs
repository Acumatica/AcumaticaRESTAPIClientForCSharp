/* 
 * Default/18.200.001
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 3
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Acumatica.RESTClient.Client.OpenAPIDateConverter;

namespace Acumatica.DefaultEndpoint.Model
{
    /// <summary>
    /// CampaignDetail
    /// </summary>
    [DataContract]
    public partial class CampaignDetail : Entity,  IEquatable<CampaignDetail>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CampaignDetail" /> class.
        /// </summary>
        /// <param name="campaignID">campaignID.</param>
        /// <param name="campaignName">campaignName.</param>
        /// <param name="contactID">contactID.</param>
        /// <param name="stage">stage.</param>
        public CampaignDetail(StringValue campaignID = default(StringValue), StringValue campaignName = default(StringValue), IntValue contactID = default(IntValue), StringValue stage = default(StringValue), Guid? id = default(Guid?), long? rowNumber = default(long?), string note = default(string), Dictionary<string, Dictionary<string, CustomField>> custom = default(Dictionary<string, Dictionary<string, CustomField>>), List<FileLink> files = default(List<FileLink>)) : base(id, rowNumber, note, custom, files)
        {
            this.CampaignID = campaignID;
            this.CampaignName = campaignName;
            this.ContactID = contactID;
            this.Stage = stage;
        }
        
        /// <summary>
        /// Gets or Sets CampaignID
        /// </summary>
        [DataMember(Name="CampaignID", EmitDefaultValue=false)]
        public StringValue CampaignID { get; set; }

        /// <summary>
        /// Gets or Sets CampaignName
        /// </summary>
        [DataMember(Name="CampaignName", EmitDefaultValue=false)]
        public StringValue CampaignName { get; set; }

        /// <summary>
        /// Gets or Sets ContactID
        /// </summary>
        [DataMember(Name="ContactID", EmitDefaultValue=false)]
        public IntValue ContactID { get; set; }

        /// <summary>
        /// Gets or Sets Stage
        /// </summary>
        [DataMember(Name="Stage", EmitDefaultValue=false)]
        public StringValue Stage { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CampaignDetail {\n");
            sb.Append("  ").Append(base.ToString().Replace("\n", "\n  ")).Append("\n");
            sb.Append("  CampaignID: ").Append(CampaignID).Append("\n");
            sb.Append("  CampaignName: ").Append(CampaignName).Append("\n");
            sb.Append("  ContactID: ").Append(ContactID).Append("\n");
            sb.Append("  Stage: ").Append(Stage).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public override string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CampaignDetail);
        }

        /// <summary>
        /// Returns true if CampaignDetail instances are equal
        /// </summary>
        /// <param name="input">Instance of CampaignDetail to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CampaignDetail input)
        {
            if (input == null)
                return false;

            return base.Equals(input) && 
                (
                    this.CampaignID == input.CampaignID ||
                    (this.CampaignID != null &&
                    this.CampaignID.Equals(input.CampaignID))
                ) && base.Equals(input) && 
                (
                    this.CampaignName == input.CampaignName ||
                    (this.CampaignName != null &&
                    this.CampaignName.Equals(input.CampaignName))
                ) && base.Equals(input) && 
                (
                    this.ContactID == input.ContactID ||
                    (this.ContactID != null &&
                    this.ContactID.Equals(input.ContactID))
                ) && base.Equals(input) && 
                (
                    this.Stage == input.Stage ||
                    (this.Stage != null &&
                    this.Stage.Equals(input.Stage))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = base.GetHashCode();
                if (this.CampaignID != null)
                    hashCode = hashCode * 59 + this.CampaignID.GetHashCode();
                if (this.CampaignName != null)
                    hashCode = hashCode * 59 + this.CampaignName.GetHashCode();
                if (this.ContactID != null)
                    hashCode = hashCode * 59 + this.ContactID.GetHashCode();
                if (this.Stage != null)
                    hashCode = hashCode * 59 + this.Stage.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            foreach(var x in base.BaseValidate(validationContext)) yield return x;
            yield break;
        }
    }

}
