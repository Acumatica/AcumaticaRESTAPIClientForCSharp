{
  "openapi": "3.0.1",
  "info": {
    "title": "MANUFACTURING/24.200.001",
    "version": "4"
  },
  "servers": [
    {
      "url": "http://localhost/24r200/entity/MANUFACTURING/24.200.001"
    }
  ],
  "paths": {
    "/ConfigurationEntry/finish": {
      "post": {
        "tags": [
          "ConfigurationEntry"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ConfigurationEntry_InvokeAction_finish",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/finish"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/finish"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationEntry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationEntry"
                }
              }
            }
          }
        }
      }
    },
    "/ConfigurationEntry/{actionName}": {
      "post": {
        "tags": [
          "ConfigurationEntry"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ConfigurationEntry_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationEntryCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationEntryCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationEntry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationEntry"
                }
              }
            }
          }
        }
      }
    },
    "/ConfigurationEntry/$adHocSchema": {
      "get": {
        "tags": [
          "ConfigurationEntry"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "ConfigurationEntry_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationEntry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationEntry"
                }
              }
            }
          }
        }
      }
    },
    "/ConfigurationEntry/{ids}": {
      "get": {
        "tags": [
          "ConfigurationEntry"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "ConfigurationEntry_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationEntry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationEntry"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ConfigurationEntry"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "ConfigurationEntry_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/ConfigurationEntry/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "ConfigurationEntry"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "ConfigurationEntry_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/ConfigurationEntry/{id}": {
      "get": {
        "tags": [
          "ConfigurationEntry"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "ConfigurationEntry_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationEntry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationEntry"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ConfigurationEntry"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "ConfigurationEntry_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/ConfigurationEntry": {
      "get": {
        "tags": [
          "ConfigurationEntry"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "ConfigurationEntry_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConfigurationEntry"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConfigurationEntry"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ConfigurationEntry"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "ConfigurationEntry_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationEntry"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationEntry"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationEntry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationEntry"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationEntry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationEntry"
                }
              }
            }
          }
        }
      }
    },
    "/MPSType/{actionName}": {
      "post": {
        "tags": [
          "MPSType"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "MPSType_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MPSTypeCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MPSTypeCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MPSType"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MPSType"
                }
              }
            }
          }
        }
      }
    },
    "/MPSType/$adHocSchema": {
      "get": {
        "tags": [
          "MPSType"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "MPSType_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MPSType"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MPSType"
                }
              }
            }
          }
        }
      }
    },
    "/MPSType/{ids}": {
      "get": {
        "tags": [
          "MPSType"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "MPSType_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MPSType"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MPSType"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MPSType"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "MPSType_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/MPSType/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "MPSType"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "MPSType_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/MPSType/{id}": {
      "get": {
        "tags": [
          "MPSType"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "MPSType_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MPSType"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MPSType"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MPSType"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "MPSType_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/MPSType": {
      "get": {
        "tags": [
          "MPSType"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "MPSType_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MPSType"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MPSType"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "MPSType"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "MPSType_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MPSType"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MPSType"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MPSType"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MPSType"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MPSType"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MPSType"
                }
              }
            }
          }
        }
      }
    },
    "/RoughCutPlanning/RoughCutPlanningProcess": {
      "post": {
        "tags": [
          "RoughCutPlanning"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "RoughCutPlanning_InvokeAction_RoughCutPlanningProcess",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoughCutPlanningProcess"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RoughCutPlanningProcess"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoughCutPlanning"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoughCutPlanning"
                }
              }
            }
          }
        }
      }
    },
    "/RoughCutPlanning/RoughCutPlanningProcessAll": {
      "post": {
        "tags": [
          "RoughCutPlanning"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "RoughCutPlanning_InvokeAction_RoughCutPlanningProcessAll",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoughCutPlanningProcessAll"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RoughCutPlanningProcessAll"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoughCutPlanning"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoughCutPlanning"
                }
              }
            }
          }
        }
      }
    },
    "/RoughCutPlanning/{actionName}": {
      "post": {
        "tags": [
          "RoughCutPlanning"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "RoughCutPlanning_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoughCutPlanningCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RoughCutPlanningCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoughCutPlanning"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoughCutPlanning"
                }
              }
            }
          }
        }
      }
    },
    "/RoughCutPlanning/$adHocSchema": {
      "get": {
        "tags": [
          "RoughCutPlanning"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "RoughCutPlanning_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoughCutPlanning"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoughCutPlanning"
                }
              }
            }
          }
        }
      }
    },
    "/RoughCutPlanning/{ids}": {
      "get": {
        "tags": [
          "RoughCutPlanning"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "RoughCutPlanning_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoughCutPlanning"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoughCutPlanning"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "RoughCutPlanning"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "RoughCutPlanning_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/RoughCutPlanning/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "RoughCutPlanning"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "RoughCutPlanning_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/RoughCutPlanning/{id}": {
      "get": {
        "tags": [
          "RoughCutPlanning"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "RoughCutPlanning_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoughCutPlanning"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoughCutPlanning"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "RoughCutPlanning"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "RoughCutPlanning_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/RoughCutPlanning": {
      "get": {
        "tags": [
          "RoughCutPlanning"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "RoughCutPlanning_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoughCutPlanning"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoughCutPlanning"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "RoughCutPlanning"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "RoughCutPlanning_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoughCutPlanning"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RoughCutPlanning"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoughCutPlanning"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoughCutPlanning"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoughCutPlanning"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoughCutPlanning"
                }
              }
            }
          }
        }
      }
    },
    "/MRPBuckets/{actionName}": {
      "post": {
        "tags": [
          "MRPBuckets"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "MRPBuckets_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MRPBucketsCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MRPBucketsCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPBuckets"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPBuckets"
                }
              }
            }
          }
        }
      }
    },
    "/MRPBuckets/$adHocSchema": {
      "get": {
        "tags": [
          "MRPBuckets"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "MRPBuckets_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPBuckets"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPBuckets"
                }
              }
            }
          }
        }
      }
    },
    "/MRPBuckets/{ids}": {
      "get": {
        "tags": [
          "MRPBuckets"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "MRPBuckets_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPBuckets"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPBuckets"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MRPBuckets"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "MRPBuckets_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/MRPBuckets/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "MRPBuckets"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "MRPBuckets_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/MRPBuckets/{id}": {
      "get": {
        "tags": [
          "MRPBuckets"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "MRPBuckets_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPBuckets"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPBuckets"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MRPBuckets"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "MRPBuckets_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/MRPBuckets": {
      "get": {
        "tags": [
          "MRPBuckets"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "MRPBuckets_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MRPBuckets"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MRPBuckets"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "MRPBuckets"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "MRPBuckets_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MRPBuckets"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MRPBuckets"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPBuckets"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPBuckets"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPBuckets"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPBuckets"
                }
              }
            }
          }
        }
      }
    },
    "/BomPreferences/{actionName}": {
      "post": {
        "tags": [
          "BomPreferences"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "BomPreferences_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BomPreferencesCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BomPreferencesCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BomPreferences"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BomPreferences"
                }
              }
            }
          }
        }
      }
    },
    "/BomPreferences/$adHocSchema": {
      "get": {
        "tags": [
          "BomPreferences"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "BomPreferences_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BomPreferences"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BomPreferences"
                }
              }
            }
          }
        }
      }
    },
    "/BomPreferences/{ids}": {
      "get": {
        "tags": [
          "BomPreferences"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "BomPreferences_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BomPreferences"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BomPreferences"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BomPreferences"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "BomPreferences_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/BomPreferences/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "BomPreferences"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "BomPreferences_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/BomPreferences/{id}": {
      "get": {
        "tags": [
          "BomPreferences"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "BomPreferences_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BomPreferences"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BomPreferences"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BomPreferences"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "BomPreferences_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/BomPreferences": {
      "get": {
        "tags": [
          "BomPreferences"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "BomPreferences_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BomPreferences"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BomPreferences"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "BomPreferences"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "BomPreferences_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BomPreferences"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BomPreferences"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BomPreferences"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BomPreferences"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BomPreferences"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BomPreferences"
                }
              }
            }
          }
        }
      }
    },
    "/VendorShipment/ConfirmShipment": {
      "post": {
        "tags": [
          "VendorShipment"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "VendorShipment_InvokeAction_ConfirmShipment",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmShipment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmShipment"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorShipment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorShipment"
                }
              }
            }
          }
        }
      }
    },
    "/VendorShipment/{actionName}": {
      "post": {
        "tags": [
          "VendorShipment"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "VendorShipment_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VendorShipmentCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VendorShipmentCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorShipment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorShipment"
                }
              }
            }
          }
        }
      }
    },
    "/VendorShipment/$adHocSchema": {
      "get": {
        "tags": [
          "VendorShipment"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "VendorShipment_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorShipment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorShipment"
                }
              }
            }
          }
        }
      }
    },
    "/VendorShipment/{ids}": {
      "get": {
        "tags": [
          "VendorShipment"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "VendorShipment_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorShipment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorShipment"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "VendorShipment"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "VendorShipment_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/VendorShipment/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "VendorShipment"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "VendorShipment_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/VendorShipment/{id}": {
      "get": {
        "tags": [
          "VendorShipment"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "VendorShipment_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorShipment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorShipment"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "VendorShipment"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "VendorShipment_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/VendorShipment": {
      "get": {
        "tags": [
          "VendorShipment"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "VendorShipment_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VendorShipment"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VendorShipment"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "VendorShipment"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "VendorShipment_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VendorShipment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VendorShipment"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorShipment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorShipment"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorShipment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorShipment"
                }
              }
            }
          }
        }
      }
    },
    "/MRPDetailInquiry/{actionName}": {
      "post": {
        "tags": [
          "MRPDetailInquiry"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "MRPDetailInquiry_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MRPDetailInquiryCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MRPDetailInquiryCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPDetailInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPDetailInquiry"
                }
              }
            }
          }
        }
      }
    },
    "/MRPDetailInquiry/$adHocSchema": {
      "get": {
        "tags": [
          "MRPDetailInquiry"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "MRPDetailInquiry_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPDetailInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPDetailInquiry"
                }
              }
            }
          }
        }
      }
    },
    "/MRPDetailInquiry/{ids}": {
      "get": {
        "tags": [
          "MRPDetailInquiry"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "MRPDetailInquiry_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPDetailInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPDetailInquiry"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MRPDetailInquiry"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "MRPDetailInquiry_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/MRPDetailInquiry/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "MRPDetailInquiry"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "MRPDetailInquiry_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/MRPDetailInquiry/{id}": {
      "get": {
        "tags": [
          "MRPDetailInquiry"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "MRPDetailInquiry_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPDetailInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPDetailInquiry"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MRPDetailInquiry"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "MRPDetailInquiry_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/MRPDetailInquiry": {
      "get": {
        "tags": [
          "MRPDetailInquiry"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "MRPDetailInquiry_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MRPDetailInquiry"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MRPDetailInquiry"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "MRPDetailInquiry"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "MRPDetailInquiry_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MRPDetailInquiry"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MRPDetailInquiry"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPDetailInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPDetailInquiry"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPDetailInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPDetailInquiry"
                }
              }
            }
          }
        }
      }
    },
    "/DisassemblyEntry/ReleaseDisassemblyEntry": {
      "post": {
        "tags": [
          "DisassemblyEntry"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "DisassemblyEntry_InvokeAction_ReleaseDisassemblyEntry",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseDisassemblyEntry"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseDisassemblyEntry"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisassemblyEntry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisassemblyEntry"
                }
              }
            }
          }
        }
      }
    },
    "/DisassemblyEntry/{actionName}": {
      "post": {
        "tags": [
          "DisassemblyEntry"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "DisassemblyEntry_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DisassemblyEntryCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DisassemblyEntryCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisassemblyEntry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisassemblyEntry"
                }
              }
            }
          }
        }
      }
    },
    "/DisassemblyEntry/$adHocSchema": {
      "get": {
        "tags": [
          "DisassemblyEntry"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "DisassemblyEntry_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisassemblyEntry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisassemblyEntry"
                }
              }
            }
          }
        }
      }
    },
    "/DisassemblyEntry/{ids}": {
      "get": {
        "tags": [
          "DisassemblyEntry"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "DisassemblyEntry_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisassemblyEntry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisassemblyEntry"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DisassemblyEntry"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "DisassemblyEntry_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/DisassemblyEntry/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "DisassemblyEntry"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "DisassemblyEntry_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/DisassemblyEntry/{id}": {
      "get": {
        "tags": [
          "DisassemblyEntry"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "DisassemblyEntry_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisassemblyEntry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisassemblyEntry"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DisassemblyEntry"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "DisassemblyEntry_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/DisassemblyEntry": {
      "get": {
        "tags": [
          "DisassemblyEntry"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "DisassemblyEntry_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DisassemblyEntry"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DisassemblyEntry"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "DisassemblyEntry"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "DisassemblyEntry_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DisassemblyEntry"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DisassemblyEntry"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisassemblyEntry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisassemblyEntry"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisassemblyEntry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisassemblyEntry"
                }
              }
            }
          }
        }
      }
    },
    "/ProductionAttributes/{actionName}": {
      "post": {
        "tags": [
          "ProductionAttributes"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ProductionAttributes_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductionAttributesCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductionAttributesCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionAttributes"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionAttributes"
                }
              }
            }
          }
        }
      }
    },
    "/ProductionAttributes/$adHocSchema": {
      "get": {
        "tags": [
          "ProductionAttributes"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "ProductionAttributes_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionAttributes"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionAttributes"
                }
              }
            }
          }
        }
      }
    },
    "/ProductionAttributes/{ids}": {
      "get": {
        "tags": [
          "ProductionAttributes"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "ProductionAttributes_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionAttributes"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionAttributes"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProductionAttributes"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "ProductionAttributes_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/ProductionAttributes/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "ProductionAttributes"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "ProductionAttributes_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/ProductionAttributes/{id}": {
      "get": {
        "tags": [
          "ProductionAttributes"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "ProductionAttributes_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionAttributes"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionAttributes"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProductionAttributes"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "ProductionAttributes_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/ProductionAttributes": {
      "get": {
        "tags": [
          "ProductionAttributes"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "ProductionAttributes_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductionAttributes"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductionAttributes"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProductionAttributes"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "ProductionAttributes_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductionAttributes"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductionAttributes"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionAttributes"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionAttributes"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionAttributes"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionAttributes"
                }
              }
            }
          }
        }
      }
    },
    "/MaterialEntry/ReleaseMaterialEntry": {
      "post": {
        "tags": [
          "MaterialEntry"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "MaterialEntry_InvokeAction_ReleaseMaterialEntry",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseMaterialEntry"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseMaterialEntry"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaterialEntry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaterialEntry"
                }
              }
            }
          }
        }
      }
    },
    "/MaterialEntry/{actionName}": {
      "post": {
        "tags": [
          "MaterialEntry"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "MaterialEntry_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MaterialEntryCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MaterialEntryCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaterialEntry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaterialEntry"
                }
              }
            }
          }
        }
      }
    },
    "/MaterialEntry/$adHocSchema": {
      "get": {
        "tags": [
          "MaterialEntry"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "MaterialEntry_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaterialEntry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaterialEntry"
                }
              }
            }
          }
        }
      }
    },
    "/MaterialEntry/{ids}": {
      "get": {
        "tags": [
          "MaterialEntry"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "MaterialEntry_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaterialEntry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaterialEntry"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MaterialEntry"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "MaterialEntry_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/MaterialEntry/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "MaterialEntry"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "MaterialEntry_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/MaterialEntry/{id}": {
      "get": {
        "tags": [
          "MaterialEntry"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "MaterialEntry_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaterialEntry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaterialEntry"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MaterialEntry"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "MaterialEntry_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/MaterialEntry": {
      "get": {
        "tags": [
          "MaterialEntry"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "MaterialEntry_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MaterialEntry"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MaterialEntry"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "MaterialEntry"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "MaterialEntry_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MaterialEntry"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MaterialEntry"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaterialEntry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaterialEntry"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaterialEntry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaterialEntry"
                }
              }
            }
          }
        }
      }
    },
    "/ConfiguratorPreferences/{actionName}": {
      "post": {
        "tags": [
          "ConfiguratorPreferences"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ConfiguratorPreferences_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfiguratorPreferencesCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfiguratorPreferencesCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguratorPreferences"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguratorPreferences"
                }
              }
            }
          }
        }
      }
    },
    "/ConfiguratorPreferences/$adHocSchema": {
      "get": {
        "tags": [
          "ConfiguratorPreferences"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "ConfiguratorPreferences_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguratorPreferences"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguratorPreferences"
                }
              }
            }
          }
        }
      }
    },
    "/ConfiguratorPreferences/{ids}": {
      "get": {
        "tags": [
          "ConfiguratorPreferences"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "ConfiguratorPreferences_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguratorPreferences"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguratorPreferences"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ConfiguratorPreferences"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "ConfiguratorPreferences_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/ConfiguratorPreferences/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "ConfiguratorPreferences"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "ConfiguratorPreferences_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/ConfiguratorPreferences/{id}": {
      "get": {
        "tags": [
          "ConfiguratorPreferences"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "ConfiguratorPreferences_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguratorPreferences"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguratorPreferences"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ConfiguratorPreferences"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "ConfiguratorPreferences_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/ConfiguratorPreferences": {
      "get": {
        "tags": [
          "ConfiguratorPreferences"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "ConfiguratorPreferences_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConfiguratorPreferences"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConfiguratorPreferences"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ConfiguratorPreferences"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "ConfiguratorPreferences_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfiguratorPreferences"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfiguratorPreferences"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguratorPreferences"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguratorPreferences"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguratorPreferences"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfiguratorPreferences"
                }
              }
            }
          }
        }
      }
    },
    "/CapableToPromise/CapableToPromiseProcess": {
      "post": {
        "tags": [
          "CapableToPromise"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "CapableToPromise_InvokeAction_CapableToPromiseProcess",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CapableToPromiseProcess"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CapableToPromiseProcess"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CapableToPromise"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CapableToPromise"
                }
              }
            }
          }
        }
      }
    },
    "/CapableToPromise/CapableToPromiseProcessAll": {
      "post": {
        "tags": [
          "CapableToPromise"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "CapableToPromise_InvokeAction_CapableToPromiseProcessAll",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CapableToPromiseProcessAll"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CapableToPromiseProcessAll"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CapableToPromise"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CapableToPromise"
                }
              }
            }
          }
        }
      }
    },
    "/CapableToPromise/{actionName}": {
      "post": {
        "tags": [
          "CapableToPromise"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "CapableToPromise_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CapableToPromiseCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CapableToPromiseCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CapableToPromise"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CapableToPromise"
                }
              }
            }
          }
        }
      }
    },
    "/CapableToPromise/$adHocSchema": {
      "get": {
        "tags": [
          "CapableToPromise"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "CapableToPromise_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CapableToPromise"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CapableToPromise"
                }
              }
            }
          }
        }
      }
    },
    "/CapableToPromise/{ids}": {
      "get": {
        "tags": [
          "CapableToPromise"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "CapableToPromise_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CapableToPromise"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CapableToPromise"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CapableToPromise"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "CapableToPromise_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/CapableToPromise/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "CapableToPromise"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "CapableToPromise_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/CapableToPromise/{id}": {
      "get": {
        "tags": [
          "CapableToPromise"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "CapableToPromise_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CapableToPromise"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CapableToPromise"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CapableToPromise"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "CapableToPromise_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/CapableToPromise": {
      "get": {
        "tags": [
          "CapableToPromise"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "CapableToPromise_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CapableToPromise"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CapableToPromise"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CapableToPromise"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "CapableToPromise_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CapableToPromise"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CapableToPromise"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CapableToPromise"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CapableToPromise"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CapableToPromise"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CapableToPromise"
                }
              }
            }
          }
        }
      }
    },
    "/EstimateOperation/{actionName}": {
      "post": {
        "tags": [
          "EstimateOperation"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "EstimateOperation_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EstimateOperationCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EstimateOperationCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstimateOperation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstimateOperation"
                }
              }
            }
          }
        }
      }
    },
    "/EstimateOperation/$adHocSchema": {
      "get": {
        "tags": [
          "EstimateOperation"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "EstimateOperation_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstimateOperation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstimateOperation"
                }
              }
            }
          }
        }
      }
    },
    "/EstimateOperation/{ids}": {
      "get": {
        "tags": [
          "EstimateOperation"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "EstimateOperation_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstimateOperation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstimateOperation"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EstimateOperation"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "EstimateOperation_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/EstimateOperation/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "EstimateOperation"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "EstimateOperation_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/EstimateOperation/{id}": {
      "get": {
        "tags": [
          "EstimateOperation"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "EstimateOperation_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstimateOperation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstimateOperation"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EstimateOperation"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "EstimateOperation_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/EstimateOperation": {
      "get": {
        "tags": [
          "EstimateOperation"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "EstimateOperation_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EstimateOperation"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EstimateOperation"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "EstimateOperation"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "EstimateOperation_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EstimateOperation"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EstimateOperation"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstimateOperation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstimateOperation"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstimateOperation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstimateOperation"
                }
              }
            }
          }
        }
      }
    },
    "/CostRollHistory/{actionName}": {
      "post": {
        "tags": [
          "CostRollHistory"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "CostRollHistory_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CostRollHistoryCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CostRollHistoryCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostRollHistory"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostRollHistory"
                }
              }
            }
          }
        }
      }
    },
    "/CostRollHistory/$adHocSchema": {
      "get": {
        "tags": [
          "CostRollHistory"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "CostRollHistory_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostRollHistory"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostRollHistory"
                }
              }
            }
          }
        }
      }
    },
    "/CostRollHistory/{ids}": {
      "get": {
        "tags": [
          "CostRollHistory"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "CostRollHistory_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostRollHistory"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostRollHistory"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CostRollHistory"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "CostRollHistory_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/CostRollHistory/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "CostRollHistory"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "CostRollHistory_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/CostRollHistory/{id}": {
      "get": {
        "tags": [
          "CostRollHistory"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "CostRollHistory_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostRollHistory"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostRollHistory"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CostRollHistory"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "CostRollHistory_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/CostRollHistory": {
      "get": {
        "tags": [
          "CostRollHistory"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "CostRollHistory_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CostRollHistory"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CostRollHistory"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CostRollHistory"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "CostRollHistory_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CostRollHistory"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CostRollHistory"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostRollHistory"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostRollHistory"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostRollHistory"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostRollHistory"
                }
              }
            }
          }
        }
      }
    },
    "/MRPDisplay/{actionName}": {
      "post": {
        "tags": [
          "MRPDisplay"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "MRPDisplay_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MRPDisplayCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MRPDisplayCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPDisplay"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPDisplay"
                }
              }
            }
          }
        }
      }
    },
    "/MRPDisplay/$adHocSchema": {
      "get": {
        "tags": [
          "MRPDisplay"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "MRPDisplay_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPDisplay"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPDisplay"
                }
              }
            }
          }
        }
      }
    },
    "/MRPDisplay/{ids}": {
      "get": {
        "tags": [
          "MRPDisplay"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "MRPDisplay_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPDisplay"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPDisplay"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MRPDisplay"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "MRPDisplay_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/MRPDisplay/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "MRPDisplay"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "MRPDisplay_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/MRPDisplay/{id}": {
      "get": {
        "tags": [
          "MRPDisplay"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "MRPDisplay_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPDisplay"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPDisplay"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MRPDisplay"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "MRPDisplay_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/MRPDisplay": {
      "get": {
        "tags": [
          "MRPDisplay"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "MRPDisplay_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MRPDisplay"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MRPDisplay"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "MRPDisplay"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "MRPDisplay_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MRPDisplay"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MRPDisplay"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPDisplay"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPDisplay"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPDisplay"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPDisplay"
                }
              }
            }
          }
        }
      }
    },
    "/ProductionPreferences/{actionName}": {
      "post": {
        "tags": [
          "ProductionPreferences"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ProductionPreferences_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductionPreferencesCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductionPreferencesCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionPreferences"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionPreferences"
                }
              }
            }
          }
        }
      }
    },
    "/ProductionPreferences/$adHocSchema": {
      "get": {
        "tags": [
          "ProductionPreferences"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "ProductionPreferences_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionPreferences"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionPreferences"
                }
              }
            }
          }
        }
      }
    },
    "/ProductionPreferences/{ids}": {
      "get": {
        "tags": [
          "ProductionPreferences"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "ProductionPreferences_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionPreferences"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionPreferences"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProductionPreferences"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "ProductionPreferences_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/ProductionPreferences/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "ProductionPreferences"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "ProductionPreferences_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/ProductionPreferences/{id}": {
      "get": {
        "tags": [
          "ProductionPreferences"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "ProductionPreferences_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionPreferences"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionPreferences"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProductionPreferences"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "ProductionPreferences_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/ProductionPreferences": {
      "get": {
        "tags": [
          "ProductionPreferences"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "ProductionPreferences_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductionPreferences"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductionPreferences"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProductionPreferences"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "ProductionPreferences_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductionPreferences"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductionPreferences"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionPreferences"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionPreferences"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionPreferences"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionPreferences"
                }
              }
            }
          }
        }
      }
    },
    "/WorkCenter/{actionName}": {
      "post": {
        "tags": [
          "WorkCenter"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "WorkCenter_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkCenterCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkCenterCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkCenter"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkCenter"
                }
              }
            }
          }
        }
      }
    },
    "/WorkCenter/$adHocSchema": {
      "get": {
        "tags": [
          "WorkCenter"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "WorkCenter_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkCenter"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkCenter"
                }
              }
            }
          }
        }
      }
    },
    "/WorkCenter/{ids}": {
      "get": {
        "tags": [
          "WorkCenter"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "WorkCenter_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkCenter"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkCenter"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WorkCenter"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "WorkCenter_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/WorkCenter/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "WorkCenter"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "WorkCenter_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/WorkCenter/{id}": {
      "get": {
        "tags": [
          "WorkCenter"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "WorkCenter_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkCenter"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkCenter"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WorkCenter"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "WorkCenter_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/WorkCenter": {
      "get": {
        "tags": [
          "WorkCenter"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "WorkCenter_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkCenter"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkCenter"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "WorkCenter"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "WorkCenter_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkCenter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkCenter"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkCenter"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkCenter"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkCenter"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkCenter"
                }
              }
            }
          }
        }
      }
    },
    "/WipAdjustmentEntry/ReleaseWipAdjustmentEntry": {
      "post": {
        "tags": [
          "WipAdjustmentEntry"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "WipAdjustmentEntry_InvokeAction_ReleaseWipAdjustmentEntry",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseWipAdjustmentEntry"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseWipAdjustmentEntry"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WipAdjustmentEntry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WipAdjustmentEntry"
                }
              }
            }
          }
        }
      }
    },
    "/WipAdjustmentEntry/{actionName}": {
      "post": {
        "tags": [
          "WipAdjustmentEntry"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "WipAdjustmentEntry_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WipAdjustmentEntryCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WipAdjustmentEntryCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WipAdjustmentEntry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WipAdjustmentEntry"
                }
              }
            }
          }
        }
      }
    },
    "/WipAdjustmentEntry/$adHocSchema": {
      "get": {
        "tags": [
          "WipAdjustmentEntry"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "WipAdjustmentEntry_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WipAdjustmentEntry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WipAdjustmentEntry"
                }
              }
            }
          }
        }
      }
    },
    "/WipAdjustmentEntry/{ids}": {
      "get": {
        "tags": [
          "WipAdjustmentEntry"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "WipAdjustmentEntry_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WipAdjustmentEntry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WipAdjustmentEntry"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WipAdjustmentEntry"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "WipAdjustmentEntry_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/WipAdjustmentEntry/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "WipAdjustmentEntry"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "WipAdjustmentEntry_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/WipAdjustmentEntry/{id}": {
      "get": {
        "tags": [
          "WipAdjustmentEntry"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "WipAdjustmentEntry_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WipAdjustmentEntry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WipAdjustmentEntry"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WipAdjustmentEntry"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "WipAdjustmentEntry_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/WipAdjustmentEntry": {
      "get": {
        "tags": [
          "WipAdjustmentEntry"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "WipAdjustmentEntry_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WipAdjustmentEntry"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WipAdjustmentEntry"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "WipAdjustmentEntry"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "WipAdjustmentEntry_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WipAdjustmentEntry"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WipAdjustmentEntry"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WipAdjustmentEntry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WipAdjustmentEntry"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WipAdjustmentEntry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WipAdjustmentEntry"
                }
              }
            }
          }
        }
      }
    },
    "/APSMaintenance/APSMaintenanceProcess": {
      "post": {
        "tags": [
          "APSMaintenance"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "APSMaintenance_InvokeAction_APSMaintenanceProcess",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/APSMaintenanceProcess"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/APSMaintenanceProcess"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APSMaintenance"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/APSMaintenance"
                }
              }
            }
          }
        }
      }
    },
    "/APSMaintenance/{actionName}": {
      "post": {
        "tags": [
          "APSMaintenance"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "APSMaintenance_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/APSMaintenanceCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/APSMaintenanceCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APSMaintenance"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/APSMaintenance"
                }
              }
            }
          }
        }
      }
    },
    "/APSMaintenance/$adHocSchema": {
      "get": {
        "tags": [
          "APSMaintenance"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "APSMaintenance_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APSMaintenance"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/APSMaintenance"
                }
              }
            }
          }
        }
      }
    },
    "/APSMaintenance/{ids}": {
      "get": {
        "tags": [
          "APSMaintenance"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "APSMaintenance_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APSMaintenance"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/APSMaintenance"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "APSMaintenance"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "APSMaintenance_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/APSMaintenance/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "APSMaintenance"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "APSMaintenance_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/APSMaintenance/{id}": {
      "get": {
        "tags": [
          "APSMaintenance"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "APSMaintenance_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APSMaintenance"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/APSMaintenance"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "APSMaintenance"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "APSMaintenance_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/APSMaintenance": {
      "get": {
        "tags": [
          "APSMaintenance"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "APSMaintenance_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/APSMaintenance"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/APSMaintenance"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "APSMaintenance"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "APSMaintenance_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/APSMaintenance"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/APSMaintenance"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APSMaintenance"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/APSMaintenance"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APSMaintenance"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/APSMaintenance"
                }
              }
            }
          }
        }
      }
    },
    "/MRPRequirementsByItem/{actionName}": {
      "post": {
        "tags": [
          "MRPRequirementsByItem"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "MRPRequirementsByItem_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MRPRequirementsByItemCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MRPRequirementsByItemCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPRequirementsByItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPRequirementsByItem"
                }
              }
            }
          }
        }
      }
    },
    "/MRPRequirementsByItem/$adHocSchema": {
      "get": {
        "tags": [
          "MRPRequirementsByItem"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "MRPRequirementsByItem_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPRequirementsByItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPRequirementsByItem"
                }
              }
            }
          }
        }
      }
    },
    "/MRPRequirementsByItem/{ids}": {
      "get": {
        "tags": [
          "MRPRequirementsByItem"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "MRPRequirementsByItem_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPRequirementsByItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPRequirementsByItem"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MRPRequirementsByItem"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "MRPRequirementsByItem_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/MRPRequirementsByItem/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "MRPRequirementsByItem"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "MRPRequirementsByItem_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/MRPRequirementsByItem/{id}": {
      "get": {
        "tags": [
          "MRPRequirementsByItem"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "MRPRequirementsByItem_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPRequirementsByItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPRequirementsByItem"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MRPRequirementsByItem"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "MRPRequirementsByItem_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/MRPRequirementsByItem": {
      "get": {
        "tags": [
          "MRPRequirementsByItem"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "MRPRequirementsByItem_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MRPRequirementsByItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MRPRequirementsByItem"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "MRPRequirementsByItem"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "MRPRequirementsByItem_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MRPRequirementsByItem"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MRPRequirementsByItem"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPRequirementsByItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPRequirementsByItem"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPRequirementsByItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPRequirementsByItem"
                }
              }
            }
          }
        }
      }
    },
    "/MasterProductionSchedule/{actionName}": {
      "post": {
        "tags": [
          "MasterProductionSchedule"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "MasterProductionSchedule_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MasterProductionScheduleCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MasterProductionScheduleCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MasterProductionSchedule"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MasterProductionSchedule"
                }
              }
            }
          }
        }
      }
    },
    "/MasterProductionSchedule/$adHocSchema": {
      "get": {
        "tags": [
          "MasterProductionSchedule"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "MasterProductionSchedule_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MasterProductionSchedule"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MasterProductionSchedule"
                }
              }
            }
          }
        }
      }
    },
    "/MasterProductionSchedule/{ids}": {
      "get": {
        "tags": [
          "MasterProductionSchedule"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "MasterProductionSchedule_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MasterProductionSchedule"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MasterProductionSchedule"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MasterProductionSchedule"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "MasterProductionSchedule_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/MasterProductionSchedule/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "MasterProductionSchedule"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "MasterProductionSchedule_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/MasterProductionSchedule/{id}": {
      "get": {
        "tags": [
          "MasterProductionSchedule"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "MasterProductionSchedule_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MasterProductionSchedule"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MasterProductionSchedule"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MasterProductionSchedule"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "MasterProductionSchedule_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/MasterProductionSchedule": {
      "get": {
        "tags": [
          "MasterProductionSchedule"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "MasterProductionSchedule_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MasterProductionSchedule"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MasterProductionSchedule"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "MasterProductionSchedule"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "MasterProductionSchedule_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MasterProductionSchedule"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MasterProductionSchedule"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MasterProductionSchedule"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MasterProductionSchedule"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MasterProductionSchedule"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MasterProductionSchedule"
                }
              }
            }
          }
        }
      }
    },
    "/OrderTypes/{actionName}": {
      "post": {
        "tags": [
          "OrderTypes"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "OrderTypes_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderTypesCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderTypesCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderTypes"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderTypes"
                }
              }
            }
          }
        }
      }
    },
    "/OrderTypes/$adHocSchema": {
      "get": {
        "tags": [
          "OrderTypes"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "OrderTypes_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderTypes"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderTypes"
                }
              }
            }
          }
        }
      }
    },
    "/OrderTypes/{ids}": {
      "get": {
        "tags": [
          "OrderTypes"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "OrderTypes_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderTypes"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderTypes"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "OrderTypes"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "OrderTypes_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/OrderTypes/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "OrderTypes"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "OrderTypes_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/OrderTypes/{id}": {
      "get": {
        "tags": [
          "OrderTypes"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "OrderTypes_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderTypes"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderTypes"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "OrderTypes"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "OrderTypes_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/OrderTypes": {
      "get": {
        "tags": [
          "OrderTypes"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "OrderTypes_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderTypes"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderTypes"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "OrderTypes"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "OrderTypes_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderTypes"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderTypes"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderTypes"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderTypes"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderTypes"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderTypes"
                }
              }
            }
          }
        }
      }
    },
    "/MRPPreferences/{actionName}": {
      "post": {
        "tags": [
          "MRPPreferences"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "MRPPreferences_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MRPPreferencesCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MRPPreferencesCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPPreferences"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPPreferences"
                }
              }
            }
          }
        }
      }
    },
    "/MRPPreferences/$adHocSchema": {
      "get": {
        "tags": [
          "MRPPreferences"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "MRPPreferences_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPPreferences"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPPreferences"
                }
              }
            }
          }
        }
      }
    },
    "/MRPPreferences/{ids}": {
      "get": {
        "tags": [
          "MRPPreferences"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "MRPPreferences_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPPreferences"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPPreferences"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MRPPreferences"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "MRPPreferences_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/MRPPreferences/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "MRPPreferences"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "MRPPreferences_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/MRPPreferences/{id}": {
      "get": {
        "tags": [
          "MRPPreferences"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "MRPPreferences_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPPreferences"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPPreferences"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MRPPreferences"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "MRPPreferences_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/MRPPreferences": {
      "get": {
        "tags": [
          "MRPPreferences"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "MRPPreferences_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MRPPreferences"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MRPPreferences"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "MRPPreferences"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "MRPPreferences_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MRPPreferences"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MRPPreferences"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPPreferences"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPPreferences"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPPreferences"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPPreferences"
                }
              }
            }
          }
        }
      }
    },
    "/CreateProductionOrder/CreateProductionOrderProcess": {
      "post": {
        "tags": [
          "CreateProductionOrder"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "CreateProductionOrder_InvokeAction_CreateProductionOrderProcess",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductionOrderProcess"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductionOrderProcess"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateProductionOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateProductionOrder"
                }
              }
            }
          }
        }
      }
    },
    "/CreateProductionOrder/CreateProductionOrderProcessAll": {
      "post": {
        "tags": [
          "CreateProductionOrder"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "CreateProductionOrder_InvokeAction_CreateProductionOrderProcessAll",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductionOrderProcessAll"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductionOrderProcessAll"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateProductionOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateProductionOrder"
                }
              }
            }
          }
        }
      }
    },
    "/CreateProductionOrder/{actionName}": {
      "post": {
        "tags": [
          "CreateProductionOrder"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "CreateProductionOrder_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductionOrderCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductionOrderCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateProductionOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateProductionOrder"
                }
              }
            }
          }
        }
      }
    },
    "/CreateProductionOrder/$adHocSchema": {
      "get": {
        "tags": [
          "CreateProductionOrder"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "CreateProductionOrder_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateProductionOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateProductionOrder"
                }
              }
            }
          }
        }
      }
    },
    "/CreateProductionOrder/{ids}": {
      "get": {
        "tags": [
          "CreateProductionOrder"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "CreateProductionOrder_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateProductionOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateProductionOrder"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CreateProductionOrder"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "CreateProductionOrder_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/CreateProductionOrder/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "CreateProductionOrder"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "CreateProductionOrder_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/CreateProductionOrder/{id}": {
      "get": {
        "tags": [
          "CreateProductionOrder"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "CreateProductionOrder_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateProductionOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateProductionOrder"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CreateProductionOrder"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "CreateProductionOrder_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/CreateProductionOrder": {
      "get": {
        "tags": [
          "CreateProductionOrder"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "CreateProductionOrder_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CreateProductionOrder"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CreateProductionOrder"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CreateProductionOrder"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "CreateProductionOrder_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductionOrder"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductionOrder"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateProductionOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateProductionOrder"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateProductionOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateProductionOrder"
                }
              }
            }
          }
        }
      }
    },
    "/CostTransaction/{actionName}": {
      "post": {
        "tags": [
          "CostTransaction"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "CostTransaction_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CostTransactionCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CostTransactionCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostTransaction"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostTransaction"
                }
              }
            }
          }
        }
      }
    },
    "/CostTransaction/$adHocSchema": {
      "get": {
        "tags": [
          "CostTransaction"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "CostTransaction_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostTransaction"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostTransaction"
                }
              }
            }
          }
        }
      }
    },
    "/CostTransaction/{ids}": {
      "get": {
        "tags": [
          "CostTransaction"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "CostTransaction_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostTransaction"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostTransaction"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CostTransaction"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "CostTransaction_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/CostTransaction/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "CostTransaction"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "CostTransaction_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/CostTransaction/{id}": {
      "get": {
        "tags": [
          "CostTransaction"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "CostTransaction_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostTransaction"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostTransaction"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CostTransaction"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "CostTransaction_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/CostTransaction": {
      "get": {
        "tags": [
          "CostTransaction"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "CostTransaction_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CostTransaction"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CostTransaction"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CostTransaction"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "CostTransaction_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CostTransaction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CostTransaction"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostTransaction"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostTransaction"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostTransaction"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostTransaction"
                }
              }
            }
          }
        }
      }
    },
    "/Shift/{actionName}": {
      "post": {
        "tags": [
          "Shift"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Shift_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShiftCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ShiftCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shift"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shift"
                }
              }
            }
          }
        }
      }
    },
    "/Shift/$adHocSchema": {
      "get": {
        "tags": [
          "Shift"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "Shift_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shift"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shift"
                }
              }
            }
          }
        }
      }
    },
    "/Shift/{ids}": {
      "get": {
        "tags": [
          "Shift"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "Shift_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shift"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shift"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Shift"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "Shift_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/Shift/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Shift"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "Shift_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/Shift/{id}": {
      "get": {
        "tags": [
          "Shift"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "Shift_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shift"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shift"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Shift"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "Shift_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/Shift": {
      "get": {
        "tags": [
          "Shift"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "Shift_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Shift"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Shift"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Shift"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "Shift_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Shift"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Shift"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shift"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shift"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shift"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shift"
                }
              }
            }
          }
        }
      }
    },
    "/ProductionOrderDetail/SetProductionOrderDetailMaterialsCompleted": {
      "post": {
        "tags": [
          "ProductionOrderDetail"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ProductionOrderDetail_InvokeAction_SetProductionOrderDetailMaterialsCompleted",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetProductionOrderDetailMaterialsCompleted"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SetProductionOrderDetailMaterialsCompleted"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionOrderDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionOrderDetail"
                }
              }
            }
          }
        }
      }
    },
    "/ProductionOrderDetail/SetProductionOrderDetailMaterialsOpen": {
      "post": {
        "tags": [
          "ProductionOrderDetail"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ProductionOrderDetail_InvokeAction_SetProductionOrderDetailMaterialsOpen",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetProductionOrderDetailMaterialsOpen"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SetProductionOrderDetailMaterialsOpen"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionOrderDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionOrderDetail"
                }
              }
            }
          }
        }
      }
    },
    "/ProductionOrderDetail/{actionName}": {
      "post": {
        "tags": [
          "ProductionOrderDetail"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ProductionOrderDetail_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductionOrderDetailCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductionOrderDetailCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionOrderDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionOrderDetail"
                }
              }
            }
          }
        }
      }
    },
    "/ProductionOrderDetail/$adHocSchema": {
      "get": {
        "tags": [
          "ProductionOrderDetail"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "ProductionOrderDetail_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionOrderDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionOrderDetail"
                }
              }
            }
          }
        }
      }
    },
    "/ProductionOrderDetail/{ids}": {
      "get": {
        "tags": [
          "ProductionOrderDetail"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "ProductionOrderDetail_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionOrderDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionOrderDetail"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProductionOrderDetail"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "ProductionOrderDetail_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/ProductionOrderDetail/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "ProductionOrderDetail"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "ProductionOrderDetail_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/ProductionOrderDetail/{id}": {
      "get": {
        "tags": [
          "ProductionOrderDetail"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "ProductionOrderDetail_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionOrderDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionOrderDetail"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProductionOrderDetail"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "ProductionOrderDetail_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/ProductionOrderDetail": {
      "get": {
        "tags": [
          "ProductionOrderDetail"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "ProductionOrderDetail_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductionOrderDetail"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductionOrderDetail"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProductionOrderDetail"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "ProductionOrderDetail_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductionOrderDetail"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductionOrderDetail"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionOrderDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionOrderDetail"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionOrderDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionOrderDetail"
                }
              }
            }
          }
        }
      }
    },
    "/ConfigurationFeature/{actionName}": {
      "post": {
        "tags": [
          "ConfigurationFeature"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ConfigurationFeature_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationFeatureCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationFeatureCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationFeature"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationFeature"
                }
              }
            }
          }
        }
      }
    },
    "/ConfigurationFeature/$adHocSchema": {
      "get": {
        "tags": [
          "ConfigurationFeature"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "ConfigurationFeature_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationFeature"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationFeature"
                }
              }
            }
          }
        }
      }
    },
    "/ConfigurationFeature/{ids}": {
      "get": {
        "tags": [
          "ConfigurationFeature"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "ConfigurationFeature_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationFeature"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationFeature"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ConfigurationFeature"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "ConfigurationFeature_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/ConfigurationFeature/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "ConfigurationFeature"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "ConfigurationFeature_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/ConfigurationFeature/{id}": {
      "get": {
        "tags": [
          "ConfigurationFeature"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "ConfigurationFeature_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationFeature"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationFeature"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ConfigurationFeature"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "ConfigurationFeature_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/ConfigurationFeature": {
      "get": {
        "tags": [
          "ConfigurationFeature"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "ConfigurationFeature_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConfigurationFeature"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConfigurationFeature"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ConfigurationFeature"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "ConfigurationFeature_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationFeature"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationFeature"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationFeature"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationFeature"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationFeature"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationFeature"
                }
              }
            }
          }
        }
      }
    },
    "/CriticalMaterials/{actionName}": {
      "post": {
        "tags": [
          "CriticalMaterials"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "CriticalMaterials_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CriticalMaterialsCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CriticalMaterialsCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CriticalMaterials"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CriticalMaterials"
                }
              }
            }
          }
        }
      }
    },
    "/CriticalMaterials/$adHocSchema": {
      "get": {
        "tags": [
          "CriticalMaterials"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "CriticalMaterials_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CriticalMaterials"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CriticalMaterials"
                }
              }
            }
          }
        }
      }
    },
    "/CriticalMaterials/{ids}": {
      "get": {
        "tags": [
          "CriticalMaterials"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "CriticalMaterials_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CriticalMaterials"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CriticalMaterials"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CriticalMaterials"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "CriticalMaterials_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/CriticalMaterials/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "CriticalMaterials"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "CriticalMaterials_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/CriticalMaterials/{id}": {
      "get": {
        "tags": [
          "CriticalMaterials"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "CriticalMaterials_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CriticalMaterials"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CriticalMaterials"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CriticalMaterials"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "CriticalMaterials_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/CriticalMaterials": {
      "get": {
        "tags": [
          "CriticalMaterials"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "CriticalMaterials_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CriticalMaterials"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CriticalMaterials"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CriticalMaterials"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "CriticalMaterials_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CriticalMaterials"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CriticalMaterials"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CriticalMaterials"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CriticalMaterials"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CriticalMaterials"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CriticalMaterials"
                }
              }
            }
          }
        }
      }
    },
    "/Estimate/AddHistoryComment": {
      "post": {
        "tags": [
          "Estimate"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Estimate_InvokeAction_AddHistoryComment",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddHistoryComment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddHistoryComment"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Estimate"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Estimate"
                }
              }
            }
          }
        }
      }
    },
    "/Estimate/MarkAsPrimary": {
      "post": {
        "tags": [
          "Estimate"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Estimate_InvokeAction_MarkAsPrimary",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkAsPrimary"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkAsPrimary"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Estimate"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Estimate"
                }
              }
            }
          }
        }
      }
    },
    "/Estimate/{actionName}": {
      "post": {
        "tags": [
          "Estimate"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Estimate_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EstimateCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EstimateCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Estimate"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Estimate"
                }
              }
            }
          }
        }
      }
    },
    "/Estimate/$adHocSchema": {
      "get": {
        "tags": [
          "Estimate"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "Estimate_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Estimate"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Estimate"
                }
              }
            }
          }
        }
      }
    },
    "/Estimate/{ids}": {
      "get": {
        "tags": [
          "Estimate"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "Estimate_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Estimate"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Estimate"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Estimate"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "Estimate_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/Estimate/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Estimate"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "Estimate_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/Estimate/{id}": {
      "get": {
        "tags": [
          "Estimate"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "Estimate_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Estimate"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Estimate"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Estimate"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "Estimate_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/Estimate": {
      "get": {
        "tags": [
          "Estimate"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "Estimate_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Estimate"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Estimate"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Estimate"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "Estimate_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Estimate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Estimate"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Estimate"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Estimate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Estimate"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Estimate"
                }
              }
            }
          }
        }
      }
    },
    "/LaborCodes/{actionName}": {
      "post": {
        "tags": [
          "LaborCodes"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "LaborCodes_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LaborCodesCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LaborCodesCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaborCodes"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaborCodes"
                }
              }
            }
          }
        }
      }
    },
    "/LaborCodes/$adHocSchema": {
      "get": {
        "tags": [
          "LaborCodes"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "LaborCodes_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaborCodes"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaborCodes"
                }
              }
            }
          }
        }
      }
    },
    "/LaborCodes/{ids}": {
      "get": {
        "tags": [
          "LaborCodes"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "LaborCodes_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaborCodes"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaborCodes"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "LaborCodes"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "LaborCodes_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/LaborCodes/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "LaborCodes"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "LaborCodes_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/LaborCodes/{id}": {
      "get": {
        "tags": [
          "LaborCodes"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "LaborCodes_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaborCodes"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaborCodes"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "LaborCodes"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "LaborCodes_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/LaborCodes": {
      "get": {
        "tags": [
          "LaborCodes"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "LaborCodes_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LaborCodes"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LaborCodes"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "LaborCodes"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "LaborCodes_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LaborCodes"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LaborCodes"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaborCodes"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaborCodes"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaborCodes"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaborCodes"
                }
              }
            }
          }
        }
      }
    },
    "/BomAttributes/{actionName}": {
      "post": {
        "tags": [
          "BomAttributes"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "BomAttributes_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BomAttributesCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BomAttributesCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BomAttributes"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BomAttributes"
                }
              }
            }
          }
        }
      }
    },
    "/BomAttributes/$adHocSchema": {
      "get": {
        "tags": [
          "BomAttributes"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "BomAttributes_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BomAttributes"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BomAttributes"
                }
              }
            }
          }
        }
      }
    },
    "/BomAttributes/{ids}": {
      "get": {
        "tags": [
          "BomAttributes"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "BomAttributes_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BomAttributes"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BomAttributes"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BomAttributes"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "BomAttributes_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/BomAttributes/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "BomAttributes"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "BomAttributes_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/BomAttributes/{id}": {
      "get": {
        "tags": [
          "BomAttributes"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "BomAttributes_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BomAttributes"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BomAttributes"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BomAttributes"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "BomAttributes_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/BomAttributes": {
      "get": {
        "tags": [
          "BomAttributes"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "BomAttributes_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BomAttributes"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BomAttributes"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "BomAttributes"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "BomAttributes_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BomAttributes"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BomAttributes"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BomAttributes"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BomAttributes"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BomAttributes"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BomAttributes"
                }
              }
            }
          }
        }
      }
    },
    "/WorkCenterCrewSchedule/{actionName}": {
      "post": {
        "tags": [
          "WorkCenterCrewSchedule"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "WorkCenterCrewSchedule_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkCenterCrewScheduleCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkCenterCrewScheduleCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkCenterCrewSchedule"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkCenterCrewSchedule"
                }
              }
            }
          }
        }
      }
    },
    "/WorkCenterCrewSchedule/$adHocSchema": {
      "get": {
        "tags": [
          "WorkCenterCrewSchedule"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "WorkCenterCrewSchedule_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkCenterCrewSchedule"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkCenterCrewSchedule"
                }
              }
            }
          }
        }
      }
    },
    "/WorkCenterCrewSchedule/{ids}": {
      "get": {
        "tags": [
          "WorkCenterCrewSchedule"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "WorkCenterCrewSchedule_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkCenterCrewSchedule"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkCenterCrewSchedule"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WorkCenterCrewSchedule"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "WorkCenterCrewSchedule_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/WorkCenterCrewSchedule/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "WorkCenterCrewSchedule"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "WorkCenterCrewSchedule_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/WorkCenterCrewSchedule/{id}": {
      "get": {
        "tags": [
          "WorkCenterCrewSchedule"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "WorkCenterCrewSchedule_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkCenterCrewSchedule"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkCenterCrewSchedule"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WorkCenterCrewSchedule"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "WorkCenterCrewSchedule_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/WorkCenterCrewSchedule": {
      "get": {
        "tags": [
          "WorkCenterCrewSchedule"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "WorkCenterCrewSchedule_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkCenterCrewSchedule"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkCenterCrewSchedule"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "WorkCenterCrewSchedule"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "WorkCenterCrewSchedule_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkCenterCrewSchedule"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkCenterCrewSchedule"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkCenterCrewSchedule"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkCenterCrewSchedule"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkCenterCrewSchedule"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkCenterCrewSchedule"
                }
              }
            }
          }
        }
      }
    },
    "/ItemWhereUsedInquiry/{actionName}": {
      "post": {
        "tags": [
          "ItemWhereUsedInquiry"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ItemWhereUsedInquiry_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemWhereUsedInquiryCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemWhereUsedInquiryCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemWhereUsedInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemWhereUsedInquiry"
                }
              }
            }
          }
        }
      }
    },
    "/ItemWhereUsedInquiry/$adHocSchema": {
      "get": {
        "tags": [
          "ItemWhereUsedInquiry"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "ItemWhereUsedInquiry_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemWhereUsedInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemWhereUsedInquiry"
                }
              }
            }
          }
        }
      }
    },
    "/ItemWhereUsedInquiry/{ids}": {
      "get": {
        "tags": [
          "ItemWhereUsedInquiry"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "ItemWhereUsedInquiry_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemWhereUsedInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemWhereUsedInquiry"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ItemWhereUsedInquiry"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "ItemWhereUsedInquiry_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/ItemWhereUsedInquiry/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "ItemWhereUsedInquiry"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "ItemWhereUsedInquiry_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/ItemWhereUsedInquiry/{id}": {
      "get": {
        "tags": [
          "ItemWhereUsedInquiry"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "ItemWhereUsedInquiry_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemWhereUsedInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemWhereUsedInquiry"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ItemWhereUsedInquiry"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "ItemWhereUsedInquiry_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/ItemWhereUsedInquiry": {
      "get": {
        "tags": [
          "ItemWhereUsedInquiry"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "ItemWhereUsedInquiry_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemWhereUsedInquiry"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemWhereUsedInquiry"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ItemWhereUsedInquiry"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "ItemWhereUsedInquiry_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemWhereUsedInquiry"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemWhereUsedInquiry"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemWhereUsedInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemWhereUsedInquiry"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemWhereUsedInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemWhereUsedInquiry"
                }
              }
            }
          }
        }
      }
    },
    "/MRPException/{actionName}": {
      "post": {
        "tags": [
          "MRPException"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "MRPException_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MRPExceptionCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MRPExceptionCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPException"
                }
              }
            }
          }
        }
      }
    },
    "/MRPException/$adHocSchema": {
      "get": {
        "tags": [
          "MRPException"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "MRPException_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPException"
                }
              }
            }
          }
        }
      }
    },
    "/MRPException/{ids}": {
      "get": {
        "tags": [
          "MRPException"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "MRPException_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPException"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MRPException"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "MRPException_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/MRPException/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "MRPException"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "MRPException_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/MRPException/{id}": {
      "get": {
        "tags": [
          "MRPException"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "MRPException_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPException"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MRPException"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "MRPException_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/MRPException": {
      "get": {
        "tags": [
          "MRPException"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "MRPException_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MRPException"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MRPException"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "MRPException"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "MRPException_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MRPException"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MRPException"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPException"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPException"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MRPException"
                }
              }
            }
          }
        }
      }
    },
    "/EngineeringChangeOrder/EngineeringChangeOrderApproval": {
      "post": {
        "tags": [
          "EngineeringChangeOrder"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "EngineeringChangeOrder_InvokeAction_EngineeringChangeOrderApproval",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EngineeringChangeOrderApproval"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EngineeringChangeOrderApproval"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngineeringChangeOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngineeringChangeOrder"
                }
              }
            }
          }
        }
      }
    },
    "/EngineeringChangeOrder/EngineeringChangeOrderHold": {
      "post": {
        "tags": [
          "EngineeringChangeOrder"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "EngineeringChangeOrder_InvokeAction_EngineeringChangeOrderHold",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EngineeringChangeOrderHold"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EngineeringChangeOrderHold"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngineeringChangeOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngineeringChangeOrder"
                }
              }
            }
          }
        }
      }
    },
    "/EngineeringChangeOrder/EngineeringChangeOrderReject": {
      "post": {
        "tags": [
          "EngineeringChangeOrder"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "EngineeringChangeOrder_InvokeAction_EngineeringChangeOrderReject",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EngineeringChangeOrderReject"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EngineeringChangeOrderReject"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngineeringChangeOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngineeringChangeOrder"
                }
              }
            }
          }
        }
      }
    },
    "/EngineeringChangeOrder/EngineeringChangeOrderSubmit": {
      "post": {
        "tags": [
          "EngineeringChangeOrder"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "EngineeringChangeOrder_InvokeAction_EngineeringChangeOrderSubmit",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EngineeringChangeOrderSubmit"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EngineeringChangeOrderSubmit"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngineeringChangeOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngineeringChangeOrder"
                }
              }
            }
          }
        }
      }
    },
    "/EngineeringChangeOrder/EngineeringChangeOrderCommitChanges": {
      "post": {
        "tags": [
          "EngineeringChangeOrder"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "EngineeringChangeOrder_InvokeAction_EngineeringChangeOrderCommitChanges",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EngineeringChangeOrderCommitChanges"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EngineeringChangeOrderCommitChanges"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngineeringChangeOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngineeringChangeOrder"
                }
              }
            }
          }
        }
      }
    },
    "/EngineeringChangeOrder/{actionName}": {
      "post": {
        "tags": [
          "EngineeringChangeOrder"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "EngineeringChangeOrder_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EngineeringChangeOrderCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EngineeringChangeOrderCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngineeringChangeOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngineeringChangeOrder"
                }
              }
            }
          }
        }
      }
    },
    "/EngineeringChangeOrder/$adHocSchema": {
      "get": {
        "tags": [
          "EngineeringChangeOrder"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "EngineeringChangeOrder_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngineeringChangeOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngineeringChangeOrder"
                }
              }
            }
          }
        }
      }
    },
    "/EngineeringChangeOrder/{ids}": {
      "get": {
        "tags": [
          "EngineeringChangeOrder"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "EngineeringChangeOrder_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngineeringChangeOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngineeringChangeOrder"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EngineeringChangeOrder"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "EngineeringChangeOrder_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/EngineeringChangeOrder/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "EngineeringChangeOrder"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "EngineeringChangeOrder_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/EngineeringChangeOrder/{id}": {
      "get": {
        "tags": [
          "EngineeringChangeOrder"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "EngineeringChangeOrder_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngineeringChangeOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngineeringChangeOrder"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EngineeringChangeOrder"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "EngineeringChangeOrder_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/EngineeringChangeOrder": {
      "get": {
        "tags": [
          "EngineeringChangeOrder"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "EngineeringChangeOrder_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EngineeringChangeOrder"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EngineeringChangeOrder"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "EngineeringChangeOrder"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "EngineeringChangeOrder_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EngineeringChangeOrder"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EngineeringChangeOrder"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngineeringChangeOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngineeringChangeOrder"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngineeringChangeOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngineeringChangeOrder"
                }
              }
            }
          }
        }
      }
    },
    "/Forecast/{actionName}": {
      "post": {
        "tags": [
          "Forecast"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Forecast_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForecastCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ForecastCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forecast"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forecast"
                }
              }
            }
          }
        }
      }
    },
    "/Forecast/$adHocSchema": {
      "get": {
        "tags": [
          "Forecast"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "Forecast_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forecast"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forecast"
                }
              }
            }
          }
        }
      }
    },
    "/Forecast/{ids}": {
      "get": {
        "tags": [
          "Forecast"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "Forecast_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forecast"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forecast"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Forecast"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "Forecast_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/Forecast/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Forecast"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "Forecast_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/Forecast/{id}": {
      "get": {
        "tags": [
          "Forecast"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "Forecast_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forecast"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forecast"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Forecast"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "Forecast_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/Forecast": {
      "get": {
        "tags": [
          "Forecast"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "Forecast_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Forecast"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Forecast"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Forecast"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "Forecast_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Forecast"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Forecast"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forecast"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forecast"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forecast"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Forecast"
                }
              }
            }
          }
        }
      }
    },
    "/Tool/{actionName}": {
      "post": {
        "tags": [
          "Tool"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Tool_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ToolCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ToolCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tool"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tool"
                }
              }
            }
          }
        }
      }
    },
    "/Tool/$adHocSchema": {
      "get": {
        "tags": [
          "Tool"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "Tool_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tool"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tool"
                }
              }
            }
          }
        }
      }
    },
    "/Tool/{ids}": {
      "get": {
        "tags": [
          "Tool"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "Tool_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tool"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tool"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tool"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "Tool_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/Tool/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Tool"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "Tool_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/Tool/{id}": {
      "get": {
        "tags": [
          "Tool"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "Tool_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tool"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tool"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tool"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "Tool_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/Tool": {
      "get": {
        "tags": [
          "Tool"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "Tool_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tool"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tool"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Tool"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "Tool_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tool"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Tool"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tool"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tool"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tool"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tool"
                }
              }
            }
          }
        }
      }
    },
    "/ReleaseProductionOrders/ReleaseProductionOrdersProcess": {
      "post": {
        "tags": [
          "ReleaseProductionOrders"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ReleaseProductionOrders_InvokeAction_ReleaseProductionOrdersProcess",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseProductionOrdersProcess"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseProductionOrdersProcess"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReleaseProductionOrders"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReleaseProductionOrders"
                }
              }
            }
          }
        }
      }
    },
    "/ReleaseProductionOrders/ReleaseProductionOrdersProcessAll": {
      "post": {
        "tags": [
          "ReleaseProductionOrders"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ReleaseProductionOrders_InvokeAction_ReleaseProductionOrdersProcessAll",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseProductionOrdersProcessAll"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseProductionOrdersProcessAll"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReleaseProductionOrders"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReleaseProductionOrders"
                }
              }
            }
          }
        }
      }
    },
    "/ReleaseProductionOrders/{actionName}": {
      "post": {
        "tags": [
          "ReleaseProductionOrders"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ReleaseProductionOrders_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseProductionOrdersCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseProductionOrdersCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReleaseProductionOrders"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReleaseProductionOrders"
                }
              }
            }
          }
        }
      }
    },
    "/ReleaseProductionOrders/$adHocSchema": {
      "get": {
        "tags": [
          "ReleaseProductionOrders"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "ReleaseProductionOrders_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReleaseProductionOrders"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReleaseProductionOrders"
                }
              }
            }
          }
        }
      }
    },
    "/ReleaseProductionOrders/{ids}": {
      "get": {
        "tags": [
          "ReleaseProductionOrders"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "ReleaseProductionOrders_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReleaseProductionOrders"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReleaseProductionOrders"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ReleaseProductionOrders"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "ReleaseProductionOrders_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/ReleaseProductionOrders/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "ReleaseProductionOrders"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "ReleaseProductionOrders_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/ReleaseProductionOrders/{id}": {
      "get": {
        "tags": [
          "ReleaseProductionOrders"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "ReleaseProductionOrders_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReleaseProductionOrders"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReleaseProductionOrders"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ReleaseProductionOrders"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "ReleaseProductionOrders_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/ReleaseProductionOrders": {
      "get": {
        "tags": [
          "ReleaseProductionOrders"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "ReleaseProductionOrders_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReleaseProductionOrders"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReleaseProductionOrders"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ReleaseProductionOrders"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "ReleaseProductionOrders_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseProductionOrders"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseProductionOrders"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReleaseProductionOrders"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReleaseProductionOrders"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReleaseProductionOrders"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReleaseProductionOrders"
                }
              }
            }
          }
        }
      }
    },
    "/CostRoll/Archive": {
      "post": {
        "tags": [
          "CostRoll"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "CostRoll_InvokeAction_Archive",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Archive"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Archive"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostRoll"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostRoll"
                }
              }
            }
          }
        }
      }
    },
    "/CostRoll/RollCosts": {
      "post": {
        "tags": [
          "CostRoll"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "CostRoll_InvokeAction_RollCosts",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RollCosts"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RollCosts"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostRoll"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostRoll"
                }
              }
            }
          }
        }
      }
    },
    "/CostRoll/UpdatePending": {
      "post": {
        "tags": [
          "CostRoll"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "CostRoll_InvokeAction_UpdatePending",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePending"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePending"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostRoll"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostRoll"
                }
              }
            }
          }
        }
      }
    },
    "/CostRoll/{actionName}": {
      "post": {
        "tags": [
          "CostRoll"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "CostRoll_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CostRollCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CostRollCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostRoll"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostRoll"
                }
              }
            }
          }
        }
      }
    },
    "/CostRoll/$adHocSchema": {
      "get": {
        "tags": [
          "CostRoll"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "CostRoll_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostRoll"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostRoll"
                }
              }
            }
          }
        }
      }
    },
    "/CostRoll/{ids}": {
      "get": {
        "tags": [
          "CostRoll"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "CostRoll_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostRoll"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostRoll"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CostRoll"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "CostRoll_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/CostRoll/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "CostRoll"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "CostRoll_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/CostRoll/{id}": {
      "get": {
        "tags": [
          "CostRoll"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "CostRoll_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostRoll"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostRoll"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CostRoll"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "CostRoll_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/CostRoll": {
      "get": {
        "tags": [
          "CostRoll"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "CostRoll_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CostRoll"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CostRoll"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CostRoll"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "CostRoll_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CostRoll"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CostRoll"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostRoll"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostRoll"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostRoll"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostRoll"
                }
              }
            }
          }
        }
      }
    },
    "/ProductionOrder/CalculateProductionOrderPlanCost": {
      "post": {
        "tags": [
          "ProductionOrder"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ProductionOrder_InvokeAction_CalculateProductionOrderPlanCost",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalculateProductionOrderPlanCost"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CalculateProductionOrderPlanCost"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionOrder"
                }
              }
            }
          }
        }
      }
    },
    "/ProductionOrder/CancelProductionOrder": {
      "post": {
        "tags": [
          "ProductionOrder"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ProductionOrder_InvokeAction_CancelProductionOrder",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelProductionOrder"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelProductionOrder"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionOrder"
                }
              }
            }
          }
        }
      }
    },
    "/ProductionOrder/CompleteProductionOrder": {
      "post": {
        "tags": [
          "ProductionOrder"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ProductionOrder_InvokeAction_CompleteProductionOrder",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompleteProductionOrder"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CompleteProductionOrder"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionOrder"
                }
              }
            }
          }
        }
      }
    },
    "/ProductionOrder/CreateLinkedProductionOrders": {
      "post": {
        "tags": [
          "ProductionOrder"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ProductionOrder_InvokeAction_CreateLinkedProductionOrders",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLinkedProductionOrders"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLinkedProductionOrders"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionOrder"
                }
              }
            }
          }
        }
      }
    },
    "/ProductionOrder/PlanProductionOrder": {
      "post": {
        "tags": [
          "ProductionOrder"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ProductionOrder_InvokeAction_PlanProductionOrder",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlanProductionOrder"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PlanProductionOrder"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionOrder"
                }
              }
            }
          }
        }
      }
    },
    "/ProductionOrder/ReleaseProductionOrder": {
      "post": {
        "tags": [
          "ProductionOrder"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ProductionOrder_InvokeAction_ReleaseProductionOrder",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseProductionOrder"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseProductionOrder"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionOrder"
                }
              }
            }
          }
        }
      }
    },
    "/ProductionOrder/ScheduleProductionOrder": {
      "post": {
        "tags": [
          "ProductionOrder"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ProductionOrder_InvokeAction_ScheduleProductionOrder",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleProductionOrder"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleProductionOrder"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionOrder"
                }
              }
            }
          }
        }
      }
    },
    "/ProductionOrder/FirmProductionOrder": {
      "post": {
        "tags": [
          "ProductionOrder"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ProductionOrder_InvokeAction_FirmProductionOrder",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FirmProductionOrder"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FirmProductionOrder"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionOrder"
                }
              }
            }
          }
        }
      }
    },
    "/ProductionOrder/UndoFirmProductionOrder": {
      "post": {
        "tags": [
          "ProductionOrder"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ProductionOrder_InvokeAction_UndoFirmProductionOrder",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UndoFirmProductionOrder"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UndoFirmProductionOrder"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionOrder"
                }
              }
            }
          }
        }
      }
    },
    "/ProductionOrder/SetProductionOrderMaterialsCompleted": {
      "post": {
        "tags": [
          "ProductionOrder"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ProductionOrder_InvokeAction_SetProductionOrderMaterialsCompleted",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetProductionOrderMaterialsCompleted"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SetProductionOrderMaterialsCompleted"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionOrder"
                }
              }
            }
          }
        }
      }
    },
    "/ProductionOrder/SetProductionOrderMaterialsOpen": {
      "post": {
        "tags": [
          "ProductionOrder"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ProductionOrder_InvokeAction_SetProductionOrderMaterialsOpen",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetProductionOrderMaterialsOpen"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SetProductionOrderMaterialsOpen"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionOrder"
                }
              }
            }
          }
        }
      }
    },
    "/ProductionOrder/LockOrder": {
      "post": {
        "tags": [
          "ProductionOrder"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ProductionOrder_InvokeAction_LockOrder",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LockOrder"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LockOrder"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionOrder"
                }
              }
            }
          }
        }
      }
    },
    "/ProductionOrder/UnlockOrder": {
      "post": {
        "tags": [
          "ProductionOrder"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ProductionOrder_InvokeAction_UnlockOrder",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnlockOrder"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UnlockOrder"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionOrder"
                }
              }
            }
          }
        }
      }
    },
    "/ProductionOrder/{actionName}": {
      "post": {
        "tags": [
          "ProductionOrder"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ProductionOrder_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductionOrderCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductionOrderCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionOrder"
                }
              }
            }
          }
        }
      }
    },
    "/ProductionOrder/$adHocSchema": {
      "get": {
        "tags": [
          "ProductionOrder"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "ProductionOrder_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionOrder"
                }
              }
            }
          }
        }
      }
    },
    "/ProductionOrder/{ids}": {
      "get": {
        "tags": [
          "ProductionOrder"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "ProductionOrder_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionOrder"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProductionOrder"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "ProductionOrder_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/ProductionOrder/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "ProductionOrder"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "ProductionOrder_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/ProductionOrder/{id}": {
      "get": {
        "tags": [
          "ProductionOrder"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "ProductionOrder_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionOrder"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProductionOrder"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "ProductionOrder_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/ProductionOrder": {
      "get": {
        "tags": [
          "ProductionOrder"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "ProductionOrder_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductionOrder"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductionOrder"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProductionOrder"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "ProductionOrder_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductionOrder"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductionOrder"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionOrder"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionOrder"
                }
              }
            }
          }
        }
      }
    },
    "/LaborEntry/ReleaseLaborEntry": {
      "post": {
        "tags": [
          "LaborEntry"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "LaborEntry_InvokeAction_ReleaseLaborEntry",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseLaborEntry"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseLaborEntry"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaborEntry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaborEntry"
                }
              }
            }
          }
        }
      }
    },
    "/LaborEntry/{actionName}": {
      "post": {
        "tags": [
          "LaborEntry"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "LaborEntry_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LaborEntryCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LaborEntryCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaborEntry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaborEntry"
                }
              }
            }
          }
        }
      }
    },
    "/LaborEntry/$adHocSchema": {
      "get": {
        "tags": [
          "LaborEntry"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "LaborEntry_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaborEntry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaborEntry"
                }
              }
            }
          }
        }
      }
    },
    "/LaborEntry/{ids}": {
      "get": {
        "tags": [
          "LaborEntry"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "LaborEntry_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaborEntry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaborEntry"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "LaborEntry"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "LaborEntry_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/LaborEntry/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "LaborEntry"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "LaborEntry_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/LaborEntry/{id}": {
      "get": {
        "tags": [
          "LaborEntry"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "LaborEntry_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaborEntry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaborEntry"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "LaborEntry"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "LaborEntry_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/LaborEntry": {
      "get": {
        "tags": [
          "LaborEntry"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "LaborEntry_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LaborEntry"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LaborEntry"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "LaborEntry"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "LaborEntry_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LaborEntry"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LaborEntry"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaborEntry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaborEntry"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaborEntry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaborEntry"
                }
              }
            }
          }
        }
      }
    },
    "/Machine/{actionName}": {
      "post": {
        "tags": [
          "Machine"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Machine_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MachineCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MachineCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Machine"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Machine"
                }
              }
            }
          }
        }
      }
    },
    "/Machine/$adHocSchema": {
      "get": {
        "tags": [
          "Machine"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "Machine_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Machine"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Machine"
                }
              }
            }
          }
        }
      }
    },
    "/Machine/{ids}": {
      "get": {
        "tags": [
          "Machine"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "Machine_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Machine"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Machine"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Machine"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "Machine_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/Machine/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Machine"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "Machine_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/Machine/{id}": {
      "get": {
        "tags": [
          "Machine"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "Machine_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Machine"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Machine"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Machine"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "Machine_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/Machine": {
      "get": {
        "tags": [
          "Machine"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "Machine_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Machine"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Machine"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Machine"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "Machine_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Machine"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Machine"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Machine"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Machine"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Machine"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Machine"
                }
              }
            }
          }
        }
      }
    },
    "/Overhead/{actionName}": {
      "post": {
        "tags": [
          "Overhead"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Overhead_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OverheadCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OverheadCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Overhead"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Overhead"
                }
              }
            }
          }
        }
      }
    },
    "/Overhead/$adHocSchema": {
      "get": {
        "tags": [
          "Overhead"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "Overhead_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Overhead"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Overhead"
                }
              }
            }
          }
        }
      }
    },
    "/Overhead/{ids}": {
      "get": {
        "tags": [
          "Overhead"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "Overhead_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Overhead"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Overhead"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Overhead"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "Overhead_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/Overhead/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Overhead"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "Overhead_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/Overhead/{id}": {
      "get": {
        "tags": [
          "Overhead"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "Overhead_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Overhead"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Overhead"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Overhead"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "Overhead_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/Overhead": {
      "get": {
        "tags": [
          "Overhead"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "Overhead_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Overhead"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Overhead"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Overhead"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "Overhead_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Overhead"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Overhead"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Overhead"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Overhead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Overhead"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Overhead"
                }
              }
            }
          }
        }
      }
    },
    "/CloseProductionOrders/CloseProductionOrdersProcess": {
      "post": {
        "tags": [
          "CloseProductionOrders"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "CloseProductionOrders_InvokeAction_CloseProductionOrdersProcess",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CloseProductionOrdersProcess"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CloseProductionOrdersProcess"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloseProductionOrders"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloseProductionOrders"
                }
              }
            }
          }
        }
      }
    },
    "/CloseProductionOrders/CloseProductionOrdersProcessAll": {
      "post": {
        "tags": [
          "CloseProductionOrders"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "CloseProductionOrders_InvokeAction_CloseProductionOrdersProcessAll",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CloseProductionOrdersProcessAll"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CloseProductionOrdersProcessAll"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloseProductionOrders"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloseProductionOrders"
                }
              }
            }
          }
        }
      }
    },
    "/CloseProductionOrders/{actionName}": {
      "post": {
        "tags": [
          "CloseProductionOrders"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "CloseProductionOrders_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CloseProductionOrdersCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CloseProductionOrdersCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloseProductionOrders"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloseProductionOrders"
                }
              }
            }
          }
        }
      }
    },
    "/CloseProductionOrders/$adHocSchema": {
      "get": {
        "tags": [
          "CloseProductionOrders"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "CloseProductionOrders_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloseProductionOrders"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloseProductionOrders"
                }
              }
            }
          }
        }
      }
    },
    "/CloseProductionOrders/{ids}": {
      "get": {
        "tags": [
          "CloseProductionOrders"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "CloseProductionOrders_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloseProductionOrders"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloseProductionOrders"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CloseProductionOrders"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "CloseProductionOrders_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/CloseProductionOrders/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "CloseProductionOrders"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "CloseProductionOrders_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/CloseProductionOrders/{id}": {
      "get": {
        "tags": [
          "CloseProductionOrders"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "CloseProductionOrders_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloseProductionOrders"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloseProductionOrders"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CloseProductionOrders"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "CloseProductionOrders_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/CloseProductionOrders": {
      "get": {
        "tags": [
          "CloseProductionOrders"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "CloseProductionOrders_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CloseProductionOrders"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CloseProductionOrders"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CloseProductionOrders"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "CloseProductionOrders_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CloseProductionOrders"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CloseProductionOrders"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloseProductionOrders"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloseProductionOrders"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloseProductionOrders"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloseProductionOrders"
                }
              }
            }
          }
        }
      }
    },
    "/LateAssignment/{actionName}": {
      "post": {
        "tags": [
          "LateAssignment"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "LateAssignment_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LateAssignmentCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LateAssignmentCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LateAssignment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LateAssignment"
                }
              }
            }
          }
        }
      }
    },
    "/LateAssignment/$adHocSchema": {
      "get": {
        "tags": [
          "LateAssignment"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "LateAssignment_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LateAssignment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LateAssignment"
                }
              }
            }
          }
        }
      }
    },
    "/LateAssignment/{ids}": {
      "get": {
        "tags": [
          "LateAssignment"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "LateAssignment_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LateAssignment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LateAssignment"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "LateAssignment"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "LateAssignment_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/LateAssignment/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "LateAssignment"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "LateAssignment_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/LateAssignment/{id}": {
      "get": {
        "tags": [
          "LateAssignment"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "LateAssignment_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LateAssignment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LateAssignment"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "LateAssignment"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "LateAssignment_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/LateAssignment": {
      "get": {
        "tags": [
          "LateAssignment"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "LateAssignment_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LateAssignment"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LateAssignment"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "LateAssignment"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "LateAssignment_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LateAssignment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LateAssignment"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LateAssignment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LateAssignment"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LateAssignment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LateAssignment"
                }
              }
            }
          }
        }
      }
    },
    "/EstimateClass/{actionName}": {
      "post": {
        "tags": [
          "EstimateClass"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "EstimateClass_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EstimateClassCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EstimateClassCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstimateClass"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstimateClass"
                }
              }
            }
          }
        }
      }
    },
    "/EstimateClass/$adHocSchema": {
      "get": {
        "tags": [
          "EstimateClass"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "EstimateClass_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstimateClass"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstimateClass"
                }
              }
            }
          }
        }
      }
    },
    "/EstimateClass/{ids}": {
      "get": {
        "tags": [
          "EstimateClass"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "EstimateClass_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstimateClass"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstimateClass"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EstimateClass"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "EstimateClass_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/EstimateClass/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "EstimateClass"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "EstimateClass_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/EstimateClass/{id}": {
      "get": {
        "tags": [
          "EstimateClass"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "EstimateClass_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstimateClass"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstimateClass"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EstimateClass"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "EstimateClass_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/EstimateClass": {
      "get": {
        "tags": [
          "EstimateClass"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "EstimateClass_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EstimateClass"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EstimateClass"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "EstimateClass"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "EstimateClass_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EstimateClass"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EstimateClass"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstimateClass"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstimateClass"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstimateClass"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstimateClass"
                }
              }
            }
          }
        }
      }
    },
    "/EstimatePreferences/{actionName}": {
      "post": {
        "tags": [
          "EstimatePreferences"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "EstimatePreferences_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EstimatePreferencesCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EstimatePreferencesCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstimatePreferences"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstimatePreferences"
                }
              }
            }
          }
        }
      }
    },
    "/EstimatePreferences/$adHocSchema": {
      "get": {
        "tags": [
          "EstimatePreferences"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "EstimatePreferences_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstimatePreferences"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstimatePreferences"
                }
              }
            }
          }
        }
      }
    },
    "/EstimatePreferences/{ids}": {
      "get": {
        "tags": [
          "EstimatePreferences"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "EstimatePreferences_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstimatePreferences"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstimatePreferences"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EstimatePreferences"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "EstimatePreferences_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/EstimatePreferences/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "EstimatePreferences"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "EstimatePreferences_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/EstimatePreferences/{id}": {
      "get": {
        "tags": [
          "EstimatePreferences"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "EstimatePreferences_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstimatePreferences"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstimatePreferences"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EstimatePreferences"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "EstimatePreferences_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/EstimatePreferences": {
      "get": {
        "tags": [
          "EstimatePreferences"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "EstimatePreferences_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EstimatePreferences"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EstimatePreferences"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "EstimatePreferences"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "EstimatePreferences_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EstimatePreferences"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EstimatePreferences"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstimatePreferences"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstimatePreferences"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstimatePreferences"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstimatePreferences"
                }
              }
            }
          }
        }
      }
    },
    "/MoveEntry/ReleaseMoveEntry": {
      "post": {
        "tags": [
          "MoveEntry"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "MoveEntry_InvokeAction_ReleaseMoveEntry",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseMoveEntry"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseMoveEntry"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MoveEntry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MoveEntry"
                }
              }
            }
          }
        }
      }
    },
    "/MoveEntry/{actionName}": {
      "post": {
        "tags": [
          "MoveEntry"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "MoveEntry_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MoveEntryCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MoveEntryCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MoveEntry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MoveEntry"
                }
              }
            }
          }
        }
      }
    },
    "/MoveEntry/$adHocSchema": {
      "get": {
        "tags": [
          "MoveEntry"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "MoveEntry_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MoveEntry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MoveEntry"
                }
              }
            }
          }
        }
      }
    },
    "/MoveEntry/{ids}": {
      "get": {
        "tags": [
          "MoveEntry"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "MoveEntry_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MoveEntry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MoveEntry"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MoveEntry"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "MoveEntry_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/MoveEntry/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "MoveEntry"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "MoveEntry_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/MoveEntry/{id}": {
      "get": {
        "tags": [
          "MoveEntry"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "MoveEntry_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MoveEntry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MoveEntry"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MoveEntry"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "MoveEntry_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/MoveEntry": {
      "get": {
        "tags": [
          "MoveEntry"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "MoveEntry_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MoveEntry"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MoveEntry"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "MoveEntry"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "MoveEntry_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MoveEntry"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MoveEntry"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MoveEntry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MoveEntry"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MoveEntry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MoveEntry"
                }
              }
            }
          }
        }
      }
    },
    "/RegenerateMRP/RegenerateMRPProcess": {
      "post": {
        "tags": [
          "RegenerateMRP"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "RegenerateMRP_InvokeAction_RegenerateMRPProcess",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegenerateMRPProcess"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegenerateMRPProcess"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegenerateMRP"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegenerateMRP"
                }
              }
            }
          }
        }
      }
    },
    "/RegenerateMRP/{actionName}": {
      "post": {
        "tags": [
          "RegenerateMRP"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "RegenerateMRP_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegenerateMRPCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegenerateMRPCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegenerateMRP"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegenerateMRP"
                }
              }
            }
          }
        }
      }
    },
    "/RegenerateMRP/$adHocSchema": {
      "get": {
        "tags": [
          "RegenerateMRP"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "RegenerateMRP_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegenerateMRP"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegenerateMRP"
                }
              }
            }
          }
        }
      }
    },
    "/RegenerateMRP/{ids}": {
      "get": {
        "tags": [
          "RegenerateMRP"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "RegenerateMRP_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegenerateMRP"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegenerateMRP"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "RegenerateMRP"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "RegenerateMRP_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/RegenerateMRP/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "RegenerateMRP"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "RegenerateMRP_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/RegenerateMRP/{id}": {
      "get": {
        "tags": [
          "RegenerateMRP"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "RegenerateMRP_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegenerateMRP"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegenerateMRP"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "RegenerateMRP"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "RegenerateMRP_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/RegenerateMRP": {
      "get": {
        "tags": [
          "RegenerateMRP"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "RegenerateMRP_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RegenerateMRP"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RegenerateMRP"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "RegenerateMRP"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "RegenerateMRP_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegenerateMRP"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegenerateMRP"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegenerateMRP"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegenerateMRP"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegenerateMRP"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegenerateMRP"
                }
              }
            }
          }
        }
      }
    },
    "/ConfigurationMaintenance/ConfigurationMaintenanceSetActive": {
      "post": {
        "tags": [
          "ConfigurationMaintenance"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ConfigurationMaintenance_InvokeAction_ConfigurationMaintenanceSetActive",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationMaintenanceSetActive"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationMaintenanceSetActive"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationMaintenance"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationMaintenance"
                }
              }
            }
          }
        }
      }
    },
    "/ConfigurationMaintenance/{actionName}": {
      "post": {
        "tags": [
          "ConfigurationMaintenance"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ConfigurationMaintenance_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationMaintenanceCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationMaintenanceCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationMaintenance"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationMaintenance"
                }
              }
            }
          }
        }
      }
    },
    "/ConfigurationMaintenance/$adHocSchema": {
      "get": {
        "tags": [
          "ConfigurationMaintenance"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "ConfigurationMaintenance_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationMaintenance"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationMaintenance"
                }
              }
            }
          }
        }
      }
    },
    "/ConfigurationMaintenance/{ids}": {
      "get": {
        "tags": [
          "ConfigurationMaintenance"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "ConfigurationMaintenance_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationMaintenance"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationMaintenance"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ConfigurationMaintenance"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "ConfigurationMaintenance_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/ConfigurationMaintenance/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "ConfigurationMaintenance"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "ConfigurationMaintenance_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/ConfigurationMaintenance/{id}": {
      "get": {
        "tags": [
          "ConfigurationMaintenance"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "ConfigurationMaintenance_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationMaintenance"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationMaintenance"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ConfigurationMaintenance"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "ConfigurationMaintenance_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/ConfigurationMaintenance": {
      "get": {
        "tags": [
          "ConfigurationMaintenance"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "ConfigurationMaintenance_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConfigurationMaintenance"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConfigurationMaintenance"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ConfigurationMaintenance"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "ConfigurationMaintenance_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationMaintenance"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationMaintenance"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationMaintenance"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationMaintenance"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationMaintenance"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationMaintenance"
                }
              }
            }
          }
        }
      }
    },
    "/BillOfMaterial/{actionName}": {
      "post": {
        "tags": [
          "BillOfMaterial"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "BillOfMaterial_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillOfMaterialCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BillOfMaterialCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillOfMaterial"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillOfMaterial"
                }
              }
            }
          }
        }
      }
    },
    "/BillOfMaterial/$adHocSchema": {
      "get": {
        "tags": [
          "BillOfMaterial"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "BillOfMaterial_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillOfMaterial"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillOfMaterial"
                }
              }
            }
          }
        }
      }
    },
    "/BillOfMaterial/{ids}": {
      "get": {
        "tags": [
          "BillOfMaterial"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "BillOfMaterial_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillOfMaterial"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillOfMaterial"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BillOfMaterial"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "BillOfMaterial_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/BillOfMaterial/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "BillOfMaterial"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "BillOfMaterial_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/BillOfMaterial/{id}": {
      "get": {
        "tags": [
          "BillOfMaterial"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "BillOfMaterial_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillOfMaterial"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillOfMaterial"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BillOfMaterial"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "BillOfMaterial_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/BillOfMaterial": {
      "get": {
        "tags": [
          "BillOfMaterial"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "BillOfMaterial_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BillOfMaterial"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BillOfMaterial"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "BillOfMaterial"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "BillOfMaterial_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillOfMaterial"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BillOfMaterial"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillOfMaterial"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillOfMaterial"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillOfMaterial"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillOfMaterial"
                }
              }
            }
          }
        }
      }
    },
    "/EngineeringChangeRequest/EngineeringChangeRequestSubmit": {
      "post": {
        "tags": [
          "EngineeringChangeRequest"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "EngineeringChangeRequest_InvokeAction_EngineeringChangeRequestSubmit",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EngineeringChangeRequestSubmit"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EngineeringChangeRequestSubmit"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngineeringChangeRequest"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngineeringChangeRequest"
                }
              }
            }
          }
        }
      }
    },
    "/EngineeringChangeRequest/EngineeringChangeRequestHold": {
      "post": {
        "tags": [
          "EngineeringChangeRequest"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "EngineeringChangeRequest_InvokeAction_EngineeringChangeRequestHold",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EngineeringChangeRequestHold"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EngineeringChangeRequestHold"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngineeringChangeRequest"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngineeringChangeRequest"
                }
              }
            }
          }
        }
      }
    },
    "/EngineeringChangeRequest/EngineeringChangeRequestApprove": {
      "post": {
        "tags": [
          "EngineeringChangeRequest"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "EngineeringChangeRequest_InvokeAction_EngineeringChangeRequestApprove",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EngineeringChangeRequestApprove"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EngineeringChangeRequestApprove"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngineeringChangeRequest"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngineeringChangeRequest"
                }
              }
            }
          }
        }
      }
    },
    "/EngineeringChangeRequest/EngineeringChangeRequestReject": {
      "post": {
        "tags": [
          "EngineeringChangeRequest"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "EngineeringChangeRequest_InvokeAction_EngineeringChangeRequestReject",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EngineeringChangeRequestReject"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EngineeringChangeRequestReject"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngineeringChangeRequest"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngineeringChangeRequest"
                }
              }
            }
          }
        }
      }
    },
    "/EngineeringChangeRequest/EngineeringChangeRequestCreateECO": {
      "post": {
        "tags": [
          "EngineeringChangeRequest"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "EngineeringChangeRequest_InvokeAction_EngineeringChangeRequestCreateECO",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EngineeringChangeRequestCreateECO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EngineeringChangeRequestCreateECO"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngineeringChangeRequest"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngineeringChangeRequest"
                }
              }
            }
          }
        }
      }
    },
    "/EngineeringChangeRequest/{actionName}": {
      "post": {
        "tags": [
          "EngineeringChangeRequest"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "EngineeringChangeRequest_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EngineeringChangeRequestCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EngineeringChangeRequestCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngineeringChangeRequest"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngineeringChangeRequest"
                }
              }
            }
          }
        }
      }
    },
    "/EngineeringChangeRequest/$adHocSchema": {
      "get": {
        "tags": [
          "EngineeringChangeRequest"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "EngineeringChangeRequest_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngineeringChangeRequest"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngineeringChangeRequest"
                }
              }
            }
          }
        }
      }
    },
    "/EngineeringChangeRequest/{ids}": {
      "get": {
        "tags": [
          "EngineeringChangeRequest"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "EngineeringChangeRequest_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngineeringChangeRequest"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngineeringChangeRequest"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EngineeringChangeRequest"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "EngineeringChangeRequest_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/EngineeringChangeRequest/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "EngineeringChangeRequest"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "EngineeringChangeRequest_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/EngineeringChangeRequest/{id}": {
      "get": {
        "tags": [
          "EngineeringChangeRequest"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "EngineeringChangeRequest_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngineeringChangeRequest"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngineeringChangeRequest"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EngineeringChangeRequest"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "EngineeringChangeRequest_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/EngineeringChangeRequest": {
      "get": {
        "tags": [
          "EngineeringChangeRequest"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "EngineeringChangeRequest_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EngineeringChangeRequest"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EngineeringChangeRequest"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "EngineeringChangeRequest"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "EngineeringChangeRequest_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EngineeringChangeRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EngineeringChangeRequest"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngineeringChangeRequest"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngineeringChangeRequest"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngineeringChangeRequest"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EngineeringChangeRequest"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "APSMaintenance": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "CleanupHistory": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "History": {
                "$ref": "#/components/schemas/APSMaintenanceHistory"
              },
              "UpdateWorkCenterSchedulefromCalendar": {
                "$ref": "#/components/schemas/BooleanValue"
              }
            }
          }
        ]
      },
      "APSMaintenanceCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/APSMaintenance"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "APSMaintenanceHistory": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BlockSizeChangeLastRunBy": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BlockSizeChangeLastRunDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "CurrentBlockSize": {
                "$ref": "#/components/schemas/StringValue"
              },
              "HistoryCleanupLastRunBy": {
                "$ref": "#/components/schemas/StringValue"
              },
              "HistoryCleanupLastRunDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "LastBlockSize": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WorkCalendarLastRunBy": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WorkCalendarLastRunDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "WorkCenterScheduleLastRunBy": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WorkCenterScheduleLastRunDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              }
            }
          }
        ]
      },
      "APSMaintenanceProcess": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/APSMaintenance"
          }
        }
      },
      "AddHistoryComment": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Estimate"
          }
        }
      },
      "Address": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AddressLine1": {
                "$ref": "#/components/schemas/StringValue"
              },
              "AddressLine2": {
                "$ref": "#/components/schemas/StringValue"
              },
              "City": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Country": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PostalCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "State": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Validated": {
                "$ref": "#/components/schemas/BooleanValue"
              }
            }
          }
        ]
      },
      "Archive": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/CostRoll"
          }
        }
      },
      "AttributeDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AttributeBOMID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "AttributeID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DefaultValue": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Enabled": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Label": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Level": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "OperNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrderFunction": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TransactionRequired": {
                "$ref": "#/components/schemas/BooleanValue"
              }
            }
          }
        ]
      },
      "BOMReferenceDesignator": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "MaterialLineID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "RefDes": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "BillOfMaterial": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BOMID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EffEndDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "EffStartDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Hold": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Operations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OperationDetail"
                }
              },
              "Revision": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Warehouse": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "BillOfMaterialCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/BillOfMaterial"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "BomAttributes": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Attributes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AttributeDetail"
                }
              },
              "BOMID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EndDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Hold": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Revision": {
                "$ref": "#/components/schemas/StringValue"
              },
              "StartDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Warehouse": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "BomAttributesCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/BomAttributes"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "BomOverheadDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Factor": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "LineID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "OverheadID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Type": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "BomPreferences": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AllowArchivewithoutUpdatePending": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "AllowEmptyBOMItemSubItemID": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "AutoArchivewhenUpdatePending": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "BOMNumberingSequence": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DefaultFinishTime": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DefaultMoveTime": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DefaultQueueTime": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DefaultRevision": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DefaultWorkCenter": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DuplicatesonBOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DuplicatesonOperation": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ECONumberingSequence": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ECORequireApproval": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ECRNumberingSequence": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ECRRequireApproval": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "HoldBOMRevisionsonEntry": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "OperationTimeFormat": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PreventNewRevisionsWithoutECR": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "RequireECRbeforeCreatingECO": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "TotalTimeFormat": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "BomPreferencesCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/BomPreferences"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "BooleanValue": {
        "type": "object",
        "properties": {
          "value": {
            "type": "boolean"
          },
          "error": {
            "type": "string"
          }
        }
      },
      "ByteValue": {
        "type": "object",
        "properties": {
          "value": {
            "type": "integer",
            "format": "int32"
          },
          "error": {
            "type": "string"
          }
        }
      },
      "CalculateProductionOrderPlanCost": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ProductionOrder"
          }
        }
      },
      "CancelProductionOrder": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ProductionOrder"
          }
        }
      },
      "CapableToPromise": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Details": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CapableToPromiseDetail"
                }
              },
              "ProcessAction": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RegularProductionOrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SONbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SOType": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "CapableToPromiseCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/CapableToPromise"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "CapableToPromiseDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "CTPAccepted": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "CTPDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineDescription": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "LineOrder": {
                "$ref": "#/components/schemas/IntValue"
              },
              "ManualOrderNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OpenQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "OriginalRequestDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ProdOrderNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProdOrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RequestedOn": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Selected": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ShipOn": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "SONbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SOType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Warehouse": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "CapableToPromiseProcess": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/CapableToPromise"
          }
        }
      },
      "CapableToPromiseProcessAll": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/CapableToPromise"
          }
        }
      },
      "CloseProductionOrders": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Details": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CloseProductionOrdersDetail"
                }
              },
              "Period": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "CloseProductionOrdersCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/CloseProductionOrders"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "CloseProductionOrdersDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Branch": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CostCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProductionNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Project": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProjectTask": {
                "$ref": "#/components/schemas/StringValue"
              },
              "QtyComplete": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "QtytoProduce": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Selected": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Warehouse": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WIPBalance": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "WIPVarianceAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WIPVarianceSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "CloseProductionOrdersProcess": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/CloseProductionOrders"
          }
        }
      },
      "CloseProductionOrdersProcessAll": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/CloseProductionOrders"
          }
        }
      },
      "CompleteProductionOrder": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ProductionOrder"
          }
        }
      },
      "ConfigurationEntry": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Attributes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ConfigurationEntryAttributes"
                }
              },
              "Completed": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ConfigResultsID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "ConfigurationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ConfRevision": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Features": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ConfigurationEntryFeatures"
                }
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OpportunityLineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "OpportunityQuoteID": {
                "$ref": "#/components/schemas/GuidValue"
              },
              "ProdOrderNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProdOrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SOLineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "SOOrderNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SOOrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TestConfiguration": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Warehouse": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ConfigurationEntryAttributes": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AttributeLineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "ConfigResultsID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "ConfigurationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Label": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Required": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Revision": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Value": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ConfigurationEntryCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ConfigurationEntry"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "ConfigurationEntryFeatures": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ConfigResultsID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "FeatureLineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Label": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LotQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "MaxQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "MaxSelection": {
                "$ref": "#/components/schemas/IntValue"
              },
              "MinQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "MinSelection": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Options": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ConfigurationEntryOptions"
                }
              },
              "TotalQty": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "ConfigurationEntryOptions": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ConfigResultsID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "FeatureLineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Included": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "IsRemovable": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Label": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OptionLineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Qty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ConfigurationFeature": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Active": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "AllowNonInventoryOptions": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ConfigurationFeatureAttribute": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FeatureAttributes"
                }
              },
              "ConfigurationFeatureOption": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FeatureOptions"
                }
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DisplayOptionAttributes": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "FeatureID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PrintResults": {
                "$ref": "#/components/schemas/BooleanValue"
              }
            }
          }
        ]
      },
      "ConfigurationFeatureCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ConfigurationFeature"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "ConfigurationMaintAttribute": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AttributeID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ConfigurationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DefaultValue": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Enabled": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "IsFormula": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Label": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Required": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Revision": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Rules": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ConfigurationMaintAttributeRule"
                }
              },
              "SortOrder": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Variable": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Visible": {
                "$ref": "#/components/schemas/BooleanValue"
              }
            }
          }
        ]
      },
      "ConfigurationMaintAttributeRule": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Condition": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ConfigurationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Revision": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Rule": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RuleSource": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SourceLineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "TargetFeature": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TargetOption": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Value1": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Value2": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ConfigurationMaintFeatureOption": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Backflush": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "BatchSize": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ConfigurationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "FeatureLineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "FixedInclude": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Label": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Location": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LotQty": {
                "$ref": "#/components/schemas/StringValue"
              },
              "MaterialType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "MaxQty": {
                "$ref": "#/components/schemas/StringValue"
              },
              "MinQty": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OperationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PhantomRouting": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PriceFactor": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PrintResults": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "QtyEnabled": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "QtyRequired": {
                "$ref": "#/components/schemas/StringValue"
              },
              "QtyRoundUp": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ResultsCopy": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Revision": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ScrapFactor": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SortOrder": {
                "$ref": "#/components/schemas/IntValue"
              },
              "SubcontractSource": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Warehouse": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ConfigurationMaintFeatureRule": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ConfigurationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Revision": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Rule": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RuleSource": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SourceLineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "SourceOption": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TargetFeature": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TargetOption": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ConfigurationMaintKey": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Format": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Formula": {
                "$ref": "#/components/schemas/StringValue"
              },
              "KeyDescription": {
                "$ref": "#/components/schemas/StringValue"
              },
              "NumberSequence": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TranDescription": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ConfigurationMaintPrice": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Calculate": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Rollup": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ConfigurationMaintenance": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BOMID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BOMRevision": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CompletionRequiredBeforeProduction": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ConfigAttributes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ConfigurationMaintAttribute"
                }
              },
              "ConfigurationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Features": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ConfigurationMaintenanceFeature"
                }
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Keys": {
                "$ref": "#/components/schemas/ConfigurationMaintKey"
              },
              "Price": {
                "$ref": "#/components/schemas/ConfigurationMaintPrice"
              },
              "Revision": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ConfigurationMaintenanceCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ConfigurationMaintenance"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "ConfigurationMaintenanceFeature": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ConfigurationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "FeatureID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Label": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "LotQty": {
                "$ref": "#/components/schemas/StringValue"
              },
              "MaxQty": {
                "$ref": "#/components/schemas/StringValue"
              },
              "MaxSelection": {
                "$ref": "#/components/schemas/StringValue"
              },
              "MinQty": {
                "$ref": "#/components/schemas/StringValue"
              },
              "MinSelection": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Options": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ConfigurationMaintFeatureOption"
                }
              },
              "PrintResults": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ResultsCopy": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Revision": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Rules": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ConfigurationMaintFeatureRule"
                }
              },
              "SortOrder": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Visible": {
                "$ref": "#/components/schemas/BooleanValue"
              }
            }
          }
        ]
      },
      "ConfigurationMaintenanceSetActive": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ConfigurationMaintenance"
          }
        }
      },
      "ConfiguratorPreferences": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Calculate": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CompletionRequiredBeforeProduction": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ConfigKeyFormat": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ConfigNumberingSequence": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DefaultKeyNumberSequence": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DefaultRevision": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EnableDiscount": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "EnablePrice": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "EnableSubitem": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "EnableWarehouse": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "HidePriceDetails": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "OverrideDefaultonConfigurationAllowCalculateOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "OverrideDefaultonConfigurationAllowRollupOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Rollup": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ConfiguratorPreferencesCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ConfiguratorPreferences"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "ConfirmShipment": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/VendorShipment"
          }
        }
      },
      "CostRoll": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ApplytoPendingCosts": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "BOMID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EffectiveDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "IgnoreMinMaxLotSizeValues": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "IncludeFixedCosts": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "IncludeMaterialScrapFactors": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ItemClass": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Level": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Results": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CostRollResult"
                }
              },
              "Revision": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UpdateMaterial": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "UsePendingStandardCostforPurchaseItems": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Warehouse": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "CostRollCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/CostRoll"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "CostRollHistory": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BOMID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CurrentCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CurrentStatus": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Date": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "DefaultBOM": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "FixedLabor": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "FixedLaborTime": {
                "$ref": "#/components/schemas/StringValue"
              },
              "FixedOverhead": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ItemClass": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastUpdatedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Level": {
                "$ref": "#/components/schemas/IntValue"
              },
              "LotSize": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Machine": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "MachineTime": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ManufacturedMaterial": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Material": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "MultiLevel": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "PendingCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PurchaseMaterial": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "RefMaterial": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Revision": {
                "$ref": "#/components/schemas/StringValue"
              },
              "StartDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Subcontract": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Tools": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UnitCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "VariableLabor": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "VariableLaborTime": {
                "$ref": "#/components/schemas/StringValue"
              },
              "VariableOverhead": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Warehouse": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "CostRollHistoryCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/CostRollHistory"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "CostRollResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BOMID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CurrentStandardCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "DefaultBOM": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "FixedLabor": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "FixedLaborTime": {
                "$ref": "#/components/schemas/StringValue"
              },
              "FixedOverhead": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ItemClass": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Level": {
                "$ref": "#/components/schemas/IntValue"
              },
              "LotSize": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Machine": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "MachineTime": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ManufacturedMaterial": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Material": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "MultiLevel": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "PendingStandardCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PurchaseMaterial": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "RefMaterial": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Revision": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Selected": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subcontract": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Tools": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UnitCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UserID": {
                "$ref": "#/components/schemas/GuidValue"
              },
              "VariableLabor": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "VariableLaborTime": {
                "$ref": "#/components/schemas/StringValue"
              },
              "VariableOverhead": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Warehouse": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "CostTransaction": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BatchNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ControlAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Date": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Details": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CostTransactionDetail"
                }
              },
              "Hold": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "OrigBatchNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrigDocType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PostPeriod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TotalAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "CostTransactionCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/CostTransaction"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "CostTransactionDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Account": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BatchNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DocType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ExtCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "GLBatchLineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "GLBatchNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "OperationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProductionNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Quantity": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "RefCostID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TranDescription": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TranType": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "CreateLinkedProductionOrders": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ProductionOrder"
          }
        }
      },
      "CreateProductionDocuments": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Customer": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CustomerLocation": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CustomerName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ItemDescription": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PlanID": {
                "$ref": "#/components/schemas/LongValue"
              },
              "PlanType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProdOperationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProdOrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProductionNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Quantity": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "RequestedOn": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Selected": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "SOOrderNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SOOrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Warehouse": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "CreateProductionOrder": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "CreationDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "CreationOrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Customer": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Documents": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateProductionDocuments"
                }
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ItemClassID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Me": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "My": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ProdOrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProductionNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProductManager": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProductWorkgroup": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RequestedOnEndDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "RequestedOnStartDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "SOOrderNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SOOrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WarehouseID": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "CreateProductionOrderCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/CreateProductionOrder"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "CreateProductionOrderProcess": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/CreateProductionOrder"
          }
        }
      },
      "CreateProductionOrderProcessAll": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/CreateProductionOrder"
          }
        }
      },
      "CriticalMaterialDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Allocated": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "BatchSize": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Byproduct": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Isstock": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ItemClass": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "MarkforPO": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "MarkforProduction": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "MaterialType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OperationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "POOrderNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PreferredVendorID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProductionNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "QtyAvailable": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "QtyHardAvailable": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "QtyOnHand": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "QtyProductionDemand": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "QtyProductionDemandPrepared": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "QtyProductionSupply": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "QtyProductionSupplyPrepared": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "QtyRemaining": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "QtyShort": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ReplenishmentSource": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RequiredDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Selected": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "SubAssyOrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SubAssyProductionNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SubcontractSource": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TotalRequired": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "VendorName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Warehouse": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "CriticalMaterials": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Detail": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CriticalMaterialDetail"
                }
              },
              "OrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProductionNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ShowAllItems": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ShowAllocated": {
                "$ref": "#/components/schemas/BooleanValue"
              }
            }
          }
        ]
      },
      "CriticalMaterialsCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/CriticalMaterials"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "CustomBooleanField": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomField"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "boolean"
              },
              "error": {
                "type": "string"
              }
            }
          }
        ]
      },
      "CustomByteField": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomField"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "integer",
                "format": "int32"
              },
              "error": {
                "type": "string"
              }
            }
          }
        ]
      },
      "CustomDateTimeField": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomField"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "format": "date-time"
              },
              "error": {
                "type": "string"
              }
            }
          }
        ]
      },
      "CustomDecimalField": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomField"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "format": "double"
              },
              "error": {
                "type": "string"
              }
            }
          }
        ]
      },
      "CustomDoubleField": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomField"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "format": "double"
              },
              "error": {
                "type": "string"
              }
            }
          }
        ]
      },
      "CustomField": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "discriminator": {
          "propertyName": "type"
        }
      },
      "CustomGuidField": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomField"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "format": "uuid"
              },
              "error": {
                "type": "string"
              }
            }
          }
        ]
      },
      "CustomIntField": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomField"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "integer",
                "format": "int32"
              },
              "error": {
                "type": "string"
              }
            }
          }
        ]
      },
      "CustomLongField": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomField"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "integer",
                "format": "int64"
              },
              "error": {
                "type": "string"
              }
            }
          }
        ]
      },
      "CustomShortField": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomField"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "integer",
                "format": "int32"
              },
              "error": {
                "type": "string"
              }
            }
          }
        ]
      },
      "CustomStringField": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomField"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "string"
              },
              "error": {
                "type": "string"
              }
            }
          }
        ]
      },
      "DateTimeValue": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "format": "date-time"
          },
          "error": {
            "type": "string"
          }
        }
      },
      "DecimalValue": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "format": "double"
          },
          "error": {
            "type": "string"
          }
        }
      },
      "DisassemblyEntry": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Allocations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DisassemblyEntryAllocation"
                }
              },
              "Attributes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DisassemblyEntryAttribute"
                }
              },
              "BatchNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Branch": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Date": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Hold": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "INDocType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "INRefNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineDescription": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Location": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Material": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DisassemblyEntryMaterial"
                }
              },
              "OrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PostPeriod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProductionNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Quantity": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TranDescription": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TranType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Warehouse": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "DisassemblyEntryAllocation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ExpirationDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Location": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LotSerialNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Quantity": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "SplitLineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "DisassemblyEntryAttribute": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Attribute": {
                "$ref": "#/components/schemas/StringValue"
              },
              "AttributeID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "ProdAttributeLineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Required": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "TranLineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Value": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "DisassemblyEntryCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/DisassemblyEntry"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "DisassemblyEntryMaterial": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Allocations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DisassemblyEntryMaterialAllocation"
                }
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ExpirationDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ExtCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "GLBatchLineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "GLBatchNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "INDocType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "INLineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "INRefNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Location": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LotSerialNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "MaterialLineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "OperationNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ParentLotSerialNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "QtyisScrap": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Quantity": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ReasonCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TranType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UnitCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Warehouse": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "DisassemblyEntryMaterialAllocation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ExpirationDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Location": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LotSerialNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Quantity": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "SplitLineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "DocContact": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Attention": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CompanyName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Email": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone1": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "DoubleValue": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "format": "double"
          },
          "error": {
            "type": "string"
          }
        }
      },
      "ECOReferenceDesignator": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ChangeStatus": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ECOID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "MaterialLineID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "OperationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RefDes": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Revision": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ECRReferenceDesignator": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ChangeStatus": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ECRID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "MaterialLineID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "OperationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RefDes": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Revision": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "EngineeringChangeOrder": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Attributes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EngineeringChangeOrderAttribute"
                }
              },
              "BOMID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BOMRevision": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ECOID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EffectiveDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Operations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EngineeringChangeOrderOperation"
                }
              },
              "Priority": {
                "$ref": "#/components/schemas/IntValue"
              },
              "RequestDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Requestor": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Revision": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Warehouse": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "EngineeringChangeOrderApproval": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/EngineeringChangeOrder"
          }
        }
      },
      "EngineeringChangeOrderAttribute": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AttributeID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ChangeStatus": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ECOID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Enabled": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Label": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Level": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "OperationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrderFunction": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Revision": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TransactionRequired": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Value": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "EngineeringChangeOrderCommitChanges": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/EngineeringChangeOrder"
          }
        }
      },
      "EngineeringChangeOrderCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/EngineeringChangeOrder"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "EngineeringChangeOrderHold": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/EngineeringChangeOrder"
          }
        }
      },
      "EngineeringChangeOrderMaterial": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Backflush": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "BatchSize": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "BubbleNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ChangeStatus": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CompBOMID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CompBOMRevision": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ECOID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EffectiveDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ExpirationDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "LineOrder": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Location": {
                "$ref": "#/components/schemas/StringValue"
              },
              "MaterialType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OperationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PhantomRouting": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PlannedCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "QtyRequired": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ReferenceDesignators": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ECOReferenceDesignator"
                }
              },
              "Revision": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ScrapFactor": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "SubcontractSource": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UnitCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Warehouse": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "EngineeringChangeOrderOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BackflushLabor": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ChangeStatus": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DropShippedtoVendor": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ECOID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "FinishTime": {
                "$ref": "#/components/schemas/StringValue"
              },
              "MachineTime": {
                "$ref": "#/components/schemas/StringValue"
              },
              "MachineUnits": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Material": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EngineeringChangeOrderMaterial"
                }
              },
              "OperationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OperDesc": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OutsideProcess": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Overheads": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EngineeringChangeOrderOverhead"
                }
              },
              "QueueTime": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Revision": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RunTime": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RunUnits": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ScrapAction": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SetupTime": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Steps": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EngineeringChangeOrderStep"
                }
              },
              "Tools": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EngineeringChangeOrderTool"
                }
              },
              "Vendor": {
                "$ref": "#/components/schemas/StringValue"
              },
              "VendorLocation": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WorkCenter": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "EngineeringChangeOrderOverhead": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ChangeStatus": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ECOID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Factor": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "LineID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "OperationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OverheadID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Revision": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Type": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "EngineeringChangeOrderReject": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/EngineeringChangeOrder"
          }
        }
      },
      "EngineeringChangeOrderStep": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ChangeStatus": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ECOID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "OperationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Revision": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "EngineeringChangeOrderSubmit": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/EngineeringChangeOrder"
          }
        }
      },
      "EngineeringChangeOrderTool": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ChangeStatus": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ECOID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "OperationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "QtyRequired": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Revision": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ToolID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UnitCost": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "EngineeringChangeRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Attributes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EngineeringChangeRequestAttribute"
                }
              },
              "BOMID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BOMRevision": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ECOID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ECRID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EffectiveDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Operations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EngineeringChangeRequestOperation"
                }
              },
              "Priority": {
                "$ref": "#/components/schemas/IntValue"
              },
              "RequestDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Requestor": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Revision": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Warehouse": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "EngineeringChangeRequestApprove": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/EngineeringChangeRequest"
          }
        }
      },
      "EngineeringChangeRequestAttribute": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AttributeID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ChangeStatus": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ECRID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Enabled": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Label": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Level": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "OperationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrderFunction": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Revision": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TransactionRequired": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Value": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "EngineeringChangeRequestCreateECO": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/EngineeringChangeRequest"
          }
        }
      },
      "EngineeringChangeRequestCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/EngineeringChangeRequest"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "EngineeringChangeRequestHold": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/EngineeringChangeRequest"
          }
        }
      },
      "EngineeringChangeRequestMaterial": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Backflush": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "BatchSize": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "BubbleNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ChangeStatus": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CompBOMID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CompBOMRevision": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ECRID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EffectiveDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ExpirationDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "LineOrder": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Location": {
                "$ref": "#/components/schemas/StringValue"
              },
              "MaterialType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OperationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PhantomRouting": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PlannedCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "QtyRequired": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ReferenceDesignators": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ECRReferenceDesignator"
                }
              },
              "Revision": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ScrapFactor": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "SubcontractSource": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UnitCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Warehouse": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "EngineeringChangeRequestOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BackflushLabor": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ChangeStatus": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DropShippedtoVendor": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ECRID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "FinishTime": {
                "$ref": "#/components/schemas/StringValue"
              },
              "MachineTime": {
                "$ref": "#/components/schemas/StringValue"
              },
              "MachineUnits": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Material": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EngineeringChangeRequestMaterial"
                }
              },
              "OperationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OperDesc": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OutsideProcess": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Overheads": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EngineeringChangeRequestOverhead"
                }
              },
              "QueueTime": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Revision": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RunTime": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RunUnits": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ScrapAction": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SetupTime": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Steps": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EngineeringChangeRequestStep"
                }
              },
              "Tools": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EngineeringChangeRequestTools"
                }
              },
              "Vendor": {
                "$ref": "#/components/schemas/StringValue"
              },
              "VendorLocation": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WorkCenter": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "EngineeringChangeRequestOverhead": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ChangeStatus": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ECRID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Factor": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "LineID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "OperationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OverheadID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Revision": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Type": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "EngineeringChangeRequestReject": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/EngineeringChangeRequest"
          }
        }
      },
      "EngineeringChangeRequestStep": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ChangeStatus": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ECRID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "OperationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Revision": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "EngineeringChangeRequestSubmit": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/EngineeringChangeRequest"
          }
        }
      },
      "EngineeringChangeRequestTools": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ChangeStatus": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ECRID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "OperationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "QtyRequired": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Revision": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ToolID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UnitCost": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "Entity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "rowNumber": {
            "type": "integer",
            "format": "int64"
          },
          "note": {
            "$ref": "#/components/schemas/StringValue"
          },
          "custom": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/CustomField"
              }
            }
          },
          "error": {
            "type": "string"
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FileLink"
            }
          }
        }
      },
      "Estimate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Branch": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CostCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Customer": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Engineer": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EstimateClass": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EstimateDescription": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EstimateID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ExtRefNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "FixedLaborOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "FixedOverheadOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "FixLaborCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "FixOverheadCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "History": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EstimateHistory"
                }
              },
              "ImageURL": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ItemClass": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ItemDescription": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LeadTimeDays": {
                "$ref": "#/components/schemas/IntValue"
              },
              "LeadTimeOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "MachineCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "MachineOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "MaterialCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "MaterialOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "NonInventory": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Operation": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EstimateOperationDetail"
                }
              },
              "OpportunityID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrderNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Owner": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Primary": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Project": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProjectTask": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PromiseDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "QuoteNbrQuoteNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "QuoteSource": {
                "$ref": "#/components/schemas/StringValue"
              },
              "QuoteType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RefMaterialCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "RequestDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Revision": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RevisionDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SubcontractCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "SubcontractOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxCategory": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ToolCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ToolOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "TotalCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Totals": {
                "$ref": "#/components/schemas/EstimateTotal"
              },
              "VariableLaborOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "VariableOverheadOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "VarLaborCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "VarOverheadCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Warehouse": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "EstimateClass": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ClassID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Engineer": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ItemClass": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LaborMarkupPct": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "LeadTimeDays": {
                "$ref": "#/components/schemas/IntValue"
              },
              "MachineMarkupPct": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "MaterialMarkupPct": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "OrderQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "OverheadMarkupPct": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "SubcontractMarkupPct": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TaxCategory": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ToolMarkupPct": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "EstimateClassCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/EstimateClass"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "EstimateCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Estimate"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "EstimateHistory": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "CreatedAt": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "CreatedBy": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EstimateID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "HistoryLineNumber": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Revision": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "EstimateMaterialDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Backflush": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "BatchSize": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ItemClass": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "LineOrder": {
                "$ref": "#/components/schemas/IntValue"
              },
              "MaterialType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "NonInventory": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "PhantomRouting": {
                "$ref": "#/components/schemas/StringValue"
              },
              "QtyRequired": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "QtyRoundUp": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ScrapFactor": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "SubcontractSource": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TotalCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TotalRequired": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UnitCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Warehouse": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "EstimateOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BackflushLabor": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ControlPoint": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "DropShippedtoVendor": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "EstimateID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "FinishTime": {
                "$ref": "#/components/schemas/IntValue"
              },
              "FixedLaborOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "FixedOverheadOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "FixLaborCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "FixOverheadCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "MachineCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "MachineOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "MachineTime": {
                "$ref": "#/components/schemas/IntValue"
              },
              "MachineUnits": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Material": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EstimateMaterialDetail"
                }
              },
              "MaterialCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "MaterialOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "MoveTime": {
                "$ref": "#/components/schemas/IntValue"
              },
              "OperationDescription": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OperationNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OutsideProcess": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "OutsideProcessOptions": {
                "$ref": "#/components/schemas/EstimateOperationOutsideProcess"
              },
              "Overheads": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EstimateOverheadDetail"
                }
              },
              "QueueTime": {
                "$ref": "#/components/schemas/IntValue"
              },
              "RefMaterialCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Revision": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RunTime": {
                "$ref": "#/components/schemas/IntValue"
              },
              "RunUnits": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "SetupTime": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Steps": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EstimateStepDetail"
                }
              },
              "SubcontractCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "SubcontractOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ToolCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ToolOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Tools": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EstimateToolDetail"
                }
              },
              "TotalCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "VariableLaborOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "VariableOverheadOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "VarLaborCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "VarOverheadCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Vendor": {
                "$ref": "#/components/schemas/StringValue"
              },
              "VendorLocation": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WorkCenter": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "EstimateOperationCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/EstimateOperation"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "EstimateOperationDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BackflushLabor": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ControlPoint": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "EstimateID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "FinishTime": {
                "$ref": "#/components/schemas/IntValue"
              },
              "FixedLaborOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "FixedOvhdOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "FixLaborCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "FixOverheadCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "MachineCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "MachineOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "MachineTime": {
                "$ref": "#/components/schemas/IntValue"
              },
              "MachineUnits": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "MaterialCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "MaterialOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "MoveTime": {
                "$ref": "#/components/schemas/IntValue"
              },
              "OperationDescription": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OperationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OperationNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "OutsideProcess": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "QueueTime": {
                "$ref": "#/components/schemas/IntValue"
              },
              "RefMaterialCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Revision": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RunTime": {
                "$ref": "#/components/schemas/IntValue"
              },
              "RunUnits": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "SetupTime": {
                "$ref": "#/components/schemas/IntValue"
              },
              "SubcontractCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "SubcontractOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ToolCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ToolOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "VariableLaborOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "VariableOvhdOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "VarLaborCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "VarOverheadCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "WorkCenter": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "EstimateOperationOutsideProcess": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "DropShippedtoVendor": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "OutsideProcess": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Vendor": {
                "$ref": "#/components/schemas/StringValue"
              },
              "VendorLocation": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "EstimateOverheadDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Factor": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "OverheadCostRate": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "OverheadID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Type": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WCFlag": {
                "$ref": "#/components/schemas/BooleanValue"
              }
            }
          }
        ]
      },
      "EstimatePreferences": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AutoNumberRevisions": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "DefaultEstimateClass": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DefaultProdOrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DefaultRevision": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DefaultWorkCenter": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EstimateNumberSequence": {
                "$ref": "#/components/schemas/StringValue"
              },
              "NewRevisionIsPrimary": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "UpdateAllRevisions": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "UpdatePriceInfo": {
                "$ref": "#/components/schemas/BooleanValue"
              }
            }
          }
        ]
      },
      "EstimatePreferencesCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/EstimatePreferences"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "EstimateStepDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "LineOrder": {
                "$ref": "#/components/schemas/IntValue"
              }
            }
          }
        ]
      },
      "EstimateToolDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "QtyReq": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ToolID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UnitCost": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "EstimateTotal": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BaseCurrencyID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Currency": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CurrencyID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CurrRate": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CuryViewState": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "LaborMarkupPct": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "MachineMarkupPct": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "MaterialMarkupPct": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "OrderQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "OverallMarkupPct": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "OverheadMarkupPct": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ReciprocalRate": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "SubcontractMarkupPct": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ToolMarkupPct": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TotalCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TotalPrice": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UnitCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UnitPrice": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UnitPriceOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "EventHistoryDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BatchNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CreatedAt": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "CreatedBy": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CreatedScreen": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CreatedScreenID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DocType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EventLineNumber": {
                "$ref": "#/components/schemas/IntValue"
              },
              "OrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProductionNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RelatedDocument": {
                "$ref": "#/components/schemas/GuidValue"
              },
              "Type": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "FeatureAttributes": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AttributeID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DefaultValue": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Enabled": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "FeatureID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "IsFormula": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Label": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Required": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Variable": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Visible": {
                "$ref": "#/components/schemas/BooleanValue"
              }
            }
          }
        ]
      },
      "FeatureOptions": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Backflush": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "BatchSize": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "FeatureID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "FixedInclude": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Label": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "LotQty": {
                "$ref": "#/components/schemas/StringValue"
              },
              "MaterialType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "MaxQty": {
                "$ref": "#/components/schemas/StringValue"
              },
              "MinQty": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PhantomRouting": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PriceFactor": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PrintResults": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "QtyEnabled": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "QtyRequired": {
                "$ref": "#/components/schemas/StringValue"
              },
              "QtyRoundUp": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ResultsCopy": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ScrapFactor": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SubcontractSource": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "FileLink": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "filename": {
            "type": "string"
          },
          "href": {
            "type": "string",
            "format": "uri"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "FirmProductionOrder": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ProductionOrder"
          }
        }
      },
      "Forecast": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Active": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "BeginDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Branch": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Customer": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CustomerName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Dependent": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EndDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ForecastID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Interval": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Quantity": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Warehouse": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ForecastCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Forecast"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "GuidValue": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "format": "uuid"
          },
          "error": {
            "type": "string"
          }
        }
      },
      "HttpError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "exceptionMessage": {
            "type": "string",
            "nullable": true
          },
          "exceptionType": {
            "type": "string",
            "nullable": true
          },
          "stackTrace": {
            "type": "string",
            "nullable": true
          },
          "modelState": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "messageDetail": {
            "type": "string"
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "IntValue": {
        "type": "object",
        "properties": {
          "value": {
            "type": "integer",
            "format": "int32"
          },
          "error": {
            "type": "string"
          }
        }
      },
      "ItemWhereUsedInquiry": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ItemClass": {
                "$ref": "#/components/schemas/StringValue"
              },
              "MultiLevel": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Results": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ItemWhereUsedRow"
                }
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Warehouse": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ItemWhereUsedInquiryCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ItemWhereUsedInquiry"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "ItemWhereUsedRow": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BatchSize": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "BOMID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ItemClass": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Level": {
                "$ref": "#/components/schemas/IntValue"
              },
              "ParentDesc": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ParentInventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ParentItemClass": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ParentSubitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "QtyRequired": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Revision": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Sequence": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Source": {
                "$ref": "#/components/schemas/StringValue"
              },
              "StockItem": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Warehouse": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "LaborCodes": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LaborAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LaborCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LaborSub": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OverheadAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OverheadSub": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Type": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "LaborCodesCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/LaborCodes"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "LaborEntry": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BatchNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ControlQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Date": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Details": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LaborEntryDetail"
                }
              },
              "Hold": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "PostPeriod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TotalQty": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "LaborEntryCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/LaborEntry"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "LaborEntryDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Allocations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LaborEntryDetailAllocation"
                }
              },
              "EmployeeID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EndTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ExpirationDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "GLBatchLineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "GLBatchNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "INDocType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "INLineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "INRefNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LaborAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "LaborCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LaborRate": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "LaborTime": {
                "$ref": "#/components/schemas/IntValue"
              },
              "LaborType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Location": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LotSerialNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OperationNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProductionNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "QtyisScrap": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "QtyScrapped": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Quantity": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ReasonCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ReceiptNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ScrapAction": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Shift": {
                "$ref": "#/components/schemas/StringValue"
              },
              "StartTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TranDescription": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TransactionAttributes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LaborEntryTranAttributes"
                }
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Warehouse": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "LaborEntryDetailAllocation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ExpirationDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Location": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LotSerialNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Quantity": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "SplitLineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "LaborEntryTranAttributes": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Attribute": {
                "$ref": "#/components/schemas/StringValue"
              },
              "AttributeID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProdAttributeLineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Required": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "TranLineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Value": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "LateAssignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AllocatedDetail": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LateAssignmentAllocatedDetail"
                }
              },
              "CompleteQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LotSerialNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProductionNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "QtytoProduce": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "RemainingQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ScrappedQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UnallocatedDetail": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LateAssignmentUnallocatedDetail"
                }
              },
              "Warehouse": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "LateAssignmentAllocatedDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "LotSerialNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OperationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ParentLotSerialNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProductionNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "QtyAllocated": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "LateAssignmentCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/LateAssignment"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "LateAssignmentUnallocatedDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "LotSerialNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OperationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ParentLotSerialNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProductionNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "QtyRequired": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "QtytoAllocate": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "QtyUnallocated": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "LockOrder": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ProductionOrder"
          }
        }
      },
      "LongValue": {
        "type": "object",
        "properties": {
          "value": {
            "type": "integer",
            "format": "int64"
          },
          "error": {
            "type": "string"
          }
        }
      },
      "MPSType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Dependent": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "NumberingSequence": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TypeID": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "MPSTypeCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/MPSType"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "MRPBucketDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Bucket": {
                "$ref": "#/components/schemas/IntValue"
              },
              "BucketID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Interval": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Value": {
                "$ref": "#/components/schemas/IntValue"
              }
            }
          }
        ]
      },
      "MRPBuckets": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Active": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "BucketID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Details": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MRPBucketDetail"
                }
              }
            }
          }
        ]
      },
      "MRPBucketsCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/MRPBuckets"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "MRPDetailInquiry": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BaseUnit": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LotQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "MaxOrderQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "MinOrderQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "QtyOnHand": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Results": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MRPDetailInquiryResult"
                }
              },
              "SafetyStock": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Warehouse": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "MRPDetailInquiryCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/MRPDetailInquiry"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "MRPDetailInquiryResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ParentInventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ParentSubitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProductInventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProductSubitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PromiseDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Qty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "QtyOnHand": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "RecordID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "ReferenceType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RelatedDocument": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Type": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "MRPDisplay": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ActionDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ActionLeadTime": {
                "$ref": "#/components/schemas/IntValue"
              },
              "BaseQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "BaseUOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BOMID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BOMRevision": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Branch": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ItemClass": {
                "$ref": "#/components/schemas/StringValue"
              },
              "MRPDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ParentInventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ParentSubitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PreferredVendorID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProductInventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProductManagerID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProductSubitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PromiseDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "RecordID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "ReferenceType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RelatedDocument": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RelatedParentDocument": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RelatedProductDocument": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SDFlag": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Selected": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Source": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TransferWarehouse": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Type": {
                "$ref": "#/components/schemas/StringValue"
              },
              "VendorName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Warehouse": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "MRPDisplayCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/MRPDisplay"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "MRPException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Branch": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ItemClass": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProductManagerID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PromiseDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Quantity": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "RecordID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "RefType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RelatedDocument": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RequiredDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SupplyQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "SupplyWarehouse": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Type": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Warehouse": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "MRPExceptionCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/MRPException"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "MRPPreferences": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "DaysAfter": {
                "$ref": "#/components/schemas/IntValue"
              },
              "DaysBefore": {
                "$ref": "#/components/schemas/IntValue"
              },
              "DefaultType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DemandTimeFence": {
                "$ref": "#/components/schemas/IntValue"
              },
              "GracePeriod": {
                "$ref": "#/components/schemas/IntValue"
              },
              "IncludeOnHoldKitAssemblies": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "IncludeOnHoldProductionOrders": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "IncludeOnHoldPurchaseOrders": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "IncludeOnHoldSalesOrders": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "NumberingSequence": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PlanningHorizon": {
                "$ref": "#/components/schemas/IntValue"
              },
              "PlanOrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PurchaseCalendarID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "StockingMethod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TimeFence": {
                "$ref": "#/components/schemas/IntValue"
              },
              "UseFixedManufacturingTimes": {
                "$ref": "#/components/schemas/BooleanValue"
              }
            }
          }
        ]
      },
      "MRPPreferencesCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/MRPPreferences"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "MRPRequirementsByItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BucketID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Detail": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MRPRequirementsByItemDetail"
                }
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LeadTime": {
                "$ref": "#/components/schemas/IntValue"
              },
              "PreferredVendorID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProductMgr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "ProductMgrContact": {
                "$ref": "#/components/schemas/StringValue"
              },
              "QtyonHand": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "RepSource": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SafetyStock": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Warehouse": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "MRPRequirementsByItemCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/MRPRequirementsByItem"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "MRPRequirementsByItemDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object"
          }
        ]
      },
      "Machine": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Account": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Active": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "AssetID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CalendarID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Down": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Efficiency": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "MachineID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "StandardCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Subaccount": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "MachineCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Machine"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "MachineDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "MachineAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "MachineID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "MachineOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "MachineSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "StandardCost": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "MarkAsPrimary": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Estimate"
          }
        }
      },
      "MasterProductionSchedule": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Active": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "BOMDescription": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BOMID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Branch": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "MPSID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PlanDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Quantity": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Type": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Warehouse": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "MasterProductionScheduleCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/MasterProductionSchedule"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "MaterialDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Backflush": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "BatchSize": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "BubbleNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CompBOMID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CompBOMRevision": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EffectiveDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ExpirationDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "LineOrder": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Location": {
                "$ref": "#/components/schemas/StringValue"
              },
              "MaterialType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PhantomRouting": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PlannedCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "QtyRequired": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ReferenceDesignators": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BOMReferenceDesignator"
                }
              },
              "ScrapFactor": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "SubcontractSource": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UnitCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Warehouse": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "MaterialEntry": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BatchNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ControlAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ControlQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Date": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Details": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MaterialEntryDetail"
                }
              },
              "Hold": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "OrigBatchNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrigDocType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PostPeriod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TotalAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TotalQty": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "MaterialEntryCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/MaterialEntry"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "MaterialEntryDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Allocations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MaterialEntryDetailAllocation"
                }
              },
              "Byproduct": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ExpirationDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ExtCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "GLBatchLineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "GLBatchNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "INDocType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "INLineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "INRefNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Location": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LotSerialNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "MaterialLineID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "OperationNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ParentLotSerialNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProductionNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Quantity": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TranDescription": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UnitCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Warehouse": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "MaterialEntryDetailAllocation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ExpirationDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Location": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LotSerialNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ParentLotSerialNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Quantity": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "SplitLineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "MoveEntry": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BatchNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ControlQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Date": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Details": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MoveEntryDetail"
                }
              },
              "Hold": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "PostPeriod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TotalQty": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "MoveEntryCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/MoveEntry"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "MoveEntryDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Allocations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MoveEntryDetailAllocation"
                }
              },
              "ExpirationDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "GLBatchLineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "GLBatchNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "INDocType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "INLineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "INRefNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Location": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LotSerialNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OperationNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProductionNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "QtyisScrap": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "QtyScrapped": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Quantity": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ReasonCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ReceiptNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ScrapAction": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TranDescription": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TransactionAttributes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MoveEntryTranAttribute"
                }
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Warehouse": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "MoveEntryDetailAllocation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ExpirationDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Location": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LotSerialNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Quantity": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "SplitLineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "MoveEntryTranAttribute": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Attribute": {
                "$ref": "#/components/schemas/StringValue"
              },
              "AttributeID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProdAttributeLineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Required": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "TranLineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Value": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "OperationDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BackflushLabor": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "BOMID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ControlPoint": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "DropShippedtoVendor": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "FinishTime": {
                "$ref": "#/components/schemas/IntValue"
              },
              "MachineTime": {
                "$ref": "#/components/schemas/IntValue"
              },
              "MachineUnits": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Material": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MaterialDetail"
                }
              },
              "MoveTime": {
                "$ref": "#/components/schemas/IntValue"
              },
              "OperationDescription": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OperationNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OutsideProcess": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Overheads": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BomOverheadDetail"
                }
              },
              "QueueTime": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Revision": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RunTime": {
                "$ref": "#/components/schemas/IntValue"
              },
              "RunUnits": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ScrapAction": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SetupTime": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Steps": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StepDetail"
                }
              },
              "Tools": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ToolDetail"
                }
              },
              "Vendor": {
                "$ref": "#/components/schemas/StringValue"
              },
              "VendorLocation": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WorkCenter": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "OrderAttributeDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AttributeID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Enabled": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Label": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Level": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "OperationNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProductionNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Source": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TransactionRequired": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Value": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "OrderMaterialDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Backflush": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "BatchSize": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Byproduct": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "CompBOMID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CompBOMRevision": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "LineOrder": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Location": {
                "$ref": "#/components/schemas/StringValue"
              },
              "MarkforPO": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "MarkforProduction": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "MaterialStatus": {
                "$ref": "#/components/schemas/StringValue"
              },
              "MaterialType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PhantomBomID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PhantomBOMLineID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "PhantomBOMOperNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PhantomLevel": {
                "$ref": "#/components/schemas/IntValue"
              },
              "PhantomMatlLineID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "PhantomMatlOperNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PlannedCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "QtyActual": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "QtyRemaining": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "QtyRequired": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "QtyRoundUp": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ScrapFactor": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "SubcontractSource": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TotalActualCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TotalRequired": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UnitCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Warehouse": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WarehouseOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              }
            }
          }
        ]
      },
      "OrderOperationDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ActualEndDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ActualStartDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "AtVendorQuantity": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "AutoReportQty": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "BackflushLabor": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ControlPoint": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "DropShippedtoVendor": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "FinishTime": {
                "$ref": "#/components/schemas/IntValue"
              },
              "MachineTime": {
                "$ref": "#/components/schemas/IntValue"
              },
              "MachineUnits": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Material": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OrderMaterialDetail"
                }
              },
              "MoveTime": {
                "$ref": "#/components/schemas/IntValue"
              },
              "OperationDescription": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OperationNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OperationStatus": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OperationTotal": {
                "$ref": "#/components/schemas/ProductionOrderOperationTotal"
              },
              "OutsideProcess": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Overheads": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OrderOverheadDetail"
                }
              },
              "PhantomBomID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PhantomBOMLineID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "PhantomBOMOperNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PhantomBOMRevision": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PhantomLevel": {
                "$ref": "#/components/schemas/IntValue"
              },
              "PhantomMatlBOMID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PhantomMatlLineID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "PhantomMatlOperNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PhantomMatlRevision": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PhantomPriorLevelQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PlanEndDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "PlanStartDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "POLineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "POOrderNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "QtyComplete": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "QtyRemaining": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "QtyScrapped": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "QtytoProduce": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "QueueTime": {
                "$ref": "#/components/schemas/IntValue"
              },
              "RunTime": {
                "$ref": "#/components/schemas/IntValue"
              },
              "RunUnits": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ScrapAction": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SetupTime": {
                "$ref": "#/components/schemas/IntValue"
              },
              "ShippedQuantity": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ShipRemainingQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Steps": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OrderStepDetail"
                }
              },
              "Tools": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OrderToolDetail"
                }
              },
              "TotalQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Vendor": {
                "$ref": "#/components/schemas/StringValue"
              },
              "VendorLocation": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WorkCenter": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "OrderOverheadDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "CostRate": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Factor": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "LineID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Overhead": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OverheadDescription": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OverheadType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PhantomBomID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PhantomBOMLineID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "PhantomBOMOperNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PhantomBOMRevision": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PhantomLevel": {
                "$ref": "#/components/schemas/IntValue"
              },
              "PhantomMatlBOMID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PhantomMatlLineID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "PhantomMatlOperNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PhantomMatlRevision": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TotalActualCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Type": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WCFlag": {
                "$ref": "#/components/schemas/BooleanValue"
              }
            }
          }
        ]
      },
      "OrderStepDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "LineOrder": {
                "$ref": "#/components/schemas/IntValue"
              },
              "PhantomBomID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PhantomBOMLineID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "PhantomBOMOperNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PhantomBOMRevision": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PhantomLevel": {
                "$ref": "#/components/schemas/IntValue"
              },
              "PhantomMatlBOMID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PhantomMatlLineID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "PhantomMatlOperNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PhantomMatlRevision": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "OrderToolDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "PhantomBomID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PhantomBOMLineID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "PhantomBOMOperNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PhantomBOMRevision": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PhantomLevel": {
                "$ref": "#/components/schemas/IntValue"
              },
              "PhantomMatlBOMID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PhantomMatlLineID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "PhantomMatlOperNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PhantomMatlRevision": {
                "$ref": "#/components/schemas/StringValue"
              },
              "QtyRequired": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ToolID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ToolIDDescription": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ToolIDToolID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TotalActualCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TotalActualUses": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UnitCost": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "OrderTypeAttribute": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AttributeID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Enabled": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Label": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "TransactionRequired": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Value": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "OrderTypes": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Active": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "AllowPreassigningLotSerialNumbers": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Attributes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OrderTypeAttribute"
                }
              },
              "AutoBackwardReporting": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "CheckforMaterialAvailability": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "CostingMethod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Defaultoperationmoveqty": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ExceedingQtyforOperations": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ExcludefromMRP": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Function": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Includeunreleasedbatchqty": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "IssueMaterialNotOnOrder": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ItemHeader": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Material": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "MoveonCompletedOperations": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Operation": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "OrderNumberingSequence": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OverCompleteOrders": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Overhead": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "OverIssueMaterial": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PrintProductionReportID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RequireParentLotSerialNumber": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ScrapLocation": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ScrapSource": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ScrapWarehouse": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Step": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "SubstituteWorkCenters": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Tool": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "UnderIssueBackflushMaterial": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UnderIssueMaterial": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WIPVarianceAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WIPVarianceSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WorkinProcessAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WorkInProcessSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "OrderTypesCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/OrderTypes"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "Overhead": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Account": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CostRate": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OverheadID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OverheadType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subaccount": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "OverheadCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Overhead"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "PlanProductionOrder": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ProductionOrder"
          }
        }
      },
      "ProductionAttributes": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Detail": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductionAttributesDetail"
                }
              },
              "OrderAttributes": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "OrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProductionNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TransactionAttributes": {
                "$ref": "#/components/schemas/BooleanValue"
              }
            }
          }
        ]
      },
      "ProductionAttributesCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ProductionAttributes"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "ProductionAttributesDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AttributeID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BatNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DocType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Enabled": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "InventoryDescription": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Label": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Level": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "MoveQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "OperationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProductionNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Source": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TranDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "TranLineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "TranOperationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TransRequired": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Value": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Warehouse": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ProductionDataCollectionSettings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "DefaultWarehousefromUserProfile": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "RequestLocationforEachIteminMaterials": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "RequestLocationforEachIteminMoveLabor": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "UseDefaultOrderType": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "UseDefaultQuantityinMaterials": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "UseDefaultQuantityinMoveLabor": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "UseExplicitLineConfirmation": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "UseRemainingQuantityinMaterials": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "UseRemainingQuantityinMove": {
                "$ref": "#/components/schemas/BooleanValue"
              }
            }
          }
        ]
      },
      "ProductionOrder": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Allocations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductionOrderAllocation"
                }
              },
              "AllowPreassigningLotSerialNumbers": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "AutoBackwardReporting": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "BOMID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BOMRevision": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Branch": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ConfigKey": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ConfigurationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ConfRevision": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Constraint": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "CostCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CostingMethod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Customer": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CustomerName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DispatchPriority": {
                "$ref": "#/components/schemas/ShortValue"
              },
              "EndDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "EstimateID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EstimateRevision": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EventHistory": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventHistoryDetail"
                }
              },
              "ExcludefromMRP": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Hold": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Location": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrderAttributes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OrderAttributeDetail"
                }
              },
              "OrderDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "OrderDescription": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrderTotals": {
                "$ref": "#/components/schemas/ProductionOrderTotals"
              },
              "OrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ParentOrder": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ParentOrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProductionNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProductManager": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProductOrder": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProductOrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProductWorkgroup": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Project": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProjectTask": {
                "$ref": "#/components/schemas/StringValue"
              },
              "QtyComplete": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "QtyRemaining": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "QtyScrapped": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "QtytoProduce": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "RequireParentLotSerialNumber": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ScheduleStatus": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SchedulingMethod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ScrapLocation": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ScrapOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ScrapWarehouse": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SOLineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "SOOrderNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SOOrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Source": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SourceDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "SourceOrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SourceProductionNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "StartDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UpdateProject": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "UseFixedMfgLeadTimesforOrderDates": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "UseOrderStartDateforMRP": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Warehouse": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WIPAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WIPSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WIPVarianceAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WIPVarianceSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ProductionOrderAllocation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "CompleteQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ExpirationDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Location": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LotSerialNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProductionNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Quantity": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "RemainingQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ScrappedQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "SplitLineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ProductionOrderCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ProductionOrder"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "ProductionOrderDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Branch": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Hold": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Operations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OrderOperationDetail"
                }
              },
              "OrderDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "OrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProductionNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Warehouse": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ProductionOrderDetailCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ProductionOrderDetail"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "ProductionOrderOperationTotal": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ActualFixedOverhead": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ActualLabor": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ActualLaborTime": {
                "$ref": "#/components/schemas/IntValue"
              },
              "ActualMachine": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ActualMaterial": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ActualSubcontract": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ActualTool": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ActualVariableOverhead": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Adjustments": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "FixedOverheadVariance": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "LaborTimeVariance": {
                "$ref": "#/components/schemas/IntValue"
              },
              "LaborVariance": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "MachineVariance": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "MaterialVariance": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "MFGtoInventory": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PlanCostDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "PlanFixedOverhead": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PlanLabor": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PlanLaborTime": {
                "$ref": "#/components/schemas/IntValue"
              },
              "PlanMachine": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PlanMaterial": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PlanQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PlanRefMaterial": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PlanSubcontract": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PlanTool": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PlanTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PlanVariableOverhead": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ScrapAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "SubcontractVariance": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ToolVariance": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TotalVariance": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "VariableOverheadVariance": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "WIPBalance": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "WIPTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "ProductionOrderTotals": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ActualFixedOverhead": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ActualLabor": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ActualLaborTime": {
                "$ref": "#/components/schemas/IntValue"
              },
              "ActualMachine": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ActualMaterial": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ActualSubcontract": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ActualTool": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ActualVariableOverhead": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Adjustments": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "FixedOverheadVariance": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "LaborTimeVariance": {
                "$ref": "#/components/schemas/IntValue"
              },
              "LaborVariance": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "MachineVariance": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "MaterialVariance": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "MFGtoInventory": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PlanCostDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "PlanFixedOverhead": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PlanLabor": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PlanLaborTime": {
                "$ref": "#/components/schemas/IntValue"
              },
              "PlanMachine": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PlanMaterial": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PlanRefMaterial": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PlanSubcontract": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PlanTool": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PlanTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PlanUnitCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PlanVariableOverhead": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ScrapAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "SubcontractVariance": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ToolVariance": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TotalVariance": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "VariableOverheadVariance": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "WIPBalance": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "WIPTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "ProductionPreferences": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BlockSize": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CapabletoPromiseOrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CostNumberingSequence": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DataCollectionSettings": {
                "$ref": "#/components/schemas/ProductionDataCollectionSettings"
              },
              "DefaultDisassembleOrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DefaultOrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DefaultUserEmployeeID": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "DisassemblyNumberingSequence": {
                "$ref": "#/components/schemas/StringValue"
              },
              "FixedMfgCalendarID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "FixedMfgUnits": {
                "$ref": "#/components/schemas/StringValue"
              },
              "HoldDocumentsonEntry": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "HoldShipmentsonEntry": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "IncludeScrapinCompletions": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "LaborNumberingSequence": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LockProductionOrdersBeforeClosing": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "MachineScheduling": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "MaterialNumberingSequence": {
                "$ref": "#/components/schemas/StringValue"
              },
              "MoveNumberingSequence": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PostSummaryonUpdatingGL": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "RestrictClockEntrytoCurrentUser": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ToolScheduling": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "UseFixedManufacturingTimes": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "UseLaborRate": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UseOrderStartDateforMRP": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "UseShiftCrewSize": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ValidateDocumentTotalsonEntry": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ValidateShipmentTotalonConfirmation": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "VendorShipmentNumberingSequence": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WipAdjustNumberingSequence": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ProductionPreferencesCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ProductionPreferences"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "RegenerateMRP": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "LastCompletedAt": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "LastCompletedBy": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Messages": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RegenerateMRPMessage"
                }
              }
            }
          }
        ]
      },
      "RegenerateMRPCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/RegenerateMRP"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "RegenerateMRPMessage": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "CreatedAt": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "CreatedBy": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CreatedScreenID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Message": {
                "$ref": "#/components/schemas/StringValue"
              },
              "MessageType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProcessID": {
                "$ref": "#/components/schemas/GuidValue"
              },
              "Recno": {
                "$ref": "#/components/schemas/IntValue"
              }
            }
          }
        ]
      },
      "RegenerateMRPProcess": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/RegenerateMRP"
          }
        }
      },
      "ReleaseDisassemblyEntry": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/DisassemblyEntry"
          }
        }
      },
      "ReleaseLaborEntry": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/LaborEntry"
          }
        }
      },
      "ReleaseMaterialEntry": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/MaterialEntry"
          }
        }
      },
      "ReleaseMoveEntry": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/MoveEntry"
          }
        }
      },
      "ReleaseProductionOrder": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ProductionOrder"
          }
        }
      },
      "ReleaseProductionOrders": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Branch": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CostCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Customer": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EndDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrderDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "OrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProductionNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Project": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProjectTask": {
                "$ref": "#/components/schemas/StringValue"
              },
              "QtytoProduce": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Selected": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "SOOrderNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SOOrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Source": {
                "$ref": "#/components/schemas/StringValue"
              },
              "StartDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Warehouse": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ReleaseProductionOrdersCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ReleaseProductionOrders"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "ReleaseProductionOrdersProcess": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ReleaseProductionOrders"
          }
        }
      },
      "ReleaseProductionOrdersProcessAll": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ReleaseProductionOrders"
          }
        }
      },
      "ReleaseWipAdjustmentEntry": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/WipAdjustmentEntry"
          }
        }
      },
      "RollCosts": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/CostRoll"
          }
        }
      },
      "RoughCutPlanning": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Detail": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RoughCutPlanningDetail"
                }
              },
              "ExcludeFirmOrders": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ExcludePlanningOrders": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ProcessAction": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ReleaseOrders": {
                "$ref": "#/components/schemas/BooleanValue"
              }
            }
          }
        ]
      },
      "RoughCutPlanningCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/RoughCutPlanning"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "RoughCutPlanningDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Branch": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Constraint": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Customer": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DispatchPriority": {
                "$ref": "#/components/schemas/ShortValue"
              },
              "EndDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "EndTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "FirmSchedule": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrderDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "OrderDescription": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProductionNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "QtyRemaining": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "QtytoProduce": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ScheduleID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "ScheduleStatus": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SchedulingMethod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Selected": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "SOOrderNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "StartDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "StartTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Warehouse": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "RoughCutPlanningProcess": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/RoughCutPlanning"
          }
        }
      },
      "RoughCutPlanningProcessAll": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/RoughCutPlanning"
          }
        }
      },
      "ScheduleProductionOrder": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ProductionOrder"
          }
        }
      },
      "SetProductionOrderDetailMaterialsCompleted": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ProductionOrderDetail"
          }
        }
      },
      "SetProductionOrderDetailMaterialsOpen": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ProductionOrderDetail"
          }
        }
      },
      "SetProductionOrderMaterialsCompleted": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ProductionOrder"
          }
        }
      },
      "SetProductionOrderMaterialsOpen": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ProductionOrder"
          }
        }
      },
      "Shift": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "CrewSize": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DiffType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Shift": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ShiftDiff": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "ShiftCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Shift"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "ShiftDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "CalendarID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CrewSize": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "DiffType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Efficiency": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "LaborCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Machines": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Shift": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ShiftDiff": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "ShipToSettings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "FOBPoint": {
                "$ref": "#/components/schemas/StringValue"
              },
              "FreightCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "FreightPrice": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "GroundCollect": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Insurance": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "InvoiceFreightPriceBasedOn": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OverrideFreightPrice": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ResidentialDelivery": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "SaturdayDelivery": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ShippingTerms": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ShippingZoneID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ShipToAddress": {
                "$ref": "#/components/schemas/Address"
              },
              "ShipToAddressOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ShipToContact": {
                "$ref": "#/components/schemas/DocContact"
              },
              "ShipToContactOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ShipVia": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ShortValue": {
        "type": "object",
        "properties": {
          "value": {
            "type": "integer",
            "format": "int32"
          },
          "error": {
            "type": "string"
          }
        }
      },
      "StepDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Descr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "LineOrder": {
                "$ref": "#/components/schemas/IntValue"
              }
            }
          }
        ]
      },
      "StringValue": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "error": {
            "type": "string"
          }
        }
      },
      "Tool": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Account": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Active": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ConsumedCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Schedule": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Subaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ToolID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TotalCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TotalScheduleQty": {
                "$ref": "#/components/schemas/IntValue"
              },
              "TotalUses": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UnitCost": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "ToolCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Tool"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "ToolDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "QtyRequired": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ToolID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UnitCost": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "UndoFirmProductionOrder": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ProductionOrder"
          }
        }
      },
      "UnlockOrder": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ProductionOrder"
          }
        }
      },
      "UpdatePending": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/CostRoll"
          }
        }
      },
      "VendorShipment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ControlQuantity": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Details": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VendorShipmentDetails"
                }
              },
              "Hold": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Location": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Owner": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ShipmentDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ShipmentID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ShippedQuantity": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ShippingSettings": {
                "$ref": "#/components/schemas/ShipToSettings"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Type": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Vendor": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Warehouse": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Workgroup": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "VendorShipmentCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/VendorShipment"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "VendorShipmentDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ExpirationDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Location": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LotSerialNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "MaterialLineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "OperationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "POLineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "POOrderNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProductionNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Quantity": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Released": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TranDescription": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Type": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Warehouse": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "WhereUsedDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Active": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "BackflushLabor": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "BOMID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BOMIDAMBomItem__BOMID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BomRevision": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BomWarehouse": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EndDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OperationDescription": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OperationIDOperationID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "OperationNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OperationScrapAction": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OutsideProcess": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "RevisionRevisionID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "StartDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "WipAdjustmentEntry": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BatchNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ControlAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Date": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Details": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WipAdjustmentEntryDetail"
                }
              },
              "Hold": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "OrigBatchNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrigDocType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PostPeriod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TotalAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "WipAdjustmentEntryCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/WipAdjustmentEntry"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "WipAdjustmentEntryDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Account": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CostAdj": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "GLBatchLineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "GLBatchNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "INDocType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "INLineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "INRefNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Location": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OperationNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProductionNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "QtyScrapped": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ReasonCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TranDescription": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TranType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Warehouse": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "WorkCenter": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Active": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "AllowClockEntryforMultipleProductionOrders": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "BackflushLabor": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "BackflushMaterials": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "BasisforCapacity": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ControlPoint": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "DefaultFinishTime": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DefaultMoveTime": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DefaultQueueTime": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Location": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Machines": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MachineDetail"
                }
              },
              "OutsideProcessing": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Overheads": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WorkCenterOverheadDetail"
                }
              },
              "ScrapActionDefault": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Shifts": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShiftDetail"
                }
              },
              "StandardCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "SubstituteWorkCenters": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WorkCenterSubstitute"
                }
              },
              "Warehouse": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WhereUsed": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WhereUsedDetail"
                }
              },
              "WorkCenterID": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "WorkCenterCrewSchedule": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Details": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WorkCenterCrewScheduleDetail"
                }
              },
              "FromDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Shift": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ShowAll": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ToDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "WorkCenter": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "WorkCenterCrewScheduleCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/WorkCenterCrewSchedule"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "WorkCenterCrewScheduleDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "CrewSize": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CrewSizeShortage": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "EndTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "OperationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProductionNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ScheduleDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ScheduledBlocks": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Shift": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ShiftCrewSize": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "StartTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "WorkCenter": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "WorkCenterCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/WorkCenter"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "WorkCenterOverheadDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Factor": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Overhead": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Type": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "WorkCenterSubstitute": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "SubstituteWorkCenter": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UpdateOperationDescription": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Warehouse": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "finish": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ConfigurationEntry"
          }
        }
      }
    },
    "responses": {
      "ContractBasedControllerBase_401": {
        "description": "The user is not logged in to the system.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HttpError"
            }
          },
          "text/json": {
            "schema": {
              "$ref": "#/components/schemas/HttpError"
            }
          }
        }
      },
      "ContractBasedControllerBase_500": {
        "description": "Internal server error.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HttpError"
            }
          },
          "text/json": {
            "schema": {
              "$ref": "#/components/schemas/HttpError"
            }
          }
        }
      },
      "InvokeAction_204": {
        "description": "The operation that was initiated by the action is completed.",
        "headers": {
          "Location": {
            "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
            "schema": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "InvokeAction_202": {
        "description": "The operation is in progress.",
        "headers": {
          "Location": {
            "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
            "schema": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "InvokeAction_400": {
        "description": "The data specified in the request is invalid.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HttpError"
            }
          },
          "text/json": {
            "schema": {
              "$ref": "#/components/schemas/HttpError"
            }
          }
        }
      },
      "InvokeAction_412": {
        "description": "Either the header of the request specifies that the entity has to be inserted but an entity with these keys already exists in the database and cannot be inserted, or the header specifies that the entity has to be updated but there is no entity with these keys in the database.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HttpError"
            }
          },
          "text/json": {
            "schema": {
              "$ref": "#/components/schemas/HttpError"
            }
          }
        }
      },
      "DeleteByKeys_204": {
        "description": "The record is successfully deleted."
      },
      "PutFile_204": {
        "description": "The file is successfully attached.",
        "headers": {
          "Location": {
            "description": "A URL that can be used to retrieve the file from the system.",
            "schema": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "DeleteById_204": {
        "description": "The record is successfully deleted."
      },
      "PutEntity_400": {
        "description": "The data specified in the request is invalid.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HttpError"
            }
          },
          "text/json": {
            "schema": {
              "$ref": "#/components/schemas/HttpError"
            }
          }
        }
      },
      "PutEntity_412": {
        "description": "Either the header of the request specifies that the entity has to be inserted but an entity with these keys already exists in the database and cannot be inserted, or the header specifies that the entity has to be updated but there is no entity with these keys in the database.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HttpError"
            }
          },
          "text/json": {
            "schema": {
              "$ref": "#/components/schemas/HttpError"
            }
          }
        }
      },
      "StartReport_202": {
        "description": "The operation is in progress.",
        "headers": {
          "Location": {
            "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
            "schema": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "StartReport_400": {
        "description": "The data specified in the request is invalid.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HttpError"
            }
          },
          "text/json": {
            "schema": {
              "$ref": "#/components/schemas/HttpError"
            }
          }
        }
      }
    },
    "parameters": {
      "actionName": {
        "name": "actionName",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "ids": {
        "name": "ids",
        "in": "path",
        "description": "The values of the key fields of the record. The values are slash-delimited.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "select": {
        "name": "$select",
        "in": "query",
        "description": "The fields of the entity to be returned from the system.",
        "schema": {
          "type": "string"
        }
      },
      "filter": {
        "name": "$filter",
        "in": "query",
        "description": "The conditions that determine which records should be selected from the system.",
        "schema": {
          "type": "string"
        }
      },
      "expand": {
        "name": "$expand",
        "in": "query",
        "description": "The linked and detail entities that should be expanded.",
        "schema": {
          "type": "string"
        }
      },
      "custom": {
        "name": "$custom",
        "in": "query",
        "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
        "schema": {
          "type": "string"
        }
      },
      "filename": {
        "name": "filename",
        "in": "path",
        "description": "The name of the file that you are going to attach with the extension.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "id": {
        "name": "id",
        "in": "path",
        "description": "The session ID of the record.",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "skip": {
        "name": "$skip",
        "in": "query",
        "description": "The number of records to be skipped from the list of returned records.",
        "schema": {
          "type": "integer",
          "format": "int32"
        }
      },
      "top": {
        "name": "$top",
        "in": "query",
        "description": "The number of records to be returned from the system.",
        "schema": {
          "type": "integer",
          "format": "int32"
        }
      }
    }
  },
  "tags": [
    {
      "name": "APSMaintenance",
      "description": "(AM512000)"
    },
    {
      "name": "BillOfMaterial",
      "description": "(AM208000)"
    },
    {
      "name": "BomAttributes",
      "description": "(AM208500)"
    },
    {
      "name": "BomPreferences",
      "description": "(AM101000)"
    },
    {
      "name": "CapableToPromise",
      "description": "(AM515000)"
    },
    {
      "name": "CloseProductionOrders",
      "description": "(AM506000)"
    },
    {
      "name": "ConfigurationEntry",
      "description": "(AM306010)"
    },
    {
      "name": "ConfigurationFeature",
      "description": "(AM203500)"
    },
    {
      "name": "ConfigurationMaintenance",
      "description": "(AM207500)"
    },
    {
      "name": "ConfiguratorPreferences",
      "description": "(AM104000)"
    },
    {
      "name": "CostRoll",
      "description": "(AM508000)"
    },
    {
      "name": "CostRollHistory",
      "description": "(AM408000)"
    },
    {
      "name": "CostTransaction",
      "description": "(AM309000)"
    },
    {
      "name": "CreateProductionOrder",
      "description": "(AM510000)"
    },
    {
      "name": "CriticalMaterials",
      "description": "(AM401000)"
    },
    {
      "name": "DisassemblyEntry",
      "description": "(AM301500)"
    },
    {
      "name": "EngineeringChangeOrder",
      "description": "(AM215000)"
    },
    {
      "name": "EngineeringChangeRequest",
      "description": "(AM210000)"
    },
    {
      "name": "Estimate",
      "description": "(AM303000)"
    },
    {
      "name": "EstimateClass",
      "description": "(AM206000)"
    },
    {
      "name": "EstimateOperation",
      "description": "(AM304000)"
    },
    {
      "name": "EstimatePreferences",
      "description": "(AM103000)"
    },
    {
      "name": "Forecast",
      "description": "Forecast (AM202000)"
    },
    {
      "name": "ItemWhereUsedInquiry",
      "description": "(AM402000)"
    },
    {
      "name": "LaborCodes",
      "description": "(AM206500)"
    },
    {
      "name": "LaborEntry",
      "description": "(AM301000)"
    },
    {
      "name": "LateAssignment",
      "description": "(AM312000)"
    },
    {
      "name": "Machine",
      "description": "(AM204500)"
    },
    {
      "name": "MasterProductionSchedule",
      "description": "(AM201000)"
    },
    {
      "name": "MaterialEntry",
      "description": "(AM300000)"
    },
    {
      "name": "MoveEntry",
      "description": "(AM302000)"
    },
    {
      "name": "MPSType",
      "description": "(AM203000)"
    },
    {
      "name": "MRPBuckets",
      "description": "Inventory Planning Buckets (AM201200)"
    },
    {
      "name": "MRPDetailInquiry",
      "description": "Inventory Planning Results by Item (AM404000)"
    },
    {
      "name": "MRPDisplay",
      "description": "Inventory Planning Display (AM400000)"
    },
    {
      "name": "MRPException",
      "description": "Inventory Planning Exceptions (AM403000)"
    },
    {
      "name": "MRPPreferences",
      "description": "Inventory Planning Preferences (AM100000)"
    },
    {
      "name": "MRPRequirementsByItem",
      "description": "Inventory Planning Requirements by Item (AM401200)"
    },
    {
      "name": "OrderTypes",
      "description": "(AM201100)"
    },
    {
      "name": "Overhead",
      "description": "(AM202500)"
    },
    {
      "name": "ProductionAttributes",
      "description": "(AM401500)"
    },
    {
      "name": "ProductionOrder",
      "description": "(AM201500)"
    },
    {
      "name": "ProductionOrderDetail",
      "description": "(AM209000)"
    },
    {
      "name": "ProductionPreferences",
      "description": "(AM102000)"
    },
    {
      "name": "RegenerateMRP",
      "description": "Regenerate Inventory Planning (AM505000)"
    },
    {
      "name": "ReleaseProductionOrders",
      "description": "(AM500000)"
    },
    {
      "name": "RoughCutPlanning",
      "description": "(AM501000)"
    },
    {
      "name": "Shift",
      "description": "(AM205000)"
    },
    {
      "name": "Tool",
      "description": "(AM205500)"
    },
    {
      "name": "VendorShipment",
      "description": "(AM310000)"
    },
    {
      "name": "WipAdjustmentEntry",
      "description": "(AM308000)"
    },
    {
      "name": "WorkCenter",
      "description": "(AM207000)"
    },
    {
      "name": "WorkCenterCrewSchedule",
      "description": "(AM405100)"
    }
  ]
}