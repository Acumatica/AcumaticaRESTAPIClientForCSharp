{
  "openapi": "3.0.1",
  "info": {
    "title": "Default/24.200.001",
    "version": "4"
  },
  "servers": [
    {
      "url": "http://localhost/24r200/entity/Default/24.200.001"
    }
  ],
  "paths": {
    "/ExpenseClaim/ApproveExpenseClaim": {
      "post": {
        "tags": [
          "ExpenseClaim"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ExpenseClaim_InvokeAction_ApproveExpenseClaim",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApproveExpenseClaim"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApproveExpenseClaim"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseClaim"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseClaim"
                }
              }
            }
          }
        }
      }
    },
    "/ExpenseClaim/RejectExpenseClaim": {
      "post": {
        "tags": [
          "ExpenseClaim"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ExpenseClaim_InvokeAction_RejectExpenseClaim",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RejectExpenseClaim"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RejectExpenseClaim"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseClaim"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseClaim"
                }
              }
            }
          }
        }
      }
    },
    "/ExpenseClaim/SubmitExpenseClaim": {
      "post": {
        "tags": [
          "ExpenseClaim"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ExpenseClaim_InvokeAction_SubmitExpenseClaim",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmitExpenseClaim"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmitExpenseClaim"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseClaim"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseClaim"
                }
              }
            }
          }
        }
      }
    },
    "/ExpenseClaim/ReleaseExpenseClaim": {
      "post": {
        "tags": [
          "ExpenseClaim"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ExpenseClaim_InvokeAction_ReleaseExpenseClaim",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseExpenseClaim"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseExpenseClaim"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseClaim"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseClaim"
                }
              }
            }
          }
        }
      }
    },
    "/ExpenseClaim/PutOnHoldExpenseClaim": {
      "post": {
        "tags": [
          "ExpenseClaim"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ExpenseClaim_InvokeAction_PutOnHoldExpenseClaim",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutOnHoldExpenseClaim"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PutOnHoldExpenseClaim"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseClaim"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseClaim"
                }
              }
            }
          }
        }
      }
    },
    "/ExpenseClaim/{actionName}": {
      "post": {
        "tags": [
          "ExpenseClaim"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ExpenseClaim_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseClaimCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseClaimCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseClaim"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseClaim"
                }
              }
            }
          }
        }
      }
    },
    "/ExpenseClaim/$adHocSchema": {
      "get": {
        "tags": [
          "ExpenseClaim"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "ExpenseClaim_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseClaim"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseClaim"
                }
              }
            }
          }
        }
      }
    },
    "/ExpenseClaim/{ids}": {
      "get": {
        "tags": [
          "ExpenseClaim"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "ExpenseClaim_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseClaim"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseClaim"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ExpenseClaim"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "ExpenseClaim_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/ExpenseClaim/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "ExpenseClaim"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "ExpenseClaim_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/ExpenseClaim/{id}": {
      "get": {
        "tags": [
          "ExpenseClaim"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "ExpenseClaim_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseClaim"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseClaim"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ExpenseClaim"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "ExpenseClaim_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/ExpenseClaim": {
      "get": {
        "tags": [
          "ExpenseClaim"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "ExpenseClaim_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExpenseClaim"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExpenseClaim"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ExpenseClaim"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "ExpenseClaim_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseClaim"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseClaim"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseClaim"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseClaim"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseClaim"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseClaim"
                }
              }
            }
          }
        }
      }
    },
    "/ChangeOrder/ReleaseChangeOrder": {
      "post": {
        "tags": [
          "ChangeOrder"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ChangeOrder_InvokeAction_ReleaseChangeOrder",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseChangeOrder"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseChangeOrder"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeOrder"
                }
              }
            }
          }
        }
      }
    },
    "/ChangeOrder/ApproveChangeOrder": {
      "post": {
        "tags": [
          "ChangeOrder"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ChangeOrder_InvokeAction_ApproveChangeOrder",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApproveChangeOrder"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApproveChangeOrder"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeOrder"
                }
              }
            }
          }
        }
      }
    },
    "/ChangeOrder/RejectChangeOrder": {
      "post": {
        "tags": [
          "ChangeOrder"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ChangeOrder_InvokeAction_RejectChangeOrder",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RejectChangeOrder"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RejectChangeOrder"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeOrder"
                }
              }
            }
          }
        }
      }
    },
    "/ChangeOrder/EmailChangeOrder": {
      "post": {
        "tags": [
          "ChangeOrder"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ChangeOrder_InvokeAction_EmailChangeOrder",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailChangeOrder"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailChangeOrder"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeOrder"
                }
              }
            }
          }
        }
      }
    },
    "/ChangeOrder/ReverseChangeOrder": {
      "post": {
        "tags": [
          "ChangeOrder"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ChangeOrder_InvokeAction_ReverseChangeOrder",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReverseChangeOrder"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReverseChangeOrder"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeOrder"
                }
              }
            }
          }
        }
      }
    },
    "/ChangeOrder/HoldChangeOrder": {
      "post": {
        "tags": [
          "ChangeOrder"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ChangeOrder_InvokeAction_HoldChangeOrder",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HoldChangeOrder"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HoldChangeOrder"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeOrder"
                }
              }
            }
          }
        }
      }
    },
    "/ChangeOrder/RemoveChangeOrderFromHold": {
      "post": {
        "tags": [
          "ChangeOrder"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ChangeOrder_InvokeAction_RemoveChangeOrderFromHold",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveChangeOrderFromHold"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveChangeOrderFromHold"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeOrder"
                }
              }
            }
          }
        }
      }
    },
    "/ChangeOrder/{actionName}": {
      "post": {
        "tags": [
          "ChangeOrder"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ChangeOrder_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeOrderCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeOrderCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeOrder"
                }
              }
            }
          }
        }
      }
    },
    "/ChangeOrder/$adHocSchema": {
      "get": {
        "tags": [
          "ChangeOrder"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "ChangeOrder_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeOrder"
                }
              }
            }
          }
        }
      }
    },
    "/ChangeOrder/{ids}": {
      "get": {
        "tags": [
          "ChangeOrder"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "ChangeOrder_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeOrder"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ChangeOrder"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "ChangeOrder_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/ChangeOrder/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "ChangeOrder"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "ChangeOrder_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/ChangeOrder/{id}": {
      "get": {
        "tags": [
          "ChangeOrder"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "ChangeOrder_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeOrder"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ChangeOrder"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "ChangeOrder_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/ChangeOrder": {
      "get": {
        "tags": [
          "ChangeOrder"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "ChangeOrder_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChangeOrder"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChangeOrder"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ChangeOrder"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "ChangeOrder_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeOrder"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeOrder"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeOrder"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeOrder"
                }
              }
            }
          }
        }
      }
    },
    "/PayGroup/{actionName}": {
      "post": {
        "tags": [
          "PayGroup"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "PayGroup_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayGroupCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PayGroupCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayGroup"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayGroup"
                }
              }
            }
          }
        }
      }
    },
    "/PayGroup/$adHocSchema": {
      "get": {
        "tags": [
          "PayGroup"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "PayGroup_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayGroup"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayGroup"
                }
              }
            }
          }
        }
      }
    },
    "/PayGroup/{ids}": {
      "get": {
        "tags": [
          "PayGroup"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "PayGroup_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayGroup"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayGroup"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PayGroup"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "PayGroup_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/PayGroup/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "PayGroup"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "PayGroup_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/PayGroup/{id}": {
      "get": {
        "tags": [
          "PayGroup"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "PayGroup_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayGroup"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayGroup"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PayGroup"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "PayGroup_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/PayGroup": {
      "get": {
        "tags": [
          "PayGroup"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "PayGroup_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PayGroup"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PayGroup"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PayGroup"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "PayGroup_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayGroup"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PayGroup"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayGroup"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayGroup"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayGroup"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayGroup"
                }
              }
            }
          }
        }
      }
    },
    "/ItemClass/{actionName}": {
      "post": {
        "tags": [
          "ItemClass"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ItemClass_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemClassCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemClassCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemClass"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemClass"
                }
              }
            }
          }
        }
      }
    },
    "/ItemClass/$adHocSchema": {
      "get": {
        "tags": [
          "ItemClass"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "ItemClass_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemClass"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemClass"
                }
              }
            }
          }
        }
      }
    },
    "/ItemClass/{ids}": {
      "get": {
        "tags": [
          "ItemClass"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "ItemClass_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemClass"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemClass"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ItemClass"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "ItemClass_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/ItemClass/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "ItemClass"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "ItemClass_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/ItemClass/{id}": {
      "get": {
        "tags": [
          "ItemClass"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "ItemClass_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemClass"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemClass"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ItemClass"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "ItemClass_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/ItemClass": {
      "get": {
        "tags": [
          "ItemClass"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "ItemClass_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemClass"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemClass"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ItemClass"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "ItemClass_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemClass"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemClass"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemClass"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemClass"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemClass"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemClass"
                }
              }
            }
          }
        }
      }
    },
    "/PayrollBatch/ReleaseBatch": {
      "post": {
        "tags": [
          "PayrollBatch"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "PayrollBatch_InvokeAction_ReleaseBatch",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseBatch"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseBatch"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayrollBatch"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayrollBatch"
                }
              }
            }
          }
        }
      }
    },
    "/PayrollBatch/{actionName}": {
      "post": {
        "tags": [
          "PayrollBatch"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "PayrollBatch_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayrollBatchCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PayrollBatchCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayrollBatch"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayrollBatch"
                }
              }
            }
          }
        }
      }
    },
    "/PayrollBatch/$adHocSchema": {
      "get": {
        "tags": [
          "PayrollBatch"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "PayrollBatch_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayrollBatch"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayrollBatch"
                }
              }
            }
          }
        }
      }
    },
    "/PayrollBatch/{ids}": {
      "get": {
        "tags": [
          "PayrollBatch"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "PayrollBatch_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayrollBatch"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayrollBatch"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PayrollBatch"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "PayrollBatch_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/PayrollBatch/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "PayrollBatch"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "PayrollBatch_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/PayrollBatch/{id}": {
      "get": {
        "tags": [
          "PayrollBatch"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "PayrollBatch_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayrollBatch"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayrollBatch"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PayrollBatch"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "PayrollBatch_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/PayrollBatch": {
      "get": {
        "tags": [
          "PayrollBatch"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "PayrollBatch_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PayrollBatch"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PayrollBatch"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PayrollBatch"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "PayrollBatch_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayrollBatch"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PayrollBatch"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayrollBatch"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayrollBatch"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayrollBatch"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayrollBatch"
                }
              }
            }
          }
        }
      }
    },
    "/BusinessAccount/ConvertBusinessAccountToCustomer": {
      "post": {
        "tags": [
          "BusinessAccount"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "BusinessAccount_InvokeAction_ConvertBusinessAccountToCustomer",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConvertBusinessAccountToCustomer"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConvertBusinessAccountToCustomer"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessAccount"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessAccount"
                }
              }
            }
          }
        }
      }
    },
    "/BusinessAccount/MarkBusinessAccountAsValidated": {
      "post": {
        "tags": [
          "BusinessAccount"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "BusinessAccount_InvokeAction_MarkBusinessAccountAsValidated",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkBusinessAccountAsValidated"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkBusinessAccountAsValidated"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessAccount"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessAccount"
                }
              }
            }
          }
        }
      }
    },
    "/BusinessAccount/ValidateBusinessAccountAddresses": {
      "post": {
        "tags": [
          "BusinessAccount"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "BusinessAccount_InvokeAction_ValidateBusinessAccountAddresses",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateBusinessAccountAddresses"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateBusinessAccountAddresses"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessAccount"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessAccount"
                }
              }
            }
          }
        }
      }
    },
    "/BusinessAccount/ChangeBusinessAccountID": {
      "post": {
        "tags": [
          "BusinessAccount"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "BusinessAccount_InvokeAction_ChangeBusinessAccountID",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeBusinessAccountID"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeBusinessAccountID"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessAccount"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessAccount"
                }
              }
            }
          }
        }
      }
    },
    "/BusinessAccount/CheckForBusinessAccountDuplicates": {
      "post": {
        "tags": [
          "BusinessAccount"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "BusinessAccount_InvokeAction_CheckForBusinessAccountDuplicates",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckForBusinessAccountDuplicates"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckForBusinessAccountDuplicates"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessAccount"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessAccount"
                }
              }
            }
          }
        }
      }
    },
    "/BusinessAccount/CreateContactFromBusinessAccount": {
      "post": {
        "tags": [
          "BusinessAccount"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "BusinessAccount_InvokeAction_CreateContactFromBusinessAccount",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContactFromBusinessAccount"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContactFromBusinessAccount"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessAccount"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessAccount"
                }
              }
            }
          }
        }
      }
    },
    "/BusinessAccount/{actionName}": {
      "post": {
        "tags": [
          "BusinessAccount"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "BusinessAccount_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BusinessAccountCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BusinessAccountCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessAccount"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessAccount"
                }
              }
            }
          }
        }
      }
    },
    "/BusinessAccount/$adHocSchema": {
      "get": {
        "tags": [
          "BusinessAccount"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "BusinessAccount_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessAccount"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessAccount"
                }
              }
            }
          }
        }
      }
    },
    "/BusinessAccount/{ids}": {
      "get": {
        "tags": [
          "BusinessAccount"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "BusinessAccount_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessAccount"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessAccount"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BusinessAccount"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "BusinessAccount_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/BusinessAccount/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "BusinessAccount"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "BusinessAccount_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/BusinessAccount/{id}": {
      "get": {
        "tags": [
          "BusinessAccount"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "BusinessAccount_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessAccount"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessAccount"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BusinessAccount"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "BusinessAccount_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/BusinessAccount": {
      "get": {
        "tags": [
          "BusinessAccount"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "BusinessAccount_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BusinessAccount"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BusinessAccount"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "BusinessAccount"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "BusinessAccount_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BusinessAccount"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BusinessAccount"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessAccount"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessAccount"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessAccount"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessAccount"
                }
              }
            }
          }
        }
      }
    },
    "/ExternalCommitment/{actionName}": {
      "post": {
        "tags": [
          "ExternalCommitment"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ExternalCommitment_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalCommitmentCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalCommitmentCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalCommitment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalCommitment"
                }
              }
            }
          }
        }
      }
    },
    "/ExternalCommitment/$adHocSchema": {
      "get": {
        "tags": [
          "ExternalCommitment"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "ExternalCommitment_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalCommitment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalCommitment"
                }
              }
            }
          }
        }
      }
    },
    "/ExternalCommitment/{ids}": {
      "get": {
        "tags": [
          "ExternalCommitment"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "ExternalCommitment_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalCommitment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalCommitment"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ExternalCommitment"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "ExternalCommitment_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/ExternalCommitment/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "ExternalCommitment"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "ExternalCommitment_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/ExternalCommitment/{id}": {
      "get": {
        "tags": [
          "ExternalCommitment"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "ExternalCommitment_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalCommitment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalCommitment"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ExternalCommitment"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "ExternalCommitment_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/ExternalCommitment": {
      "get": {
        "tags": [
          "ExternalCommitment"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "ExternalCommitment_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExternalCommitment"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExternalCommitment"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ExternalCommitment"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "ExternalCommitment_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalCommitment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalCommitment"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalCommitment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalCommitment"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalCommitment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalCommitment"
                }
              }
            }
          }
        }
      }
    },
    "/Currency/{actionName}": {
      "post": {
        "tags": [
          "Currency"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Currency_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Currency"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Currency"
                }
              }
            }
          }
        }
      }
    },
    "/Currency/$adHocSchema": {
      "get": {
        "tags": [
          "Currency"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "Currency_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Currency"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Currency"
                }
              }
            }
          }
        }
      }
    },
    "/Currency/{ids}": {
      "get": {
        "tags": [
          "Currency"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "Currency_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Currency"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Currency"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Currency"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "Currency_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/Currency/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Currency"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "Currency_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/Currency/{id}": {
      "get": {
        "tags": [
          "Currency"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "Currency_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Currency"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Currency"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Currency"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "Currency_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/Currency": {
      "get": {
        "tags": [
          "Currency"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "Currency_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Currency"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Currency"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Currency"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "Currency_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Currency"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Currency"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Currency"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Currency"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Currency"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Currency"
                }
              }
            }
          }
        }
      }
    },
    "/AccountGroup/{actionName}": {
      "post": {
        "tags": [
          "AccountGroup"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "AccountGroup_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountGroupCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountGroupCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountGroup"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountGroup"
                }
              }
            }
          }
        }
      }
    },
    "/AccountGroup/$adHocSchema": {
      "get": {
        "tags": [
          "AccountGroup"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "AccountGroup_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountGroup"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountGroup"
                }
              }
            }
          }
        }
      }
    },
    "/AccountGroup/{ids}": {
      "get": {
        "tags": [
          "AccountGroup"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "AccountGroup_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountGroup"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountGroup"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AccountGroup"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "AccountGroup_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/AccountGroup/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "AccountGroup"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "AccountGroup_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/AccountGroup/{id}": {
      "get": {
        "tags": [
          "AccountGroup"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "AccountGroup_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountGroup"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountGroup"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AccountGroup"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "AccountGroup_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/AccountGroup": {
      "get": {
        "tags": [
          "AccountGroup"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "AccountGroup_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccountGroup"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccountGroup"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AccountGroup"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "AccountGroup_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountGroup"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountGroup"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountGroup"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountGroup"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountGroup"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountGroup"
                }
              }
            }
          }
        }
      }
    },
    "/Bill/ReleaseBill": {
      "post": {
        "tags": [
          "Bill"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Bill_InvokeAction_ReleaseBill",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseBill"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseBill"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bill"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bill"
                }
              }
            }
          }
        }
      }
    },
    "/Bill/ReleaseRetainage": {
      "post": {
        "tags": [
          "Bill"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Bill_InvokeAction_ReleaseRetainage",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseRetainage"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseRetainage"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bill"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bill"
                }
              }
            }
          }
        }
      }
    },
    "/Bill/ReverseBill": {
      "post": {
        "tags": [
          "Bill"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Bill_InvokeAction_ReverseBill",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReverseBill"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReverseBill"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bill"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bill"
                }
              }
            }
          }
        }
      }
    },
    "/Bill/{actionName}": {
      "post": {
        "tags": [
          "Bill"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Bill_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BillCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bill"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bill"
                }
              }
            }
          }
        }
      }
    },
    "/Bill/$adHocSchema": {
      "get": {
        "tags": [
          "Bill"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "Bill_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bill"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bill"
                }
              }
            }
          }
        }
      }
    },
    "/Bill/{ids}": {
      "get": {
        "tags": [
          "Bill"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "Bill_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bill"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bill"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Bill"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "Bill_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/Bill/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Bill"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "Bill_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/Bill/{id}": {
      "get": {
        "tags": [
          "Bill"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "Bill_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bill"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bill"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Bill"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "Bill_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/Bill": {
      "get": {
        "tags": [
          "Bill"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "Bill_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bill"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bill"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Bill"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "Bill_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Bill"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Bill"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bill"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bill"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bill"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bill"
                }
              }
            }
          }
        }
      }
    },
    "/Email/SendEmail": {
      "post": {
        "tags": [
          "Email"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Email_InvokeAction_SendEmail",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendEmail"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SendEmail"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              }
            }
          }
        }
      }
    },
    "/Email/CreateContactFromEmail": {
      "post": {
        "tags": [
          "Email"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Email_InvokeAction_CreateContactFromEmail",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContactFromEmail"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContactFromEmail"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              }
            }
          }
        }
      }
    },
    "/Email/CreateEventFromEmail": {
      "post": {
        "tags": [
          "Email"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Email_InvokeAction_CreateEventFromEmail",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEventFromEmail"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEventFromEmail"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              }
            }
          }
        }
      }
    },
    "/Email/CreateLeadFromEmail": {
      "post": {
        "tags": [
          "Email"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Email_InvokeAction_CreateLeadFromEmail",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLeadFromEmail"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLeadFromEmail"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              }
            }
          }
        }
      }
    },
    "/Email/CreateOpportunityFromEmail": {
      "post": {
        "tags": [
          "Email"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Email_InvokeAction_CreateOpportunityFromEmail",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOpportunityFromEmail"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOpportunityFromEmail"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              }
            }
          }
        }
      }
    },
    "/Email/CreateExpenseReceiptFromEmail": {
      "post": {
        "tags": [
          "Email"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Email_InvokeAction_CreateExpenseReceiptFromEmail",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateExpenseReceiptFromEmail"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateExpenseReceiptFromEmail"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              }
            }
          }
        }
      }
    },
    "/Email/CreateCaseFromEmail": {
      "post": {
        "tags": [
          "Email"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Email_InvokeAction_CreateCaseFromEmail",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCaseFromEmail"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCaseFromEmail"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              }
            }
          }
        }
      }
    },
    "/Email/CreateTaskFromEmail": {
      "post": {
        "tags": [
          "Email"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Email_InvokeAction_CreateTaskFromEmail",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTaskFromEmail"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTaskFromEmail"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              }
            }
          }
        }
      }
    },
    "/Email/RestoreDeletedEmail": {
      "post": {
        "tags": [
          "Email"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Email_InvokeAction_RestoreDeletedEmail",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestoreDeletedEmail"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RestoreDeletedEmail"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              }
            }
          }
        }
      }
    },
    "/Email/RestoreArchivedEmail": {
      "post": {
        "tags": [
          "Email"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Email_InvokeAction_RestoreArchivedEmail",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestoreArchivedEmail"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RestoreArchivedEmail"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              }
            }
          }
        }
      }
    },
    "/Email/ProcessEmail": {
      "post": {
        "tags": [
          "Email"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Email_InvokeAction_ProcessEmail",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessEmail"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessEmail"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              }
            }
          }
        }
      }
    },
    "/Email/CancelSendingEmail": {
      "post": {
        "tags": [
          "Email"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Email_InvokeAction_CancelSendingEmail",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelSendingEmail"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelSendingEmail"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              }
            }
          }
        }
      }
    },
    "/Email/ArchiveEmail": {
      "post": {
        "tags": [
          "Email"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Email_InvokeAction_ArchiveEmail",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArchiveEmail"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ArchiveEmail"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              }
            }
          }
        }
      }
    },
    "/Email/{actionName}": {
      "post": {
        "tags": [
          "Email"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Email_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              }
            }
          }
        }
      }
    },
    "/Email/$adHocSchema": {
      "get": {
        "tags": [
          "Email"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "Email_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              }
            }
          }
        }
      }
    },
    "/Email/{ids}": {
      "get": {
        "tags": [
          "Email"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "Email_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Email"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "Email_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/Email/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Email"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "Email_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/Email/{id}": {
      "get": {
        "tags": [
          "Email"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "Email_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Email"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "Email_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/Email": {
      "get": {
        "tags": [
          "Email"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "Email_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Email"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Email"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Email"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "Email_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Email"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Email"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              }
            }
          }
        }
      }
    },
    "/WorkClassCompensationCode/{actionName}": {
      "post": {
        "tags": [
          "WorkClassCompensationCode"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "WorkClassCompensationCode_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkClassCompensationCodeCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkClassCompensationCodeCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkClassCompensationCode"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkClassCompensationCode"
                }
              }
            }
          }
        }
      }
    },
    "/WorkClassCompensationCode/$adHocSchema": {
      "get": {
        "tags": [
          "WorkClassCompensationCode"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "WorkClassCompensationCode_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkClassCompensationCode"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkClassCompensationCode"
                }
              }
            }
          }
        }
      }
    },
    "/WorkClassCompensationCode/{ids}": {
      "get": {
        "tags": [
          "WorkClassCompensationCode"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "WorkClassCompensationCode_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkClassCompensationCode"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkClassCompensationCode"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WorkClassCompensationCode"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "WorkClassCompensationCode_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/WorkClassCompensationCode/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "WorkClassCompensationCode"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "WorkClassCompensationCode_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/WorkClassCompensationCode/{id}": {
      "get": {
        "tags": [
          "WorkClassCompensationCode"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "WorkClassCompensationCode_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkClassCompensationCode"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkClassCompensationCode"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WorkClassCompensationCode"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "WorkClassCompensationCode_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/WorkClassCompensationCode": {
      "get": {
        "tags": [
          "WorkClassCompensationCode"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "WorkClassCompensationCode_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkClassCompensationCode"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkClassCompensationCode"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "WorkClassCompensationCode"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "WorkClassCompensationCode_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkClassCompensationCode"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkClassCompensationCode"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkClassCompensationCode"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkClassCompensationCode"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkClassCompensationCode"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkClassCompensationCode"
                }
              }
            }
          }
        }
      }
    },
    "/Customer/CreateContactFromCustomer": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Customer_InvokeAction_CreateContactFromCustomer",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContactFromCustomer"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContactFromCustomer"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          }
        }
      }
    },
    "/Customer/{actionName}": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Customer_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          }
        }
      }
    },
    "/Customer/$adHocSchema": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "Customer_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          }
        }
      }
    },
    "/Customer/{ids}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "Customer_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Customer"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "Customer_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/Customer/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "Customer_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/Customer/{id}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "Customer_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Customer"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "Customer_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/Customer": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "Customer_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Customer"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Customer"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "Customer_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          }
        }
      }
    },
    "/InventoryIssue/ReleaseInventoryIssue": {
      "post": {
        "tags": [
          "InventoryIssue"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "InventoryIssue_InvokeAction_ReleaseInventoryIssue",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseInventoryIssue"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseInventoryIssue"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryIssue"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryIssue"
                }
              }
            }
          }
        }
      }
    },
    "/InventoryIssue/{actionName}": {
      "post": {
        "tags": [
          "InventoryIssue"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "InventoryIssue_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryIssueCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryIssueCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryIssue"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryIssue"
                }
              }
            }
          }
        }
      }
    },
    "/InventoryIssue/$adHocSchema": {
      "get": {
        "tags": [
          "InventoryIssue"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "InventoryIssue_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryIssue"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryIssue"
                }
              }
            }
          }
        }
      }
    },
    "/InventoryIssue/{ids}": {
      "get": {
        "tags": [
          "InventoryIssue"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "InventoryIssue_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryIssue"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryIssue"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "InventoryIssue"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "InventoryIssue_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/InventoryIssue/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "InventoryIssue"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "InventoryIssue_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/InventoryIssue/{id}": {
      "get": {
        "tags": [
          "InventoryIssue"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "InventoryIssue_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryIssue"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryIssue"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "InventoryIssue"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "InventoryIssue_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/InventoryIssue": {
      "get": {
        "tags": [
          "InventoryIssue"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "InventoryIssue_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InventoryIssue"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InventoryIssue"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "InventoryIssue"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "InventoryIssue_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryIssue"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryIssue"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryIssue"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryIssue"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryIssue"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryIssue"
                }
              }
            }
          }
        }
      }
    },
    "/AmazonStore/{actionName}": {
      "post": {
        "tags": [
          "AmazonStore"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "AmazonStore_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AmazonStoreCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AmazonStoreCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AmazonStore"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AmazonStore"
                }
              }
            }
          }
        }
      }
    },
    "/AmazonStore/$adHocSchema": {
      "get": {
        "tags": [
          "AmazonStore"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "AmazonStore_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AmazonStore"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AmazonStore"
                }
              }
            }
          }
        }
      }
    },
    "/AmazonStore/{ids}": {
      "get": {
        "tags": [
          "AmazonStore"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "AmazonStore_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AmazonStore"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AmazonStore"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AmazonStore"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "AmazonStore_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/AmazonStore/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "AmazonStore"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "AmazonStore_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/AmazonStore/{id}": {
      "get": {
        "tags": [
          "AmazonStore"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "AmazonStore_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AmazonStore"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AmazonStore"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AmazonStore"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "AmazonStore_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/AmazonStore": {
      "get": {
        "tags": [
          "AmazonStore"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "AmazonStore_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AmazonStore"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AmazonStore"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AmazonStore"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "AmazonStore_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AmazonStore"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AmazonStore"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AmazonStore"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AmazonStore"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AmazonStore"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AmazonStore"
                }
              }
            }
          }
        }
      }
    },
    "/FinancialYear/{actionName}": {
      "post": {
        "tags": [
          "FinancialYear"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "FinancialYear_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialYearCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialYearCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialYear"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialYear"
                }
              }
            }
          }
        }
      }
    },
    "/FinancialYear/$adHocSchema": {
      "get": {
        "tags": [
          "FinancialYear"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "FinancialYear_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialYear"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialYear"
                }
              }
            }
          }
        }
      }
    },
    "/FinancialYear/{ids}": {
      "get": {
        "tags": [
          "FinancialYear"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "FinancialYear_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialYear"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialYear"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "FinancialYear"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "FinancialYear_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/FinancialYear/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "FinancialYear"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "FinancialYear_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/FinancialYear/{id}": {
      "get": {
        "tags": [
          "FinancialYear"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "FinancialYear_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialYear"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialYear"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "FinancialYear"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "FinancialYear_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/FinancialYear": {
      "get": {
        "tags": [
          "FinancialYear"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "FinancialYear_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FinancialYear"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FinancialYear"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "FinancialYear"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "FinancialYear_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialYear"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialYear"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialYear"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialYear"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialYear"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialYear"
                }
              }
            }
          }
        }
      }
    },
    "/ShipVia/{actionName}": {
      "post": {
        "tags": [
          "ShipVia"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ShipVia_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShipViaCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ShipViaCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShipVia"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShipVia"
                }
              }
            }
          }
        }
      }
    },
    "/ShipVia/$adHocSchema": {
      "get": {
        "tags": [
          "ShipVia"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "ShipVia_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShipVia"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShipVia"
                }
              }
            }
          }
        }
      }
    },
    "/ShipVia/{ids}": {
      "get": {
        "tags": [
          "ShipVia"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "ShipVia_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShipVia"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShipVia"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ShipVia"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "ShipVia_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/ShipVia/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "ShipVia"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "ShipVia_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/ShipVia/{id}": {
      "get": {
        "tags": [
          "ShipVia"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "ShipVia_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShipVia"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShipVia"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ShipVia"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "ShipVia_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/ShipVia": {
      "get": {
        "tags": [
          "ShipVia"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "ShipVia_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShipVia"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShipVia"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ShipVia"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "ShipVia_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShipVia"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ShipVia"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShipVia"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShipVia"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShipVia"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShipVia"
                }
              }
            }
          }
        }
      }
    },
    "/Salesperson/{actionName}": {
      "post": {
        "tags": [
          "Salesperson"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Salesperson_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalespersonCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SalespersonCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Salesperson"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Salesperson"
                }
              }
            }
          }
        }
      }
    },
    "/Salesperson/$adHocSchema": {
      "get": {
        "tags": [
          "Salesperson"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "Salesperson_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Salesperson"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Salesperson"
                }
              }
            }
          }
        }
      }
    },
    "/Salesperson/{ids}": {
      "get": {
        "tags": [
          "Salesperson"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "Salesperson_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Salesperson"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Salesperson"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Salesperson"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "Salesperson_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/Salesperson/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Salesperson"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "Salesperson_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/Salesperson/{id}": {
      "get": {
        "tags": [
          "Salesperson"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "Salesperson_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Salesperson"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Salesperson"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Salesperson"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "Salesperson_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/Salesperson": {
      "get": {
        "tags": [
          "Salesperson"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "Salesperson_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Salesperson"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Salesperson"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Salesperson"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "Salesperson_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Salesperson"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Salesperson"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Salesperson"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Salesperson"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Salesperson"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Salesperson"
                }
              }
            }
          }
        }
      }
    },
    "/ProjectBudget/{actionName}": {
      "post": {
        "tags": [
          "ProjectBudget"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ProjectBudget_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectBudgetCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectBudgetCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectBudget"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectBudget"
                }
              }
            }
          }
        }
      }
    },
    "/ProjectBudget/$adHocSchema": {
      "get": {
        "tags": [
          "ProjectBudget"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "ProjectBudget_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectBudget"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectBudget"
                }
              }
            }
          }
        }
      }
    },
    "/ProjectBudget/{ids}": {
      "get": {
        "tags": [
          "ProjectBudget"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "ProjectBudget_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectBudget"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectBudget"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProjectBudget"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "ProjectBudget_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/ProjectBudget/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "ProjectBudget"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "ProjectBudget_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/ProjectBudget/{id}": {
      "get": {
        "tags": [
          "ProjectBudget"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "ProjectBudget_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectBudget"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectBudget"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProjectBudget"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "ProjectBudget_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/ProjectBudget": {
      "get": {
        "tags": [
          "ProjectBudget"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "ProjectBudget_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectBudget"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectBudget"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProjectBudget"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "ProjectBudget_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectBudget"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectBudget"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectBudget"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectBudget"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectBudget"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectBudget"
                }
              }
            }
          }
        }
      }
    },
    "/Subcontract/ReleaseFromHold": {
      "post": {
        "tags": [
          "Subcontract"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Subcontract_InvokeAction_ReleaseFromHold",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseFromHold"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseFromHold"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subcontract"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subcontract"
                }
              }
            }
          }
        }
      }
    },
    "/Subcontract/PutOnHold": {
      "post": {
        "tags": [
          "Subcontract"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Subcontract_InvokeAction_PutOnHold",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutOnHold"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PutOnHold"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subcontract"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subcontract"
                }
              }
            }
          }
        }
      }
    },
    "/Subcontract/{actionName}": {
      "post": {
        "tags": [
          "Subcontract"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Subcontract_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubcontractCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SubcontractCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subcontract"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subcontract"
                }
              }
            }
          }
        }
      }
    },
    "/Subcontract/$adHocSchema": {
      "get": {
        "tags": [
          "Subcontract"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "Subcontract_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subcontract"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subcontract"
                }
              }
            }
          }
        }
      }
    },
    "/Subcontract/{ids}": {
      "get": {
        "tags": [
          "Subcontract"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "Subcontract_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subcontract"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subcontract"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Subcontract"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "Subcontract_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/Subcontract/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Subcontract"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "Subcontract_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/Subcontract/{id}": {
      "get": {
        "tags": [
          "Subcontract"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "Subcontract_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subcontract"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subcontract"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Subcontract"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "Subcontract_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/Subcontract": {
      "get": {
        "tags": [
          "Subcontract"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "Subcontract_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Subcontract"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Subcontract"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Subcontract"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "Subcontract_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Subcontract"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Subcontract"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subcontract"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subcontract"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subcontract"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subcontract"
                }
              }
            }
          }
        }
      }
    },
    "/ServiceOrder/CompleteOrder": {
      "post": {
        "tags": [
          "ServiceOrder"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ServiceOrder_InvokeAction_CompleteOrder",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompleteOrder"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CompleteOrder"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceOrder"
                }
              }
            }
          }
        }
      }
    },
    "/ServiceOrder/CancelOrder": {
      "post": {
        "tags": [
          "ServiceOrder"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ServiceOrder_InvokeAction_CancelOrder",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelOrder"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelOrder"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceOrder"
                }
              }
            }
          }
        }
      }
    },
    "/ServiceOrder/ReopenOrder": {
      "post": {
        "tags": [
          "ServiceOrder"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ServiceOrder_InvokeAction_ReopenOrder",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReopenOrder"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReopenOrder"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceOrder"
                }
              }
            }
          }
        }
      }
    },
    "/ServiceOrder/CloseOrder": {
      "post": {
        "tags": [
          "ServiceOrder"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ServiceOrder_InvokeAction_CloseOrder",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CloseOrder"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CloseOrder"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceOrder"
                }
              }
            }
          }
        }
      }
    },
    "/ServiceOrder/UncloseOrder": {
      "post": {
        "tags": [
          "ServiceOrder"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ServiceOrder_InvokeAction_UncloseOrder",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UncloseOrder"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UncloseOrder"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceOrder"
                }
              }
            }
          }
        }
      }
    },
    "/ServiceOrder/InvoiceOrder": {
      "post": {
        "tags": [
          "ServiceOrder"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ServiceOrder_InvokeAction_InvoiceOrder",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceOrder"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceOrder"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceOrder"
                }
              }
            }
          }
        }
      }
    },
    "/ServiceOrder/AllowBilling": {
      "post": {
        "tags": [
          "ServiceOrder"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ServiceOrder_InvokeAction_AllowBilling",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AllowBilling"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AllowBilling"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceOrder"
                }
              }
            }
          }
        }
      }
    },
    "/ServiceOrder/RecalcExternalTax": {
      "post": {
        "tags": [
          "ServiceOrder"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ServiceOrder_InvokeAction_RecalcExternalTax",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecalcExternalTax"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RecalcExternalTax"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceOrder"
                }
              }
            }
          }
        }
      }
    },
    "/ServiceOrder/{actionName}": {
      "post": {
        "tags": [
          "ServiceOrder"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ServiceOrder_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceOrderCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceOrderCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceOrder"
                }
              }
            }
          }
        }
      }
    },
    "/ServiceOrder/$adHocSchema": {
      "get": {
        "tags": [
          "ServiceOrder"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "ServiceOrder_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceOrder"
                }
              }
            }
          }
        }
      }
    },
    "/ServiceOrder/{ids}": {
      "get": {
        "tags": [
          "ServiceOrder"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "ServiceOrder_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceOrder"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ServiceOrder"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "ServiceOrder_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/ServiceOrder/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "ServiceOrder"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "ServiceOrder_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/ServiceOrder/{id}": {
      "get": {
        "tags": [
          "ServiceOrder"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "ServiceOrder_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceOrder"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ServiceOrder"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "ServiceOrder_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/ServiceOrder": {
      "get": {
        "tags": [
          "ServiceOrder"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "ServiceOrder_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceOrder"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceOrder"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ServiceOrder"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "ServiceOrder_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceOrder"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceOrder"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceOrder"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceOrder"
                }
              }
            }
          }
        }
      }
    },
    "/InventoryAdjustment/ReleaseAdjustment": {
      "post": {
        "tags": [
          "InventoryAdjustment"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "InventoryAdjustment_InvokeAction_ReleaseAdjustment",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseAdjustment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseAdjustment"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryAdjustment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryAdjustment"
                }
              }
            }
          }
        }
      }
    },
    "/InventoryAdjustment/{actionName}": {
      "post": {
        "tags": [
          "InventoryAdjustment"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "InventoryAdjustment_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryAdjustmentCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryAdjustmentCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryAdjustment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryAdjustment"
                }
              }
            }
          }
        }
      }
    },
    "/InventoryAdjustment/$adHocSchema": {
      "get": {
        "tags": [
          "InventoryAdjustment"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "InventoryAdjustment_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryAdjustment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryAdjustment"
                }
              }
            }
          }
        }
      }
    },
    "/InventoryAdjustment/{ids}": {
      "get": {
        "tags": [
          "InventoryAdjustment"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "InventoryAdjustment_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryAdjustment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryAdjustment"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "InventoryAdjustment"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "InventoryAdjustment_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/InventoryAdjustment/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "InventoryAdjustment"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "InventoryAdjustment_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/InventoryAdjustment/{id}": {
      "get": {
        "tags": [
          "InventoryAdjustment"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "InventoryAdjustment_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryAdjustment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryAdjustment"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "InventoryAdjustment"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "InventoryAdjustment_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/InventoryAdjustment": {
      "get": {
        "tags": [
          "InventoryAdjustment"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "InventoryAdjustment_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InventoryAdjustment"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InventoryAdjustment"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "InventoryAdjustment"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "InventoryAdjustment_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryAdjustment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryAdjustment"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryAdjustment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryAdjustment"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryAdjustment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryAdjustment"
                }
              }
            }
          }
        }
      }
    },
    "/CashSale/ReleaseCashSale": {
      "post": {
        "tags": [
          "CashSale"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "CashSale_InvokeAction_ReleaseCashSale",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseCashSale"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseCashSale"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CashSale"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CashSale"
                }
              }
            }
          }
        }
      }
    },
    "/CashSale/{actionName}": {
      "post": {
        "tags": [
          "CashSale"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "CashSale_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CashSaleCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CashSaleCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CashSale"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CashSale"
                }
              }
            }
          }
        }
      }
    },
    "/CashSale/$adHocSchema": {
      "get": {
        "tags": [
          "CashSale"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "CashSale_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CashSale"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CashSale"
                }
              }
            }
          }
        }
      }
    },
    "/CashSale/{ids}": {
      "get": {
        "tags": [
          "CashSale"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "CashSale_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CashSale"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CashSale"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CashSale"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "CashSale_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/CashSale/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "CashSale"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "CashSale_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/CashSale/{id}": {
      "get": {
        "tags": [
          "CashSale"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "CashSale_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CashSale"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CashSale"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CashSale"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "CashSale_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/CashSale": {
      "get": {
        "tags": [
          "CashSale"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "CashSale_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CashSale"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CashSale"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CashSale"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "CashSale_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CashSale"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CashSale"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CashSale"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CashSale"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CashSale"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CashSale"
                }
              }
            }
          }
        }
      }
    },
    "/SalesPricesInquiry/{actionName}": {
      "post": {
        "tags": [
          "SalesPricesInquiry"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "SalesPricesInquiry_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesPricesInquiryCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesPricesInquiryCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesPricesInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesPricesInquiry"
                }
              }
            }
          }
        }
      }
    },
    "/SalesPricesInquiry/$adHocSchema": {
      "get": {
        "tags": [
          "SalesPricesInquiry"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "SalesPricesInquiry_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesPricesInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesPricesInquiry"
                }
              }
            }
          }
        }
      }
    },
    "/SalesPricesInquiry/{ids}": {
      "get": {
        "tags": [
          "SalesPricesInquiry"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "SalesPricesInquiry_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesPricesInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesPricesInquiry"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SalesPricesInquiry"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "SalesPricesInquiry_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/SalesPricesInquiry/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "SalesPricesInquiry"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "SalesPricesInquiry_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/SalesPricesInquiry/{id}": {
      "get": {
        "tags": [
          "SalesPricesInquiry"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "SalesPricesInquiry_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesPricesInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesPricesInquiry"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SalesPricesInquiry"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "SalesPricesInquiry_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/SalesPricesInquiry": {
      "get": {
        "tags": [
          "SalesPricesInquiry"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "SalesPricesInquiry_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesPricesInquiry"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesPricesInquiry"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SalesPricesInquiry"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "SalesPricesInquiry_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesPricesInquiry"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesPricesInquiry"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesPricesInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesPricesInquiry"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesPricesInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesPricesInquiry"
                }
              }
            }
          }
        }
      }
    },
    "/TaxZone/{actionName}": {
      "post": {
        "tags": [
          "TaxZone"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "TaxZone_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxZoneCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxZoneCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxZone"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxZone"
                }
              }
            }
          }
        }
      }
    },
    "/TaxZone/$adHocSchema": {
      "get": {
        "tags": [
          "TaxZone"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "TaxZone_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxZone"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxZone"
                }
              }
            }
          }
        }
      }
    },
    "/TaxZone/{ids}": {
      "get": {
        "tags": [
          "TaxZone"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "TaxZone_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxZone"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxZone"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TaxZone"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "TaxZone_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/TaxZone/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "TaxZone"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "TaxZone_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/TaxZone/{id}": {
      "get": {
        "tags": [
          "TaxZone"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "TaxZone_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxZone"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxZone"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TaxZone"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "TaxZone_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/TaxZone": {
      "get": {
        "tags": [
          "TaxZone"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "TaxZone_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaxZone"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaxZone"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "TaxZone"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "TaxZone_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxZone"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxZone"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxZone"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxZone"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxZone"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxZone"
                }
              }
            }
          }
        }
      }
    },
    "/CompanyFinancialPeriod/{actionName}": {
      "post": {
        "tags": [
          "CompanyFinancialPeriod"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "CompanyFinancialPeriod_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyFinancialPeriodCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyFinancialPeriodCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyFinancialPeriod"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyFinancialPeriod"
                }
              }
            }
          }
        }
      }
    },
    "/CompanyFinancialPeriod/$adHocSchema": {
      "get": {
        "tags": [
          "CompanyFinancialPeriod"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "CompanyFinancialPeriod_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyFinancialPeriod"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyFinancialPeriod"
                }
              }
            }
          }
        }
      }
    },
    "/CompanyFinancialPeriod/{ids}": {
      "get": {
        "tags": [
          "CompanyFinancialPeriod"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "CompanyFinancialPeriod_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyFinancialPeriod"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyFinancialPeriod"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CompanyFinancialPeriod"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "CompanyFinancialPeriod_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/CompanyFinancialPeriod/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "CompanyFinancialPeriod"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "CompanyFinancialPeriod_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/CompanyFinancialPeriod/{id}": {
      "get": {
        "tags": [
          "CompanyFinancialPeriod"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "CompanyFinancialPeriod_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyFinancialPeriod"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyFinancialPeriod"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CompanyFinancialPeriod"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "CompanyFinancialPeriod_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/CompanyFinancialPeriod": {
      "get": {
        "tags": [
          "CompanyFinancialPeriod"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "CompanyFinancialPeriod_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyFinancialPeriod"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyFinancialPeriod"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CompanyFinancialPeriod"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "CompanyFinancialPeriod_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyFinancialPeriod"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyFinancialPeriod"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyFinancialPeriod"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyFinancialPeriod"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyFinancialPeriod"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyFinancialPeriod"
                }
              }
            }
          }
        }
      }
    },
    "/PaymentMethod/{actionName}": {
      "post": {
        "tags": [
          "PaymentMethod"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "PaymentMethod_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethodCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethodCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              }
            }
          }
        }
      }
    },
    "/PaymentMethod/$adHocSchema": {
      "get": {
        "tags": [
          "PaymentMethod"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "PaymentMethod_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              }
            }
          }
        }
      }
    },
    "/PaymentMethod/{ids}": {
      "get": {
        "tags": [
          "PaymentMethod"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "PaymentMethod_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PaymentMethod"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "PaymentMethod_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/PaymentMethod/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "PaymentMethod"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "PaymentMethod_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/PaymentMethod/{id}": {
      "get": {
        "tags": [
          "PaymentMethod"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "PaymentMethod_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PaymentMethod"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "PaymentMethod_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/PaymentMethod": {
      "get": {
        "tags": [
          "PaymentMethod"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "PaymentMethod_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentMethod"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentMethod"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PaymentMethod"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "PaymentMethod_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethod"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethod"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              }
            }
          }
        }
      }
    },
    "/Discount/UpdateDiscounts": {
      "post": {
        "tags": [
          "Discount"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Discount_InvokeAction_UpdateDiscounts",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDiscounts"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDiscounts"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Discount"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Discount"
                }
              }
            }
          }
        }
      }
    },
    "/Discount/{actionName}": {
      "post": {
        "tags": [
          "Discount"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Discount_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscountCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscountCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Discount"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Discount"
                }
              }
            }
          }
        }
      }
    },
    "/Discount/$adHocSchema": {
      "get": {
        "tags": [
          "Discount"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "Discount_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Discount"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Discount"
                }
              }
            }
          }
        }
      }
    },
    "/Discount/{ids}": {
      "get": {
        "tags": [
          "Discount"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "Discount_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Discount"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Discount"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Discount"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "Discount_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/Discount/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Discount"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "Discount_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/Discount/{id}": {
      "get": {
        "tags": [
          "Discount"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "Discount_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Discount"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Discount"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Discount"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "Discount_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/Discount": {
      "get": {
        "tags": [
          "Discount"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "Discount_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Discount"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Discount"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Discount"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "Discount_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Discount"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Discount"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Discount"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Discount"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Discount"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Discount"
                }
              }
            }
          }
        }
      }
    },
    "/VendorPricesInquiry/{actionName}": {
      "post": {
        "tags": [
          "VendorPricesInquiry"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "VendorPricesInquiry_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VendorPricesInquiryCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VendorPricesInquiryCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorPricesInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorPricesInquiry"
                }
              }
            }
          }
        }
      }
    },
    "/VendorPricesInquiry/$adHocSchema": {
      "get": {
        "tags": [
          "VendorPricesInquiry"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "VendorPricesInquiry_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorPricesInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorPricesInquiry"
                }
              }
            }
          }
        }
      }
    },
    "/VendorPricesInquiry/{ids}": {
      "get": {
        "tags": [
          "VendorPricesInquiry"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "VendorPricesInquiry_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorPricesInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorPricesInquiry"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "VendorPricesInquiry"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "VendorPricesInquiry_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/VendorPricesInquiry/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "VendorPricesInquiry"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "VendorPricesInquiry_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/VendorPricesInquiry/{id}": {
      "get": {
        "tags": [
          "VendorPricesInquiry"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "VendorPricesInquiry_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorPricesInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorPricesInquiry"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "VendorPricesInquiry"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "VendorPricesInquiry_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/VendorPricesInquiry": {
      "get": {
        "tags": [
          "VendorPricesInquiry"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "VendorPricesInquiry_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VendorPricesInquiry"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VendorPricesInquiry"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "VendorPricesInquiry"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "VendorPricesInquiry_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VendorPricesInquiry"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VendorPricesInquiry"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorPricesInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorPricesInquiry"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorPricesInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorPricesInquiry"
                }
              }
            }
          }
        }
      }
    },
    "/EarningTypeCode/{actionName}": {
      "post": {
        "tags": [
          "EarningTypeCode"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "EarningTypeCode_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EarningTypeCodeCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EarningTypeCodeCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EarningTypeCode"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EarningTypeCode"
                }
              }
            }
          }
        }
      }
    },
    "/EarningTypeCode/$adHocSchema": {
      "get": {
        "tags": [
          "EarningTypeCode"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "EarningTypeCode_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EarningTypeCode"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EarningTypeCode"
                }
              }
            }
          }
        }
      }
    },
    "/EarningTypeCode/{ids}": {
      "get": {
        "tags": [
          "EarningTypeCode"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "EarningTypeCode_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EarningTypeCode"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EarningTypeCode"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EarningTypeCode"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "EarningTypeCode_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/EarningTypeCode/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "EarningTypeCode"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "EarningTypeCode_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/EarningTypeCode/{id}": {
      "get": {
        "tags": [
          "EarningTypeCode"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "EarningTypeCode_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EarningTypeCode"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EarningTypeCode"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EarningTypeCode"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "EarningTypeCode_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/EarningTypeCode": {
      "get": {
        "tags": [
          "EarningTypeCode"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "EarningTypeCode_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EarningTypeCode"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EarningTypeCode"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "EarningTypeCode"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "EarningTypeCode_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EarningTypeCode"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EarningTypeCode"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EarningTypeCode"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EarningTypeCode"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EarningTypeCode"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EarningTypeCode"
                }
              }
            }
          }
        }
      }
    },
    "/Contact/CheckForContactDuplicates": {
      "post": {
        "tags": [
          "Contact"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Contact_InvokeAction_CheckForContactDuplicates",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckForContactDuplicates"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckForContactDuplicates"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          }
        }
      }
    },
    "/Contact/MarkContactAsValidated": {
      "post": {
        "tags": [
          "Contact"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Contact_InvokeAction_MarkContactAsValidated",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkContactAsValidated"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkContactAsValidated"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          }
        }
      }
    },
    "/Contact/ValidateContactAddress": {
      "post": {
        "tags": [
          "Contact"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Contact_InvokeAction_ValidateContactAddress",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateContactAddress"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateContactAddress"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          }
        }
      }
    },
    "/Contact/CreateAccountFromContact": {
      "post": {
        "tags": [
          "Contact"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Contact_InvokeAction_CreateAccountFromContact",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAccountFromContact"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAccountFromContact"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          }
        }
      }
    },
    "/Contact/{actionName}": {
      "post": {
        "tags": [
          "Contact"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Contact_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          }
        }
      }
    },
    "/Contact/$adHocSchema": {
      "get": {
        "tags": [
          "Contact"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "Contact_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          }
        }
      }
    },
    "/Contact/{ids}": {
      "get": {
        "tags": [
          "Contact"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "Contact_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Contact"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "Contact_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/Contact/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Contact"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "Contact_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/Contact/{id}": {
      "get": {
        "tags": [
          "Contact"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "Contact_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Contact"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "Contact_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/Contact": {
      "get": {
        "tags": [
          "Contact"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "Contact_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Contact"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Contact"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Contact"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "Contact_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Contact"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Contact"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          }
        }
      }
    },
    "/Carrier/{actionName}": {
      "post": {
        "tags": [
          "Carrier"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Carrier_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CarrierCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CarrierCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Carrier"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Carrier"
                }
              }
            }
          }
        }
      }
    },
    "/Carrier/$adHocSchema": {
      "get": {
        "tags": [
          "Carrier"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "Carrier_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Carrier"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Carrier"
                }
              }
            }
          }
        }
      }
    },
    "/Carrier/{ids}": {
      "get": {
        "tags": [
          "Carrier"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "Carrier_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Carrier"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Carrier"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Carrier"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "Carrier_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/Carrier/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Carrier"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "Carrier_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/Carrier/{id}": {
      "get": {
        "tags": [
          "Carrier"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "Carrier_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Carrier"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Carrier"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Carrier"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "Carrier_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/Carrier": {
      "get": {
        "tags": [
          "Carrier"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "Carrier_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Carrier"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Carrier"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Carrier"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "Carrier_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Carrier"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Carrier"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Carrier"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Carrier"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Carrier"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Carrier"
                }
              }
            }
          }
        }
      }
    },
    "/Warehouse/{actionName}": {
      "post": {
        "tags": [
          "Warehouse"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Warehouse_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WarehouseCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WarehouseCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Warehouse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Warehouse"
                }
              }
            }
          }
        }
      }
    },
    "/Warehouse/$adHocSchema": {
      "get": {
        "tags": [
          "Warehouse"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "Warehouse_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Warehouse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Warehouse"
                }
              }
            }
          }
        }
      }
    },
    "/Warehouse/{ids}": {
      "get": {
        "tags": [
          "Warehouse"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "Warehouse_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Warehouse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Warehouse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Warehouse"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "Warehouse_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/Warehouse/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Warehouse"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "Warehouse_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/Warehouse/{id}": {
      "get": {
        "tags": [
          "Warehouse"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "Warehouse_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Warehouse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Warehouse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Warehouse"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "Warehouse_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/Warehouse": {
      "get": {
        "tags": [
          "Warehouse"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "Warehouse_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Warehouse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Warehouse"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Warehouse"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "Warehouse_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Warehouse"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Warehouse"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Warehouse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Warehouse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Warehouse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Warehouse"
                }
              }
            }
          }
        }
      }
    },
    "/TaxCategory/{actionName}": {
      "post": {
        "tags": [
          "TaxCategory"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "TaxCategory_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxCategoryCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxCategoryCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxCategory"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxCategory"
                }
              }
            }
          }
        }
      }
    },
    "/TaxCategory/$adHocSchema": {
      "get": {
        "tags": [
          "TaxCategory"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "TaxCategory_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxCategory"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxCategory"
                }
              }
            }
          }
        }
      }
    },
    "/TaxCategory/{ids}": {
      "get": {
        "tags": [
          "TaxCategory"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "TaxCategory_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxCategory"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxCategory"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TaxCategory"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "TaxCategory_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/TaxCategory/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "TaxCategory"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "TaxCategory_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/TaxCategory/{id}": {
      "get": {
        "tags": [
          "TaxCategory"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "TaxCategory_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxCategory"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxCategory"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TaxCategory"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "TaxCategory_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/TaxCategory": {
      "get": {
        "tags": [
          "TaxCategory"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "TaxCategory_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaxCategory"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaxCategory"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "TaxCategory"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "TaxCategory_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxCategory"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxCategory"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxCategory"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxCategory"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxCategory"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxCategory"
                }
              }
            }
          }
        }
      }
    },
    "/InventoryQuantityAvailable/{actionName}": {
      "post": {
        "tags": [
          "InventoryQuantityAvailable"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "InventoryQuantityAvailable_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryQuantityAvailableCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryQuantityAvailableCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryQuantityAvailable"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryQuantityAvailable"
                }
              }
            }
          }
        }
      }
    },
    "/InventoryQuantityAvailable/$adHocSchema": {
      "get": {
        "tags": [
          "InventoryQuantityAvailable"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "InventoryQuantityAvailable_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryQuantityAvailable"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryQuantityAvailable"
                }
              }
            }
          }
        }
      }
    },
    "/InventoryQuantityAvailable/{ids}": {
      "get": {
        "tags": [
          "InventoryQuantityAvailable"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "InventoryQuantityAvailable_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryQuantityAvailable"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryQuantityAvailable"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "InventoryQuantityAvailable"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "InventoryQuantityAvailable_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/InventoryQuantityAvailable/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "InventoryQuantityAvailable"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "InventoryQuantityAvailable_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/InventoryQuantityAvailable/{id}": {
      "get": {
        "tags": [
          "InventoryQuantityAvailable"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "InventoryQuantityAvailable_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryQuantityAvailable"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryQuantityAvailable"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "InventoryQuantityAvailable"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "InventoryQuantityAvailable_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/InventoryQuantityAvailable": {
      "get": {
        "tags": [
          "InventoryQuantityAvailable"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "InventoryQuantityAvailable_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InventoryQuantityAvailable"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InventoryQuantityAvailable"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "InventoryQuantityAvailable"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "InventoryQuantityAvailable_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryQuantityAvailable"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryQuantityAvailable"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryQuantityAvailable"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryQuantityAvailable"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryQuantityAvailable"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryQuantityAvailable"
                }
              }
            }
          }
        }
      }
    },
    "/ProjectTemplateTask/{actionName}": {
      "post": {
        "tags": [
          "ProjectTemplateTask"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ProjectTemplateTask_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectTemplateTaskCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectTemplateTaskCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplateTask"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplateTask"
                }
              }
            }
          }
        }
      }
    },
    "/ProjectTemplateTask/$adHocSchema": {
      "get": {
        "tags": [
          "ProjectTemplateTask"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "ProjectTemplateTask_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplateTask"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplateTask"
                }
              }
            }
          }
        }
      }
    },
    "/ProjectTemplateTask/{ids}": {
      "get": {
        "tags": [
          "ProjectTemplateTask"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "ProjectTemplateTask_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplateTask"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplateTask"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProjectTemplateTask"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "ProjectTemplateTask_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/ProjectTemplateTask/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "ProjectTemplateTask"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "ProjectTemplateTask_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/ProjectTemplateTask/{id}": {
      "get": {
        "tags": [
          "ProjectTemplateTask"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "ProjectTemplateTask_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplateTask"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplateTask"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProjectTemplateTask"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "ProjectTemplateTask_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/ProjectTemplateTask": {
      "get": {
        "tags": [
          "ProjectTemplateTask"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "ProjectTemplateTask_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectTemplateTask"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectTemplateTask"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProjectTemplateTask"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "ProjectTemplateTask_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectTemplateTask"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectTemplateTask"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplateTask"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplateTask"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplateTask"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplateTask"
                }
              }
            }
          }
        }
      }
    },
    "/Budget/{actionName}": {
      "post": {
        "tags": [
          "Budget"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Budget_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BudgetCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BudgetCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Budget"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Budget"
                }
              }
            }
          }
        }
      }
    },
    "/Budget/$adHocSchema": {
      "get": {
        "tags": [
          "Budget"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "Budget_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Budget"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Budget"
                }
              }
            }
          }
        }
      }
    },
    "/Budget/{ids}": {
      "get": {
        "tags": [
          "Budget"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "Budget_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Budget"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Budget"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Budget"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "Budget_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/Budget/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Budget"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "Budget_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/Budget/{id}": {
      "get": {
        "tags": [
          "Budget"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "Budget_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Budget"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Budget"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Budget"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "Budget_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/Budget": {
      "get": {
        "tags": [
          "Budget"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "Budget_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Budget"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Budget"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Budget"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "Budget_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Budget"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Budget"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Budget"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Budget"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Budget"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Budget"
                }
              }
            }
          }
        }
      }
    },
    "/Project/RunProjectAllocation": {
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Project_InvokeAction_RunProjectAllocation",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RunProjectAllocation"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RunProjectAllocation"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          }
        }
      }
    },
    "/Project/ValidateProjectBalance": {
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Project_InvokeAction_ValidateProjectBalance",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateProjectBalance"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateProjectBalance"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          }
        }
      }
    },
    "/Project/RunProjectBilling": {
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Project_InvokeAction_RunProjectBilling",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RunProjectBilling"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RunProjectBilling"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          }
        }
      }
    },
    "/Project/ApproveProject": {
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Project_InvokeAction_ApproveProject",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApproveProject"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApproveProject"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          }
        }
      }
    },
    "/Project/RejectProject": {
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Project_InvokeAction_RejectProject",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RejectProject"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RejectProject"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          }
        }
      }
    },
    "/Project/LockProjectBudget": {
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Project_InvokeAction_LockProjectBudget",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LockProjectBudget"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LockProjectBudget"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          }
        }
      }
    },
    "/Project/UnlockProjectBudget": {
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Project_InvokeAction_UnlockProjectBudget",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnlockProjectBudget"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UnlockProjectBudget"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          }
        }
      }
    },
    "/Project/LockProjectCommitments": {
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Project_InvokeAction_LockProjectCommitments",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LockProjectCommitments"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LockProjectCommitments"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          }
        }
      }
    },
    "/Project/UnlockProjectCommitments": {
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Project_InvokeAction_UnlockProjectCommitments",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnlockProjectCommitments"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UnlockProjectCommitments"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          }
        }
      }
    },
    "/Project/ChangeProjectID": {
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Project_InvokeAction_ChangeProjectID",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeProjectID"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeProjectID"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          }
        }
      }
    },
    "/Project/ActivateProject": {
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Project_InvokeAction_ActivateProject",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivateProject"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivateProject"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          }
        }
      }
    },
    "/Project/HoldProject": {
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Project_InvokeAction_HoldProject",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HoldProject"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HoldProject"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          }
        }
      }
    },
    "/Project/CompleteProject": {
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Project_InvokeAction_CompleteProject",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompleteProject"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CompleteProject"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          }
        }
      }
    },
    "/Project/SuspendProject": {
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Project_InvokeAction_SuspendProject",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SuspendProject"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SuspendProject"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          }
        }
      }
    },
    "/Project/CancelProject": {
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Project_InvokeAction_CancelProject",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelProject"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelProject"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          }
        }
      }
    },
    "/Project/{actionName}": {
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Project_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          }
        }
      }
    },
    "/Project/$adHocSchema": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "Project_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          }
        }
      }
    },
    "/Project/{ids}": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "Project_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Project"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "Project_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/Project/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Project"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "Project_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/Project/{id}": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "Project_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Project"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "Project_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/Project": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "Project_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Project"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Project"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Project"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "Project_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Project"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Project"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          }
        }
      }
    },
    "/Appointment/CancelAppointment": {
      "post": {
        "tags": [
          "Appointment"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Appointment_InvokeAction_CancelAppointment",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelAppointment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelAppointment"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              }
            }
          }
        }
      }
    },
    "/Appointment/CloseAppointment": {
      "post": {
        "tags": [
          "Appointment"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Appointment_InvokeAction_CloseAppointment",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CloseAppointment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CloseAppointment"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              }
            }
          }
        }
      }
    },
    "/Appointment/CompleteAppointment": {
      "post": {
        "tags": [
          "Appointment"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Appointment_InvokeAction_CompleteAppointment",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompleteAppointment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CompleteAppointment"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              }
            }
          }
        }
      }
    },
    "/Appointment/InvoiceAppointment": {
      "post": {
        "tags": [
          "Appointment"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Appointment_InvokeAction_InvoiceAppointment",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceAppointment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceAppointment"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              }
            }
          }
        }
      }
    },
    "/Appointment/AppRecalcExternalTax": {
      "post": {
        "tags": [
          "Appointment"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Appointment_InvokeAction_AppRecalcExternalTax",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppRecalcExternalTax"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AppRecalcExternalTax"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              }
            }
          }
        }
      }
    },
    "/Appointment/PauseAppointment": {
      "post": {
        "tags": [
          "Appointment"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Appointment_InvokeAction_PauseAppointment",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PauseAppointment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PauseAppointment"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              }
            }
          }
        }
      }
    },
    "/Appointment/ReopenAppointment": {
      "post": {
        "tags": [
          "Appointment"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Appointment_InvokeAction_ReopenAppointment",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReopenAppointment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReopenAppointment"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              }
            }
          }
        }
      }
    },
    "/Appointment/StartAppointment": {
      "post": {
        "tags": [
          "Appointment"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Appointment_InvokeAction_StartAppointment",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartAppointment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StartAppointment"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              }
            }
          }
        }
      }
    },
    "/Appointment/ResumeAppointment": {
      "post": {
        "tags": [
          "Appointment"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Appointment_InvokeAction_ResumeAppointment",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResumeAppointment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResumeAppointment"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              }
            }
          }
        }
      }
    },
    "/Appointment/UncloseAppointment": {
      "post": {
        "tags": [
          "Appointment"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Appointment_InvokeAction_UncloseAppointment",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UncloseAppointment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UncloseAppointment"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              }
            }
          }
        }
      }
    },
    "/Appointment/{actionName}": {
      "post": {
        "tags": [
          "Appointment"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Appointment_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppointmentCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AppointmentCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              }
            }
          }
        }
      }
    },
    "/Appointment/$adHocSchema": {
      "get": {
        "tags": [
          "Appointment"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "Appointment_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              }
            }
          }
        }
      }
    },
    "/Appointment/{ids}": {
      "get": {
        "tags": [
          "Appointment"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "Appointment_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Appointment"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "Appointment_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/Appointment/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Appointment"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "Appointment_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/Appointment/{id}": {
      "get": {
        "tags": [
          "Appointment"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "Appointment_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Appointment"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "Appointment_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/Appointment": {
      "get": {
        "tags": [
          "Appointment"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "Appointment_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Appointment"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Appointment"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Appointment"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "Appointment_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Appointment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Appointment"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              }
            }
          }
        }
      }
    },
    "/LaborCostRate/{actionName}": {
      "post": {
        "tags": [
          "LaborCostRate"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "LaborCostRate_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LaborCostRateCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LaborCostRateCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaborCostRate"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaborCostRate"
                }
              }
            }
          }
        }
      }
    },
    "/LaborCostRate/$adHocSchema": {
      "get": {
        "tags": [
          "LaborCostRate"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "LaborCostRate_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaborCostRate"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaborCostRate"
                }
              }
            }
          }
        }
      }
    },
    "/LaborCostRate/{ids}": {
      "get": {
        "tags": [
          "LaborCostRate"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "LaborCostRate_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaborCostRate"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaborCostRate"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "LaborCostRate"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "LaborCostRate_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/LaborCostRate/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "LaborCostRate"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "LaborCostRate_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/LaborCostRate/{id}": {
      "get": {
        "tags": [
          "LaborCostRate"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "LaborCostRate_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaborCostRate"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaborCostRate"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "LaborCostRate"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "LaborCostRate_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/LaborCostRate": {
      "get": {
        "tags": [
          "LaborCostRate"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "LaborCostRate_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LaborCostRate"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LaborCostRate"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "LaborCostRate"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "LaborCostRate_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LaborCostRate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LaborCostRate"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaborCostRate"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaborCostRate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaborCostRate"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LaborCostRate"
                }
              }
            }
          }
        }
      }
    },
    "/EmployeePayrollClass/{actionName}": {
      "post": {
        "tags": [
          "EmployeePayrollClass"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "EmployeePayrollClass_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeePayrollClassCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeePayrollClassCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeePayrollClass"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeePayrollClass"
                }
              }
            }
          }
        }
      }
    },
    "/EmployeePayrollClass/$adHocSchema": {
      "get": {
        "tags": [
          "EmployeePayrollClass"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "EmployeePayrollClass_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeePayrollClass"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeePayrollClass"
                }
              }
            }
          }
        }
      }
    },
    "/EmployeePayrollClass/{ids}": {
      "get": {
        "tags": [
          "EmployeePayrollClass"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "EmployeePayrollClass_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeePayrollClass"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeePayrollClass"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EmployeePayrollClass"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "EmployeePayrollClass_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/EmployeePayrollClass/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "EmployeePayrollClass"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "EmployeePayrollClass_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/EmployeePayrollClass/{id}": {
      "get": {
        "tags": [
          "EmployeePayrollClass"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "EmployeePayrollClass_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeePayrollClass"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeePayrollClass"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EmployeePayrollClass"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "EmployeePayrollClass_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/EmployeePayrollClass": {
      "get": {
        "tags": [
          "EmployeePayrollClass"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "EmployeePayrollClass_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeePayrollClass"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeePayrollClass"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "EmployeePayrollClass"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "EmployeePayrollClass_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeePayrollClass"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeePayrollClass"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeePayrollClass"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeePayrollClass"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeePayrollClass"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeePayrollClass"
                }
              }
            }
          }
        }
      }
    },
    "/CashTransaction/ReleaseCashTransaction": {
      "post": {
        "tags": [
          "CashTransaction"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "CashTransaction_InvokeAction_ReleaseCashTransaction",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseCashTransaction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseCashTransaction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CashTransaction"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CashTransaction"
                }
              }
            }
          }
        }
      }
    },
    "/CashTransaction/{actionName}": {
      "post": {
        "tags": [
          "CashTransaction"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "CashTransaction_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CashTransactionCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CashTransactionCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CashTransaction"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CashTransaction"
                }
              }
            }
          }
        }
      }
    },
    "/CashTransaction/$adHocSchema": {
      "get": {
        "tags": [
          "CashTransaction"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "CashTransaction_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CashTransaction"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CashTransaction"
                }
              }
            }
          }
        }
      }
    },
    "/CashTransaction/{ids}": {
      "get": {
        "tags": [
          "CashTransaction"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "CashTransaction_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CashTransaction"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CashTransaction"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CashTransaction"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "CashTransaction_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/CashTransaction/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "CashTransaction"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "CashTransaction_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/CashTransaction/{id}": {
      "get": {
        "tags": [
          "CashTransaction"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "CashTransaction_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CashTransaction"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CashTransaction"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CashTransaction"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "CashTransaction_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/CashTransaction": {
      "get": {
        "tags": [
          "CashTransaction"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "CashTransaction_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CashTransaction"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CashTransaction"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CashTransaction"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "CashTransaction_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CashTransaction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CashTransaction"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CashTransaction"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CashTransaction"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CashTransaction"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CashTransaction"
                }
              }
            }
          }
        }
      }
    },
    "/Opportunity/CreateContactFromOpportunity": {
      "post": {
        "tags": [
          "Opportunity"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Opportunity_InvokeAction_CreateContactFromOpportunity",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContactFromOpportunity"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContactFromOpportunity"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Opportunity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Opportunity"
                }
              }
            }
          }
        }
      }
    },
    "/Opportunity/CreateOpportunityInvoice": {
      "post": {
        "tags": [
          "Opportunity"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Opportunity_InvokeAction_CreateOpportunityInvoice",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOpportunityInvoice"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOpportunityInvoice"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Opportunity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Opportunity"
                }
              }
            }
          }
        }
      }
    },
    "/Opportunity/CreateOpportunitySalesOrder": {
      "post": {
        "tags": [
          "Opportunity"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Opportunity_InvokeAction_CreateOpportunitySalesOrder",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOpportunitySalesOrder"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOpportunitySalesOrder"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Opportunity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Opportunity"
                }
              }
            }
          }
        }
      }
    },
    "/Opportunity/CreateAccountFromOpportunity": {
      "post": {
        "tags": [
          "Opportunity"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Opportunity_InvokeAction_CreateAccountFromOpportunity",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAccountFromOpportunity"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAccountFromOpportunity"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Opportunity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Opportunity"
                }
              }
            }
          }
        }
      }
    },
    "/Opportunity/{actionName}": {
      "post": {
        "tags": [
          "Opportunity"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Opportunity_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OpportunityCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OpportunityCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Opportunity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Opportunity"
                }
              }
            }
          }
        }
      }
    },
    "/Opportunity/$adHocSchema": {
      "get": {
        "tags": [
          "Opportunity"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "Opportunity_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Opportunity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Opportunity"
                }
              }
            }
          }
        }
      }
    },
    "/Opportunity/{ids}": {
      "get": {
        "tags": [
          "Opportunity"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "Opportunity_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Opportunity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Opportunity"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Opportunity"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "Opportunity_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/Opportunity/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Opportunity"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "Opportunity_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/Opportunity/{id}": {
      "get": {
        "tags": [
          "Opportunity"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "Opportunity_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Opportunity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Opportunity"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Opportunity"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "Opportunity_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/Opportunity": {
      "get": {
        "tags": [
          "Opportunity"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "Opportunity_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Opportunity"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Opportunity"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Opportunity"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "Opportunity_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Opportunity"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Opportunity"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Opportunity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Opportunity"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Opportunity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Opportunity"
                }
              }
            }
          }
        }
      }
    },
    "/Account/{actionName}": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Account_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          }
        }
      }
    },
    "/Account/$adHocSchema": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "Account_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          }
        }
      }
    },
    "/Account/{ids}": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "Account_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Account"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "Account_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/Account/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Account"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "Account_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/Account/{id}": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "Account_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Account"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "Account_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/Account": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "Account_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Account"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Account"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Account"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "Account_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Account"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Account"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          }
        }
      }
    },
    "/PayrollWCCCode/{actionName}": {
      "post": {
        "tags": [
          "PayrollWCCCode"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "PayrollWCCCode_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayrollWCCCodeCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PayrollWCCCodeCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayrollWCCCode"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayrollWCCCode"
                }
              }
            }
          }
        }
      }
    },
    "/PayrollWCCCode/$adHocSchema": {
      "get": {
        "tags": [
          "PayrollWCCCode"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "PayrollWCCCode_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayrollWCCCode"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayrollWCCCode"
                }
              }
            }
          }
        }
      }
    },
    "/PayrollWCCCode/{ids}": {
      "get": {
        "tags": [
          "PayrollWCCCode"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "PayrollWCCCode_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayrollWCCCode"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayrollWCCCode"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PayrollWCCCode"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "PayrollWCCCode_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/PayrollWCCCode/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "PayrollWCCCode"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "PayrollWCCCode_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/PayrollWCCCode/{id}": {
      "get": {
        "tags": [
          "PayrollWCCCode"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "PayrollWCCCode_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayrollWCCCode"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayrollWCCCode"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PayrollWCCCode"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "PayrollWCCCode_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/PayrollWCCCode": {
      "get": {
        "tags": [
          "PayrollWCCCode"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "PayrollWCCCode_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PayrollWCCCode"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PayrollWCCCode"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PayrollWCCCode"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "PayrollWCCCode_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayrollWCCCode"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PayrollWCCCode"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayrollWCCCode"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayrollWCCCode"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayrollWCCCode"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayrollWCCCode"
                }
              }
            }
          }
        }
      }
    },
    "/ProjectTemplate/ActivateProjectTemplate": {
      "post": {
        "tags": [
          "ProjectTemplate"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ProjectTemplate_InvokeAction_ActivateProjectTemplate",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivateProjectTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivateProjectTemplate"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplate"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplate"
                }
              }
            }
          }
        }
      }
    },
    "/ProjectTemplate/HoldProjectTemplate": {
      "post": {
        "tags": [
          "ProjectTemplate"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ProjectTemplate_InvokeAction_HoldProjectTemplate",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HoldProjectTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HoldProjectTemplate"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplate"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplate"
                }
              }
            }
          }
        }
      }
    },
    "/ProjectTemplate/{actionName}": {
      "post": {
        "tags": [
          "ProjectTemplate"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ProjectTemplate_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectTemplateCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectTemplateCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplate"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplate"
                }
              }
            }
          }
        }
      }
    },
    "/ProjectTemplate/$adHocSchema": {
      "get": {
        "tags": [
          "ProjectTemplate"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "ProjectTemplate_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplate"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplate"
                }
              }
            }
          }
        }
      }
    },
    "/ProjectTemplate/{ids}": {
      "get": {
        "tags": [
          "ProjectTemplate"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "ProjectTemplate_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplate"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplate"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProjectTemplate"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "ProjectTemplate_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/ProjectTemplate/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "ProjectTemplate"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "ProjectTemplate_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/ProjectTemplate/{id}": {
      "get": {
        "tags": [
          "ProjectTemplate"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "ProjectTemplate_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplate"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplate"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProjectTemplate"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "ProjectTemplate_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/ProjectTemplate": {
      "get": {
        "tags": [
          "ProjectTemplate"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "ProjectTemplate_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectTemplate"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectTemplate"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProjectTemplate"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "ProjectTemplate_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectTemplate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectTemplate"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplate"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplate"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplate"
                }
              }
            }
          }
        }
      }
    },
    "/ShippingZones/{actionName}": {
      "post": {
        "tags": [
          "ShippingZones"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ShippingZones_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShippingZonesCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ShippingZonesCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShippingZones"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShippingZones"
                }
              }
            }
          }
        }
      }
    },
    "/ShippingZones/$adHocSchema": {
      "get": {
        "tags": [
          "ShippingZones"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "ShippingZones_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShippingZones"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShippingZones"
                }
              }
            }
          }
        }
      }
    },
    "/ShippingZones/{ids}": {
      "get": {
        "tags": [
          "ShippingZones"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "ShippingZones_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShippingZones"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShippingZones"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ShippingZones"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "ShippingZones_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/ShippingZones/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "ShippingZones"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "ShippingZones_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/ShippingZones/{id}": {
      "get": {
        "tags": [
          "ShippingZones"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "ShippingZones_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShippingZones"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShippingZones"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ShippingZones"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "ShippingZones_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/ShippingZones": {
      "get": {
        "tags": [
          "ShippingZones"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "ShippingZones_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShippingZones"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShippingZones"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ShippingZones"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "ShippingZones_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShippingZones"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ShippingZones"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShippingZones"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShippingZones"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShippingZones"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShippingZones"
                }
              }
            }
          }
        }
      }
    },
    "/FOBPoint/{actionName}": {
      "post": {
        "tags": [
          "FOBPoint"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "FOBPoint_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FOBPointCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FOBPointCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FOBPoint"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FOBPoint"
                }
              }
            }
          }
        }
      }
    },
    "/FOBPoint/$adHocSchema": {
      "get": {
        "tags": [
          "FOBPoint"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "FOBPoint_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FOBPoint"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FOBPoint"
                }
              }
            }
          }
        }
      }
    },
    "/FOBPoint/{ids}": {
      "get": {
        "tags": [
          "FOBPoint"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "FOBPoint_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FOBPoint"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FOBPoint"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "FOBPoint"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "FOBPoint_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/FOBPoint/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "FOBPoint"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "FOBPoint_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/FOBPoint/{id}": {
      "get": {
        "tags": [
          "FOBPoint"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "FOBPoint_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FOBPoint"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FOBPoint"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "FOBPoint"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "FOBPoint_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/FOBPoint": {
      "get": {
        "tags": [
          "FOBPoint"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "FOBPoint_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FOBPoint"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FOBPoint"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "FOBPoint"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "FOBPoint_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FOBPoint"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FOBPoint"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FOBPoint"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FOBPoint"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FOBPoint"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FOBPoint"
                }
              }
            }
          }
        }
      }
    },
    "/ExpenseReceipt/SubmitExpenseReceipt": {
      "post": {
        "tags": [
          "ExpenseReceipt"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ExpenseReceipt_InvokeAction_SubmitExpenseReceipt",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmitExpenseReceipt"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmitExpenseReceipt"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseReceipt"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseReceipt"
                }
              }
            }
          }
        }
      }
    },
    "/ExpenseReceipt/ApproveExpenseReceipt": {
      "post": {
        "tags": [
          "ExpenseReceipt"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ExpenseReceipt_InvokeAction_ApproveExpenseReceipt",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApproveExpenseReceipt"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApproveExpenseReceipt"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseReceipt"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseReceipt"
                }
              }
            }
          }
        }
      }
    },
    "/ExpenseReceipt/RejectExpenseReceipt": {
      "post": {
        "tags": [
          "ExpenseReceipt"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ExpenseReceipt_InvokeAction_RejectExpenseReceipt",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RejectExpenseReceipt"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RejectExpenseReceipt"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseReceipt"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseReceipt"
                }
              }
            }
          }
        }
      }
    },
    "/ExpenseReceipt/PutOnHoldExpenseReceipt": {
      "post": {
        "tags": [
          "ExpenseReceipt"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ExpenseReceipt_InvokeAction_PutOnHoldExpenseReceipt",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutOnHoldExpenseReceipt"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PutOnHoldExpenseReceipt"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseReceipt"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseReceipt"
                }
              }
            }
          }
        }
      }
    },
    "/ExpenseReceipt/ClaimExpenseReceipt": {
      "post": {
        "tags": [
          "ExpenseReceipt"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ExpenseReceipt_InvokeAction_ClaimExpenseReceipt",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClaimExpenseReceipt"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ClaimExpenseReceipt"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseReceipt"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseReceipt"
                }
              }
            }
          }
        }
      }
    },
    "/ExpenseReceipt/{actionName}": {
      "post": {
        "tags": [
          "ExpenseReceipt"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ExpenseReceipt_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseReceiptCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseReceiptCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseReceipt"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseReceipt"
                }
              }
            }
          }
        }
      }
    },
    "/ExpenseReceipt/$adHocSchema": {
      "get": {
        "tags": [
          "ExpenseReceipt"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "ExpenseReceipt_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseReceipt"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseReceipt"
                }
              }
            }
          }
        }
      }
    },
    "/ExpenseReceipt/{ids}": {
      "get": {
        "tags": [
          "ExpenseReceipt"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "ExpenseReceipt_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseReceipt"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseReceipt"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ExpenseReceipt"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "ExpenseReceipt_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/ExpenseReceipt/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "ExpenseReceipt"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "ExpenseReceipt_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/ExpenseReceipt/{id}": {
      "get": {
        "tags": [
          "ExpenseReceipt"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "ExpenseReceipt_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseReceipt"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseReceipt"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ExpenseReceipt"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "ExpenseReceipt_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/ExpenseReceipt": {
      "get": {
        "tags": [
          "ExpenseReceipt"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "ExpenseReceipt_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExpenseReceipt"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExpenseReceipt"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ExpenseReceipt"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "ExpenseReceipt_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseReceipt"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseReceipt"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseReceipt"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseReceipt"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseReceipt"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseReceipt"
                }
              }
            }
          }
        }
      }
    },
    "/CompaniesStructure/{actionName}": {
      "post": {
        "tags": [
          "CompaniesStructure"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "CompaniesStructure_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompaniesStructureCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CompaniesStructureCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompaniesStructure"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompaniesStructure"
                }
              }
            }
          }
        }
      }
    },
    "/CompaniesStructure/$adHocSchema": {
      "get": {
        "tags": [
          "CompaniesStructure"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "CompaniesStructure_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompaniesStructure"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompaniesStructure"
                }
              }
            }
          }
        }
      }
    },
    "/CompaniesStructure/{ids}": {
      "get": {
        "tags": [
          "CompaniesStructure"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "CompaniesStructure_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompaniesStructure"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompaniesStructure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CompaniesStructure"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "CompaniesStructure_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/CompaniesStructure/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "CompaniesStructure"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "CompaniesStructure_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/CompaniesStructure/{id}": {
      "get": {
        "tags": [
          "CompaniesStructure"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "CompaniesStructure_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompaniesStructure"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompaniesStructure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CompaniesStructure"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "CompaniesStructure_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/CompaniesStructure": {
      "get": {
        "tags": [
          "CompaniesStructure"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "CompaniesStructure_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompaniesStructure"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompaniesStructure"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CompaniesStructure"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "CompaniesStructure_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompaniesStructure"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CompaniesStructure"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompaniesStructure"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompaniesStructure"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompaniesStructure"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompaniesStructure"
                }
              }
            }
          }
        }
      }
    },
    "/Shipment/ConfirmShipment": {
      "post": {
        "tags": [
          "Shipment"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Shipment_InvokeAction_ConfirmShipment",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmShipment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmShipment"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shipment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shipment"
                }
              }
            }
          }
        }
      }
    },
    "/Shipment/CorrectShipment": {
      "post": {
        "tags": [
          "Shipment"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Shipment_InvokeAction_CorrectShipment",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CorrectShipment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CorrectShipment"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shipment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shipment"
                }
              }
            }
          }
        }
      }
    },
    "/Shipment/UpdateIN": {
      "post": {
        "tags": [
          "Shipment"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Shipment_InvokeAction_UpdateIN",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateIN"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateIN"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shipment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shipment"
                }
              }
            }
          }
        }
      }
    },
    "/Shipment/PrepareInvoice": {
      "post": {
        "tags": [
          "Shipment"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Shipment_InvokeAction_PrepareInvoice",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrepareInvoice"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PrepareInvoice"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shipment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shipment"
                }
              }
            }
          }
        }
      }
    },
    "/Shipment/{actionName}": {
      "post": {
        "tags": [
          "Shipment"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Shipment_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShipmentCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ShipmentCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shipment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shipment"
                }
              }
            }
          }
        }
      }
    },
    "/Shipment/$adHocSchema": {
      "get": {
        "tags": [
          "Shipment"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "Shipment_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shipment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shipment"
                }
              }
            }
          }
        }
      }
    },
    "/Shipment/{ids}": {
      "get": {
        "tags": [
          "Shipment"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "Shipment_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shipment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shipment"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Shipment"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "Shipment_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/Shipment/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Shipment"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "Shipment_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/Shipment/{id}": {
      "get": {
        "tags": [
          "Shipment"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "Shipment_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shipment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shipment"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Shipment"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "Shipment_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/Shipment": {
      "get": {
        "tags": [
          "Shipment"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "Shipment_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Shipment"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Shipment"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Shipment"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "Shipment_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Shipment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Shipment"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shipment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shipment"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shipment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shipment"
                }
              }
            }
          }
        }
      }
    },
    "/EmailProcessing/ProcessEmailProcessing": {
      "post": {
        "tags": [
          "EmailProcessing"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "EmailProcessing_InvokeAction_ProcessEmailProcessing",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessEmailProcessing"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessEmailProcessing"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailProcessing"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailProcessing"
                }
              }
            }
          }
        }
      }
    },
    "/EmailProcessing/ProcessAllEmailProcessing": {
      "post": {
        "tags": [
          "EmailProcessing"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "EmailProcessing_InvokeAction_ProcessAllEmailProcessing",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessAllEmailProcessing"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessAllEmailProcessing"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailProcessing"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailProcessing"
                }
              }
            }
          }
        }
      }
    },
    "/EmailProcessing/{actionName}": {
      "post": {
        "tags": [
          "EmailProcessing"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "EmailProcessing_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailProcessingCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailProcessingCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailProcessing"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailProcessing"
                }
              }
            }
          }
        }
      }
    },
    "/EmailProcessing/$adHocSchema": {
      "get": {
        "tags": [
          "EmailProcessing"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "EmailProcessing_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailProcessing"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailProcessing"
                }
              }
            }
          }
        }
      }
    },
    "/EmailProcessing/{ids}": {
      "get": {
        "tags": [
          "EmailProcessing"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "EmailProcessing_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailProcessing"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailProcessing"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EmailProcessing"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "EmailProcessing_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/EmailProcessing/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "EmailProcessing"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "EmailProcessing_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/EmailProcessing/{id}": {
      "get": {
        "tags": [
          "EmailProcessing"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "EmailProcessing_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailProcessing"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailProcessing"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EmailProcessing"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "EmailProcessing_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/EmailProcessing": {
      "get": {
        "tags": [
          "EmailProcessing"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "EmailProcessing_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmailProcessing"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmailProcessing"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "EmailProcessing"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "EmailProcessing_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailProcessing"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailProcessing"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailProcessing"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailProcessing"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailProcessing"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailProcessing"
                }
              }
            }
          }
        }
      }
    },
    "/WorkLocation/{actionName}": {
      "post": {
        "tags": [
          "WorkLocation"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "WorkLocation_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkLocationCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkLocationCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkLocation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkLocation"
                }
              }
            }
          }
        }
      }
    },
    "/WorkLocation/$adHocSchema": {
      "get": {
        "tags": [
          "WorkLocation"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "WorkLocation_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkLocation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkLocation"
                }
              }
            }
          }
        }
      }
    },
    "/WorkLocation/{ids}": {
      "get": {
        "tags": [
          "WorkLocation"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "WorkLocation_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkLocation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkLocation"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WorkLocation"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "WorkLocation_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/WorkLocation/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "WorkLocation"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "WorkLocation_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/WorkLocation/{id}": {
      "get": {
        "tags": [
          "WorkLocation"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "WorkLocation_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkLocation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkLocation"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WorkLocation"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "WorkLocation_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/WorkLocation": {
      "get": {
        "tags": [
          "WorkLocation"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "WorkLocation_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkLocation"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkLocation"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "WorkLocation"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "WorkLocation_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkLocation"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkLocation"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkLocation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkLocation"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkLocation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkLocation"
                }
              }
            }
          }
        }
      }
    },
    "/FinancialPeriod/{actionName}": {
      "post": {
        "tags": [
          "FinancialPeriod"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "FinancialPeriod_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialPeriodCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialPeriodCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialPeriod"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialPeriod"
                }
              }
            }
          }
        }
      }
    },
    "/FinancialPeriod/$adHocSchema": {
      "get": {
        "tags": [
          "FinancialPeriod"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "FinancialPeriod_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialPeriod"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialPeriod"
                }
              }
            }
          }
        }
      }
    },
    "/FinancialPeriod/{ids}": {
      "get": {
        "tags": [
          "FinancialPeriod"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "FinancialPeriod_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialPeriod"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialPeriod"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "FinancialPeriod"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "FinancialPeriod_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/FinancialPeriod/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "FinancialPeriod"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "FinancialPeriod_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/FinancialPeriod/{id}": {
      "get": {
        "tags": [
          "FinancialPeriod"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "FinancialPeriod_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialPeriod"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialPeriod"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "FinancialPeriod"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "FinancialPeriod_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/FinancialPeriod": {
      "get": {
        "tags": [
          "FinancialPeriod"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "FinancialPeriod_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FinancialPeriod"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FinancialPeriod"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "FinancialPeriod"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "FinancialPeriod_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialPeriod"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialPeriod"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialPeriod"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialPeriod"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialPeriod"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialPeriod"
                }
              }
            }
          }
        }
      }
    },
    "/Invoice/ReleaseInvoice": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Invoice_InvokeAction_ReleaseInvoice",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseInvoice"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseInvoice"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          }
        }
      }
    },
    "/Invoice/{actionName}": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Invoice_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          }
        }
      }
    },
    "/Invoice/$adHocSchema": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "Invoice_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          }
        }
      }
    },
    "/Invoice/{ids}": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "Invoice_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Invoice"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "Invoice_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/Invoice/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Invoice"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "Invoice_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/Invoice/{id}": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "Invoice_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Invoice"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "Invoice_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/Invoice": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "Invoice_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Invoice"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Invoice"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Invoice"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "Invoice_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Invoice"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Invoice"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          }
        }
      }
    },
    "/KitSpecification/{actionName}": {
      "post": {
        "tags": [
          "KitSpecification"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "KitSpecification_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KitSpecificationCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/KitSpecificationCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KitSpecification"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/KitSpecification"
                }
              }
            }
          }
        }
      }
    },
    "/KitSpecification/$adHocSchema": {
      "get": {
        "tags": [
          "KitSpecification"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "KitSpecification_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KitSpecification"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/KitSpecification"
                }
              }
            }
          }
        }
      }
    },
    "/KitSpecification/{ids}": {
      "get": {
        "tags": [
          "KitSpecification"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "KitSpecification_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KitSpecification"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/KitSpecification"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "KitSpecification"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "KitSpecification_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/KitSpecification/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "KitSpecification"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "KitSpecification_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/KitSpecification/{id}": {
      "get": {
        "tags": [
          "KitSpecification"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "KitSpecification_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KitSpecification"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/KitSpecification"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "KitSpecification"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "KitSpecification_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/KitSpecification": {
      "get": {
        "tags": [
          "KitSpecification"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "KitSpecification_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KitSpecification"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KitSpecification"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "KitSpecification"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "KitSpecification_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KitSpecification"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/KitSpecification"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KitSpecification"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/KitSpecification"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KitSpecification"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/KitSpecification"
                }
              }
            }
          }
        }
      }
    },
    "/Vendor/CreateContactFromVendor": {
      "post": {
        "tags": [
          "Vendor"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Vendor_InvokeAction_CreateContactFromVendor",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContactFromVendor"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContactFromVendor"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vendor"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vendor"
                }
              }
            }
          }
        }
      }
    },
    "/Vendor/{actionName}": {
      "post": {
        "tags": [
          "Vendor"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Vendor_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VendorCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VendorCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vendor"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vendor"
                }
              }
            }
          }
        }
      }
    },
    "/Vendor/$adHocSchema": {
      "get": {
        "tags": [
          "Vendor"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "Vendor_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vendor"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vendor"
                }
              }
            }
          }
        }
      }
    },
    "/Vendor/{ids}": {
      "get": {
        "tags": [
          "Vendor"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "Vendor_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vendor"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vendor"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Vendor"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "Vendor_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/Vendor/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Vendor"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "Vendor_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/Vendor/{id}": {
      "get": {
        "tags": [
          "Vendor"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "Vendor_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vendor"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vendor"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Vendor"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "Vendor_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/Vendor": {
      "get": {
        "tags": [
          "Vendor"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "Vendor_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Vendor"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Vendor"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Vendor"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "Vendor_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Vendor"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Vendor"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vendor"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vendor"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vendor"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vendor"
                }
              }
            }
          }
        }
      }
    },
    "/TransferOrder/ReleaseTransferOrder": {
      "post": {
        "tags": [
          "TransferOrder"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "TransferOrder_InvokeAction_ReleaseTransferOrder",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseTransferOrder"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseTransferOrder"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferOrder"
                }
              }
            }
          }
        }
      }
    },
    "/TransferOrder/{actionName}": {
      "post": {
        "tags": [
          "TransferOrder"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "TransferOrder_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferOrderCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferOrderCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferOrder"
                }
              }
            }
          }
        }
      }
    },
    "/TransferOrder/$adHocSchema": {
      "get": {
        "tags": [
          "TransferOrder"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "TransferOrder_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferOrder"
                }
              }
            }
          }
        }
      }
    },
    "/TransferOrder/{ids}": {
      "get": {
        "tags": [
          "TransferOrder"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "TransferOrder_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferOrder"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TransferOrder"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "TransferOrder_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/TransferOrder/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "TransferOrder"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "TransferOrder_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/TransferOrder/{id}": {
      "get": {
        "tags": [
          "TransferOrder"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "TransferOrder_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferOrder"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TransferOrder"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "TransferOrder_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/TransferOrder": {
      "get": {
        "tags": [
          "TransferOrder"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "TransferOrder_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransferOrder"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransferOrder"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "TransferOrder"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "TransferOrder_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferOrder"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferOrder"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferOrder"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferOrder"
                }
              }
            }
          }
        }
      }
    },
    "/PurchaseReceipt/ReleasePurchaseReceipt": {
      "post": {
        "tags": [
          "PurchaseReceipt"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "PurchaseReceipt_InvokeAction_ReleasePurchaseReceipt",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleasePurchaseReceipt"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleasePurchaseReceipt"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseReceipt"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseReceipt"
                }
              }
            }
          }
        }
      }
    },
    "/PurchaseReceipt/CreateAPBill": {
      "post": {
        "tags": [
          "PurchaseReceipt"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "PurchaseReceipt_InvokeAction_CreateAPBill",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAPBill"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAPBill"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseReceipt"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseReceipt"
                }
              }
            }
          }
        }
      }
    },
    "/PurchaseReceipt/{actionName}": {
      "post": {
        "tags": [
          "PurchaseReceipt"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "PurchaseReceipt_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseReceiptCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseReceiptCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseReceipt"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseReceipt"
                }
              }
            }
          }
        }
      }
    },
    "/PurchaseReceipt/$adHocSchema": {
      "get": {
        "tags": [
          "PurchaseReceipt"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "PurchaseReceipt_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseReceipt"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseReceipt"
                }
              }
            }
          }
        }
      }
    },
    "/PurchaseReceipt/{ids}": {
      "get": {
        "tags": [
          "PurchaseReceipt"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "PurchaseReceipt_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseReceipt"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseReceipt"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PurchaseReceipt"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "PurchaseReceipt_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/PurchaseReceipt/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "PurchaseReceipt"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "PurchaseReceipt_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/PurchaseReceipt/{id}": {
      "get": {
        "tags": [
          "PurchaseReceipt"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "PurchaseReceipt_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseReceipt"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseReceipt"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PurchaseReceipt"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "PurchaseReceipt_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/PurchaseReceipt": {
      "get": {
        "tags": [
          "PurchaseReceipt"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "PurchaseReceipt_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseReceipt"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseReceipt"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PurchaseReceipt"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "PurchaseReceipt_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseReceipt"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseReceipt"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseReceipt"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseReceipt"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseReceipt"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseReceipt"
                }
              }
            }
          }
        }
      }
    },
    "/TemplateItems/{actionName}": {
      "post": {
        "tags": [
          "TemplateItems"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "TemplateItems_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateItemsCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateItemsCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateItems"
                }
              }
            }
          }
        }
      }
    },
    "/TemplateItems/$adHocSchema": {
      "get": {
        "tags": [
          "TemplateItems"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "TemplateItems_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateItems"
                }
              }
            }
          }
        }
      }
    },
    "/TemplateItems/{ids}": {
      "get": {
        "tags": [
          "TemplateItems"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "TemplateItems_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateItems"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TemplateItems"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "TemplateItems_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/TemplateItems/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "TemplateItems"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "TemplateItems_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/TemplateItems/{id}": {
      "get": {
        "tags": [
          "TemplateItems"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "TemplateItems_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateItems"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TemplateItems"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "TemplateItems_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/TemplateItems": {
      "get": {
        "tags": [
          "TemplateItems"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "TemplateItems_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TemplateItems"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TemplateItems"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "TemplateItems"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "TemplateItems_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateItems"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TemplateItems"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateItems"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateItems"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateItems"
                }
              }
            }
          }
        }
      }
    },
    "/EmployeePayrollSettings/ImportEmployeeTaxes": {
      "post": {
        "tags": [
          "EmployeePayrollSettings"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "EmployeePayrollSettings_InvokeAction_ImportEmployeeTaxes",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportEmployeeTaxes"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportEmployeeTaxes"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeePayrollSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeePayrollSettings"
                }
              }
            }
          }
        }
      }
    },
    "/EmployeePayrollSettings/{actionName}": {
      "post": {
        "tags": [
          "EmployeePayrollSettings"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "EmployeePayrollSettings_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeePayrollSettingsCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeePayrollSettingsCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeePayrollSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeePayrollSettings"
                }
              }
            }
          }
        }
      }
    },
    "/EmployeePayrollSettings/$adHocSchema": {
      "get": {
        "tags": [
          "EmployeePayrollSettings"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "EmployeePayrollSettings_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeePayrollSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeePayrollSettings"
                }
              }
            }
          }
        }
      }
    },
    "/EmployeePayrollSettings/{ids}": {
      "get": {
        "tags": [
          "EmployeePayrollSettings"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "EmployeePayrollSettings_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeePayrollSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeePayrollSettings"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EmployeePayrollSettings"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "EmployeePayrollSettings_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/EmployeePayrollSettings/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "EmployeePayrollSettings"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "EmployeePayrollSettings_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/EmployeePayrollSettings/{id}": {
      "get": {
        "tags": [
          "EmployeePayrollSettings"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "EmployeePayrollSettings_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeePayrollSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeePayrollSettings"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EmployeePayrollSettings"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "EmployeePayrollSettings_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/EmployeePayrollSettings": {
      "get": {
        "tags": [
          "EmployeePayrollSettings"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "EmployeePayrollSettings_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeePayrollSettings"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeePayrollSettings"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "EmployeePayrollSettings"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "EmployeePayrollSettings_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeePayrollSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeePayrollSettings"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeePayrollSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeePayrollSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeePayrollSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeePayrollSettings"
                }
              }
            }
          }
        }
      }
    },
    "/InventorySummaryInquiry/{actionName}": {
      "post": {
        "tags": [
          "InventorySummaryInquiry"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "InventorySummaryInquiry_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventorySummaryInquiryCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InventorySummaryInquiryCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventorySummaryInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventorySummaryInquiry"
                }
              }
            }
          }
        }
      }
    },
    "/InventorySummaryInquiry/$adHocSchema": {
      "get": {
        "tags": [
          "InventorySummaryInquiry"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "InventorySummaryInquiry_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventorySummaryInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventorySummaryInquiry"
                }
              }
            }
          }
        }
      }
    },
    "/InventorySummaryInquiry/{ids}": {
      "get": {
        "tags": [
          "InventorySummaryInquiry"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "InventorySummaryInquiry_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventorySummaryInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventorySummaryInquiry"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "InventorySummaryInquiry"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "InventorySummaryInquiry_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/InventorySummaryInquiry/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "InventorySummaryInquiry"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "InventorySummaryInquiry_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/InventorySummaryInquiry/{id}": {
      "get": {
        "tags": [
          "InventorySummaryInquiry"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "InventorySummaryInquiry_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventorySummaryInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventorySummaryInquiry"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "InventorySummaryInquiry"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "InventorySummaryInquiry_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/InventorySummaryInquiry": {
      "get": {
        "tags": [
          "InventorySummaryInquiry"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "InventorySummaryInquiry_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InventorySummaryInquiry"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InventorySummaryInquiry"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "InventorySummaryInquiry"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "InventorySummaryInquiry_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventorySummaryInquiry"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InventorySummaryInquiry"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventorySummaryInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventorySummaryInquiry"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventorySummaryInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventorySummaryInquiry"
                }
              }
            }
          }
        }
      }
    },
    "/SalesPriceWorksheet/ReleaseSalesPriceWorksheet": {
      "post": {
        "tags": [
          "SalesPriceWorksheet"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "SalesPriceWorksheet_InvokeAction_ReleaseSalesPriceWorksheet",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseSalesPriceWorksheet"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseSalesPriceWorksheet"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesPriceWorksheet"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesPriceWorksheet"
                }
              }
            }
          }
        }
      }
    },
    "/SalesPriceWorksheet/{actionName}": {
      "post": {
        "tags": [
          "SalesPriceWorksheet"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "SalesPriceWorksheet_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesPriceWorksheetCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesPriceWorksheetCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesPriceWorksheet"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesPriceWorksheet"
                }
              }
            }
          }
        }
      }
    },
    "/SalesPriceWorksheet/$adHocSchema": {
      "get": {
        "tags": [
          "SalesPriceWorksheet"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "SalesPriceWorksheet_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesPriceWorksheet"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesPriceWorksheet"
                }
              }
            }
          }
        }
      }
    },
    "/SalesPriceWorksheet/{ids}": {
      "get": {
        "tags": [
          "SalesPriceWorksheet"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "SalesPriceWorksheet_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesPriceWorksheet"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesPriceWorksheet"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SalesPriceWorksheet"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "SalesPriceWorksheet_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/SalesPriceWorksheet/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "SalesPriceWorksheet"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "SalesPriceWorksheet_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/SalesPriceWorksheet/{id}": {
      "get": {
        "tags": [
          "SalesPriceWorksheet"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "SalesPriceWorksheet_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesPriceWorksheet"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesPriceWorksheet"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SalesPriceWorksheet"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "SalesPriceWorksheet_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/SalesPriceWorksheet": {
      "get": {
        "tags": [
          "SalesPriceWorksheet"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "SalesPriceWorksheet_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesPriceWorksheet"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesPriceWorksheet"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SalesPriceWorksheet"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "SalesPriceWorksheet_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesPriceWorksheet"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesPriceWorksheet"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesPriceWorksheet"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesPriceWorksheet"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesPriceWorksheet"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesPriceWorksheet"
                }
              }
            }
          }
        }
      }
    },
    "/Payment/CaptureCreditCardPayment": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Payment_InvokeAction_CaptureCreditCardPayment",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CaptureCreditCardPayment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CaptureCreditCardPayment"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          }
        }
      }
    },
    "/Payment/ReleasePayment": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Payment_InvokeAction_ReleasePayment",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleasePayment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleasePayment"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          }
        }
      }
    },
    "/Payment/VoidPayment": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Payment_InvokeAction_VoidPayment",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VoidPayment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VoidPayment"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          }
        }
      }
    },
    "/Payment/VoidCardPayment": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Payment_InvokeAction_VoidCardPayment",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VoidCardPayment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VoidCardPayment"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          }
        }
      }
    },
    "/Payment/CardOperation": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Payment_InvokeAction_CardOperation",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CardOperation"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CardOperation"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          }
        }
      }
    },
    "/Payment/{actionName}": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Payment_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          }
        }
      }
    },
    "/Payment/$adHocSchema": {
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "Payment_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          }
        }
      }
    },
    "/Payment/{ids}": {
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "Payment_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Payment"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "Payment_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/Payment/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Payment"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "Payment_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/Payment/{id}": {
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "Payment_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Payment"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "Payment_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/Payment": {
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "Payment_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Payment"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Payment"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Payment"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "Payment_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Payment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Payment"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          }
        }
      }
    },
    "/PurchaseOrder/{actionName}": {
      "post": {
        "tags": [
          "PurchaseOrder"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "PurchaseOrder_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseOrderCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseOrderCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseOrder"
                }
              }
            }
          }
        }
      }
    },
    "/PurchaseOrder/$adHocSchema": {
      "get": {
        "tags": [
          "PurchaseOrder"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "PurchaseOrder_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseOrder"
                }
              }
            }
          }
        }
      }
    },
    "/PurchaseOrder/{ids}": {
      "get": {
        "tags": [
          "PurchaseOrder"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "PurchaseOrder_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseOrder"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PurchaseOrder"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "PurchaseOrder_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/PurchaseOrder/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "PurchaseOrder"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "PurchaseOrder_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/PurchaseOrder/{id}": {
      "get": {
        "tags": [
          "PurchaseOrder"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "PurchaseOrder_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseOrder"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PurchaseOrder"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "PurchaseOrder_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/PurchaseOrder": {
      "get": {
        "tags": [
          "PurchaseOrder"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "PurchaseOrder_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseOrder"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseOrder"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PurchaseOrder"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "PurchaseOrder_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseOrder"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseOrder"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseOrder"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseOrder"
                }
              }
            }
          }
        }
      }
    },
    "/TaxReportingSettings/{actionName}": {
      "post": {
        "tags": [
          "TaxReportingSettings"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "TaxReportingSettings_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxReportingSettingsCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxReportingSettingsCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxReportingSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxReportingSettings"
                }
              }
            }
          }
        }
      }
    },
    "/TaxReportingSettings/$adHocSchema": {
      "get": {
        "tags": [
          "TaxReportingSettings"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "TaxReportingSettings_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxReportingSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxReportingSettings"
                }
              }
            }
          }
        }
      }
    },
    "/TaxReportingSettings/{ids}": {
      "get": {
        "tags": [
          "TaxReportingSettings"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "TaxReportingSettings_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxReportingSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxReportingSettings"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TaxReportingSettings"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "TaxReportingSettings_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/TaxReportingSettings/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "TaxReportingSettings"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "TaxReportingSettings_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/TaxReportingSettings/{id}": {
      "get": {
        "tags": [
          "TaxReportingSettings"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "TaxReportingSettings_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxReportingSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxReportingSettings"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TaxReportingSettings"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "TaxReportingSettings_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/TaxReportingSettings": {
      "get": {
        "tags": [
          "TaxReportingSettings"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "TaxReportingSettings_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaxReportingSettings"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaxReportingSettings"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "TaxReportingSettings"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "TaxReportingSettings_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxReportingSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxReportingSettings"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxReportingSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxReportingSettings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxReportingSettings"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxReportingSettings"
                }
              }
            }
          }
        }
      }
    },
    "/AttributeDefinition/{actionName}": {
      "post": {
        "tags": [
          "AttributeDefinition"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "AttributeDefinition_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttributeDefinitionCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AttributeDefinitionCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeDefinition"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeDefinition"
                }
              }
            }
          }
        }
      }
    },
    "/AttributeDefinition/$adHocSchema": {
      "get": {
        "tags": [
          "AttributeDefinition"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "AttributeDefinition_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeDefinition"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeDefinition"
                }
              }
            }
          }
        }
      }
    },
    "/AttributeDefinition/{ids}": {
      "get": {
        "tags": [
          "AttributeDefinition"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "AttributeDefinition_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeDefinition"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeDefinition"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AttributeDefinition"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "AttributeDefinition_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/AttributeDefinition/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "AttributeDefinition"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "AttributeDefinition_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/AttributeDefinition/{id}": {
      "get": {
        "tags": [
          "AttributeDefinition"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "AttributeDefinition_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeDefinition"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeDefinition"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AttributeDefinition"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "AttributeDefinition_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/AttributeDefinition": {
      "get": {
        "tags": [
          "AttributeDefinition"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "AttributeDefinition_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AttributeDefinition"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AttributeDefinition"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AttributeDefinition"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "AttributeDefinition_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttributeDefinition"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AttributeDefinition"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeDefinition"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeDefinition"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeDefinition"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeDefinition"
                }
              }
            }
          }
        }
      }
    },
    "/NonStockItem/UpdateStandardCostNonStockItem": {
      "post": {
        "tags": [
          "NonStockItem"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "NonStockItem_InvokeAction_UpdateStandardCostNonStockItem",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStandardCostNonStockItem"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStandardCostNonStockItem"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NonStockItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NonStockItem"
                }
              }
            }
          }
        }
      }
    },
    "/NonStockItem/{actionName}": {
      "post": {
        "tags": [
          "NonStockItem"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "NonStockItem_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NonStockItemCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NonStockItemCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NonStockItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NonStockItem"
                }
              }
            }
          }
        }
      }
    },
    "/NonStockItem/$adHocSchema": {
      "get": {
        "tags": [
          "NonStockItem"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "NonStockItem_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NonStockItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NonStockItem"
                }
              }
            }
          }
        }
      }
    },
    "/NonStockItem/{ids}": {
      "get": {
        "tags": [
          "NonStockItem"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "NonStockItem_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NonStockItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NonStockItem"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "NonStockItem"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "NonStockItem_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/NonStockItem/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "NonStockItem"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "NonStockItem_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/NonStockItem/{id}": {
      "get": {
        "tags": [
          "NonStockItem"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "NonStockItem_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NonStockItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NonStockItem"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "NonStockItem"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "NonStockItem_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/NonStockItem": {
      "get": {
        "tags": [
          "NonStockItem"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "NonStockItem_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NonStockItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NonStockItem"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "NonStockItem"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "NonStockItem_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NonStockItem"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NonStockItem"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NonStockItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NonStockItem"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NonStockItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NonStockItem"
                }
              }
            }
          }
        }
      }
    },
    "/ProjectTask/ActivateProjectTask": {
      "post": {
        "tags": [
          "ProjectTask"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ProjectTask_InvokeAction_ActivateProjectTask",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivateProjectTask"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivateProjectTask"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTask"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTask"
                }
              }
            }
          }
        }
      }
    },
    "/ProjectTask/CompleteProjectTask": {
      "post": {
        "tags": [
          "ProjectTask"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ProjectTask_InvokeAction_CompleteProjectTask",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompleteProjectTask"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CompleteProjectTask"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTask"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTask"
                }
              }
            }
          }
        }
      }
    },
    "/ProjectTask/CancelProjectTask": {
      "post": {
        "tags": [
          "ProjectTask"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ProjectTask_InvokeAction_CancelProjectTask",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelProjectTask"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelProjectTask"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTask"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTask"
                }
              }
            }
          }
        }
      }
    },
    "/ProjectTask/HoldProjectTask": {
      "post": {
        "tags": [
          "ProjectTask"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ProjectTask_InvokeAction_HoldProjectTask",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HoldProjectTask"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HoldProjectTask"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTask"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTask"
                }
              }
            }
          }
        }
      }
    },
    "/ProjectTask/{actionName}": {
      "post": {
        "tags": [
          "ProjectTask"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ProjectTask_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectTaskCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectTaskCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTask"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTask"
                }
              }
            }
          }
        }
      }
    },
    "/ProjectTask/$adHocSchema": {
      "get": {
        "tags": [
          "ProjectTask"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "ProjectTask_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTask"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTask"
                }
              }
            }
          }
        }
      }
    },
    "/ProjectTask/{ids}": {
      "get": {
        "tags": [
          "ProjectTask"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "ProjectTask_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTask"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTask"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProjectTask"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "ProjectTask_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/ProjectTask/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "ProjectTask"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "ProjectTask_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/ProjectTask/{id}": {
      "get": {
        "tags": [
          "ProjectTask"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "ProjectTask_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTask"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTask"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProjectTask"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "ProjectTask_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/ProjectTask": {
      "get": {
        "tags": [
          "ProjectTask"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "ProjectTask_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectTask"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectTask"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProjectTask"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "ProjectTask_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectTask"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectTask"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTask"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTask"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTask"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTask"
                }
              }
            }
          }
        }
      }
    },
    "/AccountSummaryInquiry/{actionName}": {
      "post": {
        "tags": [
          "AccountSummaryInquiry"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "AccountSummaryInquiry_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountSummaryInquiryCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountSummaryInquiryCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountSummaryInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountSummaryInquiry"
                }
              }
            }
          }
        }
      }
    },
    "/AccountSummaryInquiry/$adHocSchema": {
      "get": {
        "tags": [
          "AccountSummaryInquiry"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "AccountSummaryInquiry_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountSummaryInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountSummaryInquiry"
                }
              }
            }
          }
        }
      }
    },
    "/AccountSummaryInquiry/{ids}": {
      "get": {
        "tags": [
          "AccountSummaryInquiry"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "AccountSummaryInquiry_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountSummaryInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountSummaryInquiry"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AccountSummaryInquiry"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "AccountSummaryInquiry_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/AccountSummaryInquiry/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "AccountSummaryInquiry"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "AccountSummaryInquiry_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/AccountSummaryInquiry/{id}": {
      "get": {
        "tags": [
          "AccountSummaryInquiry"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "AccountSummaryInquiry_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountSummaryInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountSummaryInquiry"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AccountSummaryInquiry"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "AccountSummaryInquiry_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/AccountSummaryInquiry": {
      "get": {
        "tags": [
          "AccountSummaryInquiry"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "AccountSummaryInquiry_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccountSummaryInquiry"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccountSummaryInquiry"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AccountSummaryInquiry"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "AccountSummaryInquiry_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountSummaryInquiry"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountSummaryInquiry"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountSummaryInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountSummaryInquiry"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountSummaryInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountSummaryInquiry"
                }
              }
            }
          }
        }
      }
    },
    "/Lead/CheckLeadForDuplicates": {
      "post": {
        "tags": [
          "Lead"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Lead_InvokeAction_CheckLeadForDuplicates",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckLeadForDuplicates"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckLeadForDuplicates"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lead"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lead"
                }
              }
            }
          }
        }
      }
    },
    "/Lead/ConvertLeadToBAccount": {
      "post": {
        "tags": [
          "Lead"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Lead_InvokeAction_ConvertLeadToBAccount",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConvertLeadToBAccount"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConvertLeadToBAccount"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lead"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lead"
                }
              }
            }
          }
        }
      }
    },
    "/Lead/ConvertLeadToContact": {
      "post": {
        "tags": [
          "Lead"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Lead_InvokeAction_ConvertLeadToContact",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConvertLeadToContact"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConvertLeadToContact"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lead"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lead"
                }
              }
            }
          }
        }
      }
    },
    "/Lead/ConvertLeadToOpportunity": {
      "post": {
        "tags": [
          "Lead"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Lead_InvokeAction_ConvertLeadToOpportunity",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConvertLeadToOpportunity"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConvertLeadToOpportunity"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lead"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lead"
                }
              }
            }
          }
        }
      }
    },
    "/Lead/ValidateLeadAddress": {
      "post": {
        "tags": [
          "Lead"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Lead_InvokeAction_ValidateLeadAddress",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateLeadAddress"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateLeadAddress"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lead"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lead"
                }
              }
            }
          }
        }
      }
    },
    "/Lead/MarkLeadAsValidated": {
      "post": {
        "tags": [
          "Lead"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Lead_InvokeAction_MarkLeadAsValidated",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkLeadAsValidated"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkLeadAsValidated"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lead"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lead"
                }
              }
            }
          }
        }
      }
    },
    "/Lead/{actionName}": {
      "post": {
        "tags": [
          "Lead"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Lead_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LeadCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LeadCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lead"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lead"
                }
              }
            }
          }
        }
      }
    },
    "/Lead/$adHocSchema": {
      "get": {
        "tags": [
          "Lead"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "Lead_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lead"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lead"
                }
              }
            }
          }
        }
      }
    },
    "/Lead/{ids}": {
      "get": {
        "tags": [
          "Lead"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "Lead_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lead"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lead"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Lead"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "Lead_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/Lead/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Lead"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "Lead_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/Lead/{id}": {
      "get": {
        "tags": [
          "Lead"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "Lead_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lead"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lead"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Lead"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "Lead_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/Lead": {
      "get": {
        "tags": [
          "Lead"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "Lead_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Lead"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Lead"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Lead"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "Lead_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Lead"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Lead"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lead"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lead"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lead"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lead"
                }
              }
            }
          }
        }
      }
    },
    "/PayrollUnionLocal/{actionName}": {
      "post": {
        "tags": [
          "PayrollUnionLocal"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "PayrollUnionLocal_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayrollUnionLocalCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PayrollUnionLocalCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayrollUnionLocal"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayrollUnionLocal"
                }
              }
            }
          }
        }
      }
    },
    "/PayrollUnionLocal/$adHocSchema": {
      "get": {
        "tags": [
          "PayrollUnionLocal"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "PayrollUnionLocal_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayrollUnionLocal"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayrollUnionLocal"
                }
              }
            }
          }
        }
      }
    },
    "/PayrollUnionLocal/{ids}": {
      "get": {
        "tags": [
          "PayrollUnionLocal"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "PayrollUnionLocal_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayrollUnionLocal"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayrollUnionLocal"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PayrollUnionLocal"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "PayrollUnionLocal_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/PayrollUnionLocal/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "PayrollUnionLocal"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "PayrollUnionLocal_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/PayrollUnionLocal/{id}": {
      "get": {
        "tags": [
          "PayrollUnionLocal"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "PayrollUnionLocal_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayrollUnionLocal"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayrollUnionLocal"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PayrollUnionLocal"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "PayrollUnionLocal_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/PayrollUnionLocal": {
      "get": {
        "tags": [
          "PayrollUnionLocal"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "PayrollUnionLocal_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PayrollUnionLocal"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PayrollUnionLocal"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PayrollUnionLocal"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "PayrollUnionLocal_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayrollUnionLocal"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PayrollUnionLocal"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayrollUnionLocal"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayrollUnionLocal"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayrollUnionLocal"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayrollUnionLocal"
                }
              }
            }
          }
        }
      }
    },
    "/ContractUsage/{actionName}": {
      "post": {
        "tags": [
          "ContractUsage"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ContractUsage_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractUsageCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractUsageCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractUsage"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractUsage"
                }
              }
            }
          }
        }
      }
    },
    "/ContractUsage/$adHocSchema": {
      "get": {
        "tags": [
          "ContractUsage"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "ContractUsage_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractUsage"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractUsage"
                }
              }
            }
          }
        }
      }
    },
    "/ContractUsage/{ids}": {
      "get": {
        "tags": [
          "ContractUsage"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "ContractUsage_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractUsage"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractUsage"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ContractUsage"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "ContractUsage_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/ContractUsage/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "ContractUsage"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "ContractUsage_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/ContractUsage/{id}": {
      "get": {
        "tags": [
          "ContractUsage"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "ContractUsage_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractUsage"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractUsage"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ContractUsage"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "ContractUsage_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/ContractUsage": {
      "get": {
        "tags": [
          "ContractUsage"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "ContractUsage_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContractUsage"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContractUsage"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ContractUsage"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "ContractUsage_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractUsage"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractUsage"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractUsage"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractUsage"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractUsage"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractUsage"
                }
              }
            }
          }
        }
      }
    },
    "/StorageDetailsByLocationInquiry/{actionName}": {
      "post": {
        "tags": [
          "StorageDetailsByLocationInquiry"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "StorageDetailsByLocationInquiry_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StorageDetailsByLocationInquiryCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StorageDetailsByLocationInquiryCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageDetailsByLocationInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageDetailsByLocationInquiry"
                }
              }
            }
          }
        }
      }
    },
    "/StorageDetailsByLocationInquiry/$adHocSchema": {
      "get": {
        "tags": [
          "StorageDetailsByLocationInquiry"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "StorageDetailsByLocationInquiry_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageDetailsByLocationInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageDetailsByLocationInquiry"
                }
              }
            }
          }
        }
      }
    },
    "/StorageDetailsByLocationInquiry/{ids}": {
      "get": {
        "tags": [
          "StorageDetailsByLocationInquiry"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "StorageDetailsByLocationInquiry_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageDetailsByLocationInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageDetailsByLocationInquiry"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "StorageDetailsByLocationInquiry"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "StorageDetailsByLocationInquiry_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/StorageDetailsByLocationInquiry/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "StorageDetailsByLocationInquiry"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "StorageDetailsByLocationInquiry_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/StorageDetailsByLocationInquiry/{id}": {
      "get": {
        "tags": [
          "StorageDetailsByLocationInquiry"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "StorageDetailsByLocationInquiry_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageDetailsByLocationInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageDetailsByLocationInquiry"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "StorageDetailsByLocationInquiry"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "StorageDetailsByLocationInquiry_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/StorageDetailsByLocationInquiry": {
      "get": {
        "tags": [
          "StorageDetailsByLocationInquiry"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "StorageDetailsByLocationInquiry_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StorageDetailsByLocationInquiry"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StorageDetailsByLocationInquiry"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "StorageDetailsByLocationInquiry"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "StorageDetailsByLocationInquiry_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StorageDetailsByLocationInquiry"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StorageDetailsByLocationInquiry"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageDetailsByLocationInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageDetailsByLocationInquiry"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageDetailsByLocationInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageDetailsByLocationInquiry"
                }
              }
            }
          }
        }
      }
    },
    "/KitAssembly/ReleaseKitAssembly": {
      "post": {
        "tags": [
          "KitAssembly"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "KitAssembly_InvokeAction_ReleaseKitAssembly",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseKitAssembly"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseKitAssembly"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KitAssembly"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/KitAssembly"
                }
              }
            }
          }
        }
      }
    },
    "/KitAssembly/{actionName}": {
      "post": {
        "tags": [
          "KitAssembly"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "KitAssembly_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KitAssemblyCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/KitAssemblyCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KitAssembly"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/KitAssembly"
                }
              }
            }
          }
        }
      }
    },
    "/KitAssembly/$adHocSchema": {
      "get": {
        "tags": [
          "KitAssembly"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "KitAssembly_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KitAssembly"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/KitAssembly"
                }
              }
            }
          }
        }
      }
    },
    "/KitAssembly/{ids}": {
      "get": {
        "tags": [
          "KitAssembly"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "KitAssembly_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KitAssembly"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/KitAssembly"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "KitAssembly"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "KitAssembly_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/KitAssembly/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "KitAssembly"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "KitAssembly_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/KitAssembly/{id}": {
      "get": {
        "tags": [
          "KitAssembly"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "KitAssembly_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KitAssembly"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/KitAssembly"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "KitAssembly"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "KitAssembly_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/KitAssembly": {
      "get": {
        "tags": [
          "KitAssembly"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "KitAssembly_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KitAssembly"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KitAssembly"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "KitAssembly"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "KitAssembly_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KitAssembly"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/KitAssembly"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KitAssembly"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/KitAssembly"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KitAssembly"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/KitAssembly"
                }
              }
            }
          }
        }
      }
    },
    "/DeductionBenefitCode/{actionName}": {
      "post": {
        "tags": [
          "DeductionBenefitCode"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "DeductionBenefitCode_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeductionBenefitCodeCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeductionBenefitCodeCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeductionBenefitCode"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeductionBenefitCode"
                }
              }
            }
          }
        }
      }
    },
    "/DeductionBenefitCode/$adHocSchema": {
      "get": {
        "tags": [
          "DeductionBenefitCode"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "DeductionBenefitCode_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeductionBenefitCode"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeductionBenefitCode"
                }
              }
            }
          }
        }
      }
    },
    "/DeductionBenefitCode/{ids}": {
      "get": {
        "tags": [
          "DeductionBenefitCode"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "DeductionBenefitCode_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeductionBenefitCode"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeductionBenefitCode"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DeductionBenefitCode"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "DeductionBenefitCode_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/DeductionBenefitCode/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "DeductionBenefitCode"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "DeductionBenefitCode_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/DeductionBenefitCode/{id}": {
      "get": {
        "tags": [
          "DeductionBenefitCode"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "DeductionBenefitCode_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeductionBenefitCode"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeductionBenefitCode"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DeductionBenefitCode"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "DeductionBenefitCode_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/DeductionBenefitCode": {
      "get": {
        "tags": [
          "DeductionBenefitCode"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "DeductionBenefitCode_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeductionBenefitCode"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeductionBenefitCode"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "DeductionBenefitCode"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "DeductionBenefitCode_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeductionBenefitCode"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeductionBenefitCode"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeductionBenefitCode"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeductionBenefitCode"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeductionBenefitCode"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeductionBenefitCode"
                }
              }
            }
          }
        }
      }
    },
    "/Case/ReleaseCase": {
      "post": {
        "tags": [
          "Case"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Case_InvokeAction_ReleaseCase",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseCase"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseCase"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Case"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Case"
                }
              }
            }
          }
        }
      }
    },
    "/Case/AssignCase": {
      "post": {
        "tags": [
          "Case"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Case_InvokeAction_AssignCase",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignCase"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignCase"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Case"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Case"
                }
              }
            }
          }
        }
      }
    },
    "/Case/{actionName}": {
      "post": {
        "tags": [
          "Case"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Case_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CaseCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CaseCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Case"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Case"
                }
              }
            }
          }
        }
      }
    },
    "/Case/$adHocSchema": {
      "get": {
        "tags": [
          "Case"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "Case_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Case"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Case"
                }
              }
            }
          }
        }
      }
    },
    "/Case/{ids}": {
      "get": {
        "tags": [
          "Case"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "Case_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Case"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Case"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Case"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "Case_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/Case/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Case"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "Case_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/Case/{id}": {
      "get": {
        "tags": [
          "Case"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "Case_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Case"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Case"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Case"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "Case_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/Case": {
      "get": {
        "tags": [
          "Case"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "Case_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Case"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Case"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Case"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "Case_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Case"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Case"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Case"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Case"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Case"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Case"
                }
              }
            }
          }
        }
      }
    },
    "/SalesInvoice/ReleaseSalesInvoice": {
      "post": {
        "tags": [
          "SalesInvoice"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "SalesInvoice_InvokeAction_ReleaseSalesInvoice",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseSalesInvoice"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseSalesInvoice"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesInvoice"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesInvoice"
                }
              }
            }
          }
        }
      }
    },
    "/SalesInvoice/{actionName}": {
      "post": {
        "tags": [
          "SalesInvoice"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "SalesInvoice_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesInvoiceCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesInvoiceCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesInvoice"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesInvoice"
                }
              }
            }
          }
        }
      }
    },
    "/SalesInvoice/$adHocSchema": {
      "get": {
        "tags": [
          "SalesInvoice"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "SalesInvoice_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesInvoice"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesInvoice"
                }
              }
            }
          }
        }
      }
    },
    "/SalesInvoice/{ids}": {
      "get": {
        "tags": [
          "SalesInvoice"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "SalesInvoice_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesInvoice"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesInvoice"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SalesInvoice"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "SalesInvoice_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/SalesInvoice/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "SalesInvoice"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "SalesInvoice_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/SalesInvoice/{id}": {
      "get": {
        "tags": [
          "SalesInvoice"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "SalesInvoice_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesInvoice"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesInvoice"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SalesInvoice"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "SalesInvoice_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/SalesInvoice": {
      "get": {
        "tags": [
          "SalesInvoice"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "SalesInvoice_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesInvoice"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesInvoice"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SalesInvoice"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "SalesInvoice_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesInvoice"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesInvoice"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesInvoice"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesInvoice"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesInvoice"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesInvoice"
                }
              }
            }
          }
        }
      }
    },
    "/PhysicalInventoryCount/{actionName}": {
      "post": {
        "tags": [
          "PhysicalInventoryCount"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "PhysicalInventoryCount_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhysicalInventoryCountCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PhysicalInventoryCountCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhysicalInventoryCount"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhysicalInventoryCount"
                }
              }
            }
          }
        }
      }
    },
    "/PhysicalInventoryCount/$adHocSchema": {
      "get": {
        "tags": [
          "PhysicalInventoryCount"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "PhysicalInventoryCount_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhysicalInventoryCount"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhysicalInventoryCount"
                }
              }
            }
          }
        }
      }
    },
    "/PhysicalInventoryCount/{ids}": {
      "get": {
        "tags": [
          "PhysicalInventoryCount"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "PhysicalInventoryCount_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhysicalInventoryCount"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhysicalInventoryCount"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PhysicalInventoryCount"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "PhysicalInventoryCount_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/PhysicalInventoryCount/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "PhysicalInventoryCount"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "PhysicalInventoryCount_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/PhysicalInventoryCount/{id}": {
      "get": {
        "tags": [
          "PhysicalInventoryCount"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "PhysicalInventoryCount_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhysicalInventoryCount"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhysicalInventoryCount"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PhysicalInventoryCount"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "PhysicalInventoryCount_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/PhysicalInventoryCount": {
      "get": {
        "tags": [
          "PhysicalInventoryCount"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "PhysicalInventoryCount_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhysicalInventoryCount"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhysicalInventoryCount"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PhysicalInventoryCount"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "PhysicalInventoryCount_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhysicalInventoryCount"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PhysicalInventoryCount"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhysicalInventoryCount"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhysicalInventoryCount"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhysicalInventoryCount"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhysicalInventoryCount"
                }
              }
            }
          }
        }
      }
    },
    "/PTOBank/{actionName}": {
      "post": {
        "tags": [
          "PTOBank"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "PTOBank_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PTOBankCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PTOBankCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PTOBank"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PTOBank"
                }
              }
            }
          }
        }
      }
    },
    "/PTOBank/$adHocSchema": {
      "get": {
        "tags": [
          "PTOBank"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "PTOBank_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PTOBank"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PTOBank"
                }
              }
            }
          }
        }
      }
    },
    "/PTOBank/{ids}": {
      "get": {
        "tags": [
          "PTOBank"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "PTOBank_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PTOBank"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PTOBank"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PTOBank"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "PTOBank_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/PTOBank/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "PTOBank"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "PTOBank_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/PTOBank/{id}": {
      "get": {
        "tags": [
          "PTOBank"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "PTOBank_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PTOBank"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PTOBank"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PTOBank"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "PTOBank_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/PTOBank": {
      "get": {
        "tags": [
          "PTOBank"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "PTOBank_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PTOBank"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PTOBank"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PTOBank"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "PTOBank_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PTOBank"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PTOBank"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PTOBank"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PTOBank"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PTOBank"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PTOBank"
                }
              }
            }
          }
        }
      }
    },
    "/JournalTransaction/ReleaseJournalTransaction": {
      "post": {
        "tags": [
          "JournalTransaction"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "JournalTransaction_InvokeAction_ReleaseJournalTransaction",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseJournalTransaction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseJournalTransaction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalTransaction"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalTransaction"
                }
              }
            }
          }
        }
      }
    },
    "/JournalTransaction/{actionName}": {
      "post": {
        "tags": [
          "JournalTransaction"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "JournalTransaction_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JournalTransactionCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/JournalTransactionCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalTransaction"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalTransaction"
                }
              }
            }
          }
        }
      }
    },
    "/JournalTransaction/$adHocSchema": {
      "get": {
        "tags": [
          "JournalTransaction"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "JournalTransaction_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalTransaction"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalTransaction"
                }
              }
            }
          }
        }
      }
    },
    "/JournalTransaction/{ids}": {
      "get": {
        "tags": [
          "JournalTransaction"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "JournalTransaction_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalTransaction"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalTransaction"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "JournalTransaction"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "JournalTransaction_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/JournalTransaction/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "JournalTransaction"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "JournalTransaction_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/JournalTransaction/{id}": {
      "get": {
        "tags": [
          "JournalTransaction"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "JournalTransaction_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalTransaction"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalTransaction"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "JournalTransaction"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "JournalTransaction_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/JournalTransaction": {
      "get": {
        "tags": [
          "JournalTransaction"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "JournalTransaction_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JournalTransaction"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JournalTransaction"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "JournalTransaction"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "JournalTransaction_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JournalTransaction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/JournalTransaction"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalTransaction"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalTransaction"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalTransaction"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JournalTransaction"
                }
              }
            }
          }
        }
      }
    },
    "/Check/ReleaseCheck": {
      "post": {
        "tags": [
          "Check"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Check_InvokeAction_ReleaseCheck",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseCheck"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseCheck"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Check"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Check"
                }
              }
            }
          }
        }
      }
    },
    "/Check/VoidCheck": {
      "post": {
        "tags": [
          "Check"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Check_InvokeAction_VoidCheck",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VoidCheck"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VoidCheck"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Check"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Check"
                }
              }
            }
          }
        }
      }
    },
    "/Check/{actionName}": {
      "post": {
        "tags": [
          "Check"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Check_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Check"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Check"
                }
              }
            }
          }
        }
      }
    },
    "/Check/$adHocSchema": {
      "get": {
        "tags": [
          "Check"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "Check_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Check"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Check"
                }
              }
            }
          }
        }
      }
    },
    "/Check/{ids}": {
      "get": {
        "tags": [
          "Check"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "Check_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Check"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Check"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Check"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "Check_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/Check/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Check"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "Check_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/Check/{id}": {
      "get": {
        "tags": [
          "Check"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "Check_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Check"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Check"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Check"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "Check_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/Check": {
      "get": {
        "tags": [
          "Check"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "Check_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Check"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Check"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Check"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "Check_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Check"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Check"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Check"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Check"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Check"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Check"
                }
              }
            }
          }
        }
      }
    },
    "/AccountDetailsForPeriodInquiry/{actionName}": {
      "post": {
        "tags": [
          "AccountDetailsForPeriodInquiry"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "AccountDetailsForPeriodInquiry_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountDetailsForPeriodInquiryCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountDetailsForPeriodInquiryCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDetailsForPeriodInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDetailsForPeriodInquiry"
                }
              }
            }
          }
        }
      }
    },
    "/AccountDetailsForPeriodInquiry/$adHocSchema": {
      "get": {
        "tags": [
          "AccountDetailsForPeriodInquiry"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "AccountDetailsForPeriodInquiry_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDetailsForPeriodInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDetailsForPeriodInquiry"
                }
              }
            }
          }
        }
      }
    },
    "/AccountDetailsForPeriodInquiry/{ids}": {
      "get": {
        "tags": [
          "AccountDetailsForPeriodInquiry"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "AccountDetailsForPeriodInquiry_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDetailsForPeriodInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDetailsForPeriodInquiry"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AccountDetailsForPeriodInquiry"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "AccountDetailsForPeriodInquiry_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/AccountDetailsForPeriodInquiry/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "AccountDetailsForPeriodInquiry"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "AccountDetailsForPeriodInquiry_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/AccountDetailsForPeriodInquiry/{id}": {
      "get": {
        "tags": [
          "AccountDetailsForPeriodInquiry"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "AccountDetailsForPeriodInquiry_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDetailsForPeriodInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDetailsForPeriodInquiry"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AccountDetailsForPeriodInquiry"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "AccountDetailsForPeriodInquiry_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/AccountDetailsForPeriodInquiry": {
      "get": {
        "tags": [
          "AccountDetailsForPeriodInquiry"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "AccountDetailsForPeriodInquiry_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccountDetailsForPeriodInquiry"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccountDetailsForPeriodInquiry"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AccountDetailsForPeriodInquiry"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "AccountDetailsForPeriodInquiry_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountDetailsForPeriodInquiry"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountDetailsForPeriodInquiry"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDetailsForPeriodInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDetailsForPeriodInquiry"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDetailsForPeriodInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDetailsForPeriodInquiry"
                }
              }
            }
          }
        }
      }
    },
    "/VendorClass/{actionName}": {
      "post": {
        "tags": [
          "VendorClass"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "VendorClass_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VendorClassCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VendorClassCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorClass"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorClass"
                }
              }
            }
          }
        }
      }
    },
    "/VendorClass/$adHocSchema": {
      "get": {
        "tags": [
          "VendorClass"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "VendorClass_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorClass"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorClass"
                }
              }
            }
          }
        }
      }
    },
    "/VendorClass/{ids}": {
      "get": {
        "tags": [
          "VendorClass"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "VendorClass_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorClass"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorClass"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "VendorClass"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "VendorClass_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/VendorClass/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "VendorClass"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "VendorClass_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/VendorClass/{id}": {
      "get": {
        "tags": [
          "VendorClass"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "VendorClass_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorClass"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorClass"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "VendorClass"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "VendorClass_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/VendorClass": {
      "get": {
        "tags": [
          "VendorClass"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "VendorClass_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VendorClass"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VendorClass"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "VendorClass"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "VendorClass_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VendorClass"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VendorClass"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorClass"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorClass"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorClass"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorClass"
                }
              }
            }
          }
        }
      }
    },
    "/ShippingBox/{actionName}": {
      "post": {
        "tags": [
          "ShippingBox"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ShippingBox_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShippingBoxCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ShippingBoxCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShippingBox"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShippingBox"
                }
              }
            }
          }
        }
      }
    },
    "/ShippingBox/$adHocSchema": {
      "get": {
        "tags": [
          "ShippingBox"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "ShippingBox_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShippingBox"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShippingBox"
                }
              }
            }
          }
        }
      }
    },
    "/ShippingBox/{ids}": {
      "get": {
        "tags": [
          "ShippingBox"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "ShippingBox_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShippingBox"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShippingBox"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ShippingBox"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "ShippingBox_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/ShippingBox/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "ShippingBox"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "ShippingBox_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/ShippingBox/{id}": {
      "get": {
        "tags": [
          "ShippingBox"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "ShippingBox_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShippingBox"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShippingBox"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ShippingBox"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "ShippingBox_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/ShippingBox": {
      "get": {
        "tags": [
          "ShippingBox"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "ShippingBox_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShippingBox"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShippingBox"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ShippingBox"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "ShippingBox_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShippingBox"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ShippingBox"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShippingBox"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShippingBox"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShippingBox"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShippingBox"
                }
              }
            }
          }
        }
      }
    },
    "/CostCode/ChangeCostCodeID": {
      "post": {
        "tags": [
          "CostCode"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "CostCode_InvokeAction_ChangeCostCodeID",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeCostCodeID"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeCostCodeID"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostCode"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostCode"
                }
              }
            }
          }
        }
      }
    },
    "/CostCode/{actionName}": {
      "post": {
        "tags": [
          "CostCode"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "CostCode_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CostCodeCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CostCodeCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostCode"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostCode"
                }
              }
            }
          }
        }
      }
    },
    "/CostCode/$adHocSchema": {
      "get": {
        "tags": [
          "CostCode"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "CostCode_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostCode"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostCode"
                }
              }
            }
          }
        }
      }
    },
    "/CostCode/{ids}": {
      "get": {
        "tags": [
          "CostCode"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "CostCode_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostCode"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostCode"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CostCode"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "CostCode_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/CostCode/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "CostCode"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "CostCode_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/CostCode/{id}": {
      "get": {
        "tags": [
          "CostCode"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "CostCode_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostCode"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostCode"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CostCode"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "CostCode_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/CostCode": {
      "get": {
        "tags": [
          "CostCode"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "CostCode_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CostCode"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CostCode"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CostCode"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "CostCode_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CostCode"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CostCode"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostCode"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostCode"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostCode"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostCode"
                }
              }
            }
          }
        }
      }
    },
    "/Event/AcceptInvitationEvent": {
      "post": {
        "tags": [
          "Event"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Event_InvokeAction_AcceptInvitationEvent",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AcceptInvitationEvent"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AcceptInvitationEvent"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          }
        }
      }
    },
    "/Event/CancelActivityEvent": {
      "post": {
        "tags": [
          "Event"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Event_InvokeAction_CancelActivityEvent",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelActivityEvent"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelActivityEvent"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          }
        }
      }
    },
    "/Event/CompleteEvent": {
      "post": {
        "tags": [
          "Event"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Event_InvokeAction_CompleteEvent",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompleteEvent"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CompleteEvent"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          }
        }
      }
    },
    "/Event/ExportCardEvent": {
      "post": {
        "tags": [
          "Event"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Event_InvokeAction_ExportCardEvent",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportCardEvent"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportCardEvent"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          }
        }
      }
    },
    "/Event/RejectInvitationEvent": {
      "post": {
        "tags": [
          "Event"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Event_InvokeAction_RejectInvitationEvent",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RejectInvitationEvent"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RejectInvitationEvent"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          }
        }
      }
    },
    "/Event/InviteAllEvent": {
      "post": {
        "tags": [
          "Event"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Event_InvokeAction_InviteAllEvent",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InviteAllEvent"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InviteAllEvent"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          }
        }
      }
    },
    "/Event/InviteEvent": {
      "post": {
        "tags": [
          "Event"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Event_InvokeAction_InviteEvent",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InviteEvent"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InviteEvent"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          }
        }
      }
    },
    "/Event/{actionName}": {
      "post": {
        "tags": [
          "Event"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Event_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EventCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          }
        }
      }
    },
    "/Event/$adHocSchema": {
      "get": {
        "tags": [
          "Event"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "Event_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          }
        }
      }
    },
    "/Event/{ids}": {
      "get": {
        "tags": [
          "Event"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "Event_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Event"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "Event_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/Event/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Event"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "Event_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/Event/{id}": {
      "get": {
        "tags": [
          "Event"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "Event_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Event"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "Event_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/Event": {
      "get": {
        "tags": [
          "Event"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "Event_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Event"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "Event_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Event"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Event"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          }
        }
      }
    },
    "/Employee/ChangeEmployeeID": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Employee_InvokeAction_ChangeEmployeeID",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeEmployeeID"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeEmployeeID"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              }
            }
          }
        }
      }
    },
    "/Employee/{actionName}": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Employee_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              }
            }
          }
        }
      }
    },
    "/Employee/$adHocSchema": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "Employee_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              }
            }
          }
        }
      }
    },
    "/Employee/{ids}": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "Employee_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Employee"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "Employee_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/Employee/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Employee"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "Employee_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/Employee/{id}": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "Employee_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Employee"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "Employee_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/Employee": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "Employee_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Employee"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Employee"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Employee"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "Employee_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Employee"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Employee"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              }
            }
          }
        }
      }
    },
    "/PhysicalInventoryReview/CancelPhysicalInventory": {
      "post": {
        "tags": [
          "PhysicalInventoryReview"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "PhysicalInventoryReview_InvokeAction_CancelPhysicalInventory",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelPhysicalInventory"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelPhysicalInventory"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhysicalInventoryReview"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhysicalInventoryReview"
                }
              }
            }
          }
        }
      }
    },
    "/PhysicalInventoryReview/CompletePhysicalInventory": {
      "post": {
        "tags": [
          "PhysicalInventoryReview"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "PhysicalInventoryReview_InvokeAction_CompletePhysicalInventory",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompletePhysicalInventory"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CompletePhysicalInventory"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhysicalInventoryReview"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhysicalInventoryReview"
                }
              }
            }
          }
        }
      }
    },
    "/PhysicalInventoryReview/FinishCountingPhysicalInventory": {
      "post": {
        "tags": [
          "PhysicalInventoryReview"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "PhysicalInventoryReview_InvokeAction_FinishCountingPhysicalInventory",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinishCountingPhysicalInventory"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FinishCountingPhysicalInventory"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhysicalInventoryReview"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhysicalInventoryReview"
                }
              }
            }
          }
        }
      }
    },
    "/PhysicalInventoryReview/{actionName}": {
      "post": {
        "tags": [
          "PhysicalInventoryReview"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "PhysicalInventoryReview_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhysicalInventoryReviewCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PhysicalInventoryReviewCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhysicalInventoryReview"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhysicalInventoryReview"
                }
              }
            }
          }
        }
      }
    },
    "/PhysicalInventoryReview/$adHocSchema": {
      "get": {
        "tags": [
          "PhysicalInventoryReview"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "PhysicalInventoryReview_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhysicalInventoryReview"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhysicalInventoryReview"
                }
              }
            }
          }
        }
      }
    },
    "/PhysicalInventoryReview/{ids}": {
      "get": {
        "tags": [
          "PhysicalInventoryReview"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "PhysicalInventoryReview_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhysicalInventoryReview"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhysicalInventoryReview"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PhysicalInventoryReview"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "PhysicalInventoryReview_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/PhysicalInventoryReview/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "PhysicalInventoryReview"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "PhysicalInventoryReview_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/PhysicalInventoryReview/{id}": {
      "get": {
        "tags": [
          "PhysicalInventoryReview"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "PhysicalInventoryReview_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhysicalInventoryReview"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhysicalInventoryReview"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PhysicalInventoryReview"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "PhysicalInventoryReview_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/PhysicalInventoryReview": {
      "get": {
        "tags": [
          "PhysicalInventoryReview"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "PhysicalInventoryReview_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhysicalInventoryReview"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhysicalInventoryReview"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PhysicalInventoryReview"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "PhysicalInventoryReview_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhysicalInventoryReview"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PhysicalInventoryReview"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhysicalInventoryReview"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhysicalInventoryReview"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhysicalInventoryReview"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhysicalInventoryReview"
                }
              }
            }
          }
        }
      }
    },
    "/Subaccount/{actionName}": {
      "post": {
        "tags": [
          "Subaccount"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Subaccount_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubaccountCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SubaccountCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subaccount"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subaccount"
                }
              }
            }
          }
        }
      }
    },
    "/Subaccount/$adHocSchema": {
      "get": {
        "tags": [
          "Subaccount"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "Subaccount_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subaccount"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subaccount"
                }
              }
            }
          }
        }
      }
    },
    "/Subaccount/{ids}": {
      "get": {
        "tags": [
          "Subaccount"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "Subaccount_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subaccount"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subaccount"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Subaccount"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "Subaccount_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/Subaccount/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Subaccount"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "Subaccount_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/Subaccount/{id}": {
      "get": {
        "tags": [
          "Subaccount"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "Subaccount_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subaccount"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subaccount"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Subaccount"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "Subaccount_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/Subaccount": {
      "get": {
        "tags": [
          "Subaccount"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "Subaccount_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Subaccount"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Subaccount"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Subaccount"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "Subaccount_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Subaccount"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Subaccount"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subaccount"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subaccount"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subaccount"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subaccount"
                }
              }
            }
          }
        }
      }
    },
    "/ShopifyStore/{actionName}": {
      "post": {
        "tags": [
          "ShopifyStore"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ShopifyStore_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopifyStoreCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopifyStoreCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopifyStore"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopifyStore"
                }
              }
            }
          }
        }
      }
    },
    "/ShopifyStore/$adHocSchema": {
      "get": {
        "tags": [
          "ShopifyStore"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "ShopifyStore_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopifyStore"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopifyStore"
                }
              }
            }
          }
        }
      }
    },
    "/ShopifyStore/{ids}": {
      "get": {
        "tags": [
          "ShopifyStore"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "ShopifyStore_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopifyStore"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopifyStore"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ShopifyStore"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "ShopifyStore_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/ShopifyStore/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "ShopifyStore"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "ShopifyStore_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/ShopifyStore/{id}": {
      "get": {
        "tags": [
          "ShopifyStore"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "ShopifyStore_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopifyStore"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopifyStore"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ShopifyStore"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "ShopifyStore_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/ShopifyStore": {
      "get": {
        "tags": [
          "ShopifyStore"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "ShopifyStore_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopifyStore"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShopifyStore"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ShopifyStore"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "ShopifyStore_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopifyStore"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ShopifyStore"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopifyStore"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopifyStore"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopifyStore"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShopifyStore"
                }
              }
            }
          }
        }
      }
    },
    "/WorkCalendar/{actionName}": {
      "post": {
        "tags": [
          "WorkCalendar"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "WorkCalendar_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkCalendarCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkCalendarCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkCalendar"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkCalendar"
                }
              }
            }
          }
        }
      }
    },
    "/WorkCalendar/$adHocSchema": {
      "get": {
        "tags": [
          "WorkCalendar"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "WorkCalendar_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkCalendar"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkCalendar"
                }
              }
            }
          }
        }
      }
    },
    "/WorkCalendar/{ids}": {
      "get": {
        "tags": [
          "WorkCalendar"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "WorkCalendar_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkCalendar"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkCalendar"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WorkCalendar"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "WorkCalendar_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/WorkCalendar/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "WorkCalendar"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "WorkCalendar_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/WorkCalendar/{id}": {
      "get": {
        "tags": [
          "WorkCalendar"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "WorkCalendar_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkCalendar"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkCalendar"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WorkCalendar"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "WorkCalendar_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/WorkCalendar": {
      "get": {
        "tags": [
          "WorkCalendar"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "WorkCalendar_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkCalendar"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkCalendar"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "WorkCalendar"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "WorkCalendar_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkCalendar"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkCalendar"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkCalendar"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkCalendar"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkCalendar"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkCalendar"
                }
              }
            }
          }
        }
      }
    },
    "/Activity/CompleteActivity": {
      "post": {
        "tags": [
          "Activity"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Activity_InvokeAction_CompleteActivity",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompleteActivity"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CompleteActivity"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              }
            }
          }
        }
      }
    },
    "/Activity/{actionName}": {
      "post": {
        "tags": [
          "Activity"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Activity_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              }
            }
          }
        }
      }
    },
    "/Activity/$adHocSchema": {
      "get": {
        "tags": [
          "Activity"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "Activity_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              }
            }
          }
        }
      }
    },
    "/Activity/{ids}": {
      "get": {
        "tags": [
          "Activity"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "Activity_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Activity"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "Activity_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/Activity/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Activity"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "Activity_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/Activity/{id}": {
      "get": {
        "tags": [
          "Activity"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "Activity_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Activity"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "Activity_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/Activity": {
      "get": {
        "tags": [
          "Activity"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "Activity_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Activity"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Activity"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Activity"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "Activity_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Activity"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Activity"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              }
            }
          }
        }
      }
    },
    "/CustomerPaymentMethod/{actionName}": {
      "post": {
        "tags": [
          "CustomerPaymentMethod"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "CustomerPaymentMethod_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerPaymentMethodCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerPaymentMethodCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerPaymentMethod"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerPaymentMethod"
                }
              }
            }
          }
        }
      }
    },
    "/CustomerPaymentMethod/$adHocSchema": {
      "get": {
        "tags": [
          "CustomerPaymentMethod"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "CustomerPaymentMethod_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerPaymentMethod"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerPaymentMethod"
                }
              }
            }
          }
        }
      }
    },
    "/CustomerPaymentMethod/{ids}": {
      "get": {
        "tags": [
          "CustomerPaymentMethod"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "CustomerPaymentMethod_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerPaymentMethod"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerPaymentMethod"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CustomerPaymentMethod"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "CustomerPaymentMethod_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/CustomerPaymentMethod/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "CustomerPaymentMethod"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "CustomerPaymentMethod_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/CustomerPaymentMethod/{id}": {
      "get": {
        "tags": [
          "CustomerPaymentMethod"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "CustomerPaymentMethod_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerPaymentMethod"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerPaymentMethod"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CustomerPaymentMethod"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "CustomerPaymentMethod_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/CustomerPaymentMethod": {
      "get": {
        "tags": [
          "CustomerPaymentMethod"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "CustomerPaymentMethod_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerPaymentMethod"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerPaymentMethod"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CustomerPaymentMethod"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "CustomerPaymentMethod_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerPaymentMethod"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerPaymentMethod"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerPaymentMethod"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerPaymentMethod"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerPaymentMethod"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerPaymentMethod"
                }
              }
            }
          }
        }
      }
    },
    "/ProFormaInvoice/ReleaseProFormaInvoice": {
      "post": {
        "tags": [
          "ProFormaInvoice"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ProFormaInvoice_InvokeAction_ReleaseProFormaInvoice",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseProFormaInvoice"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseProFormaInvoice"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProFormaInvoice"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProFormaInvoice"
                }
              }
            }
          }
        }
      }
    },
    "/ProFormaInvoice/ApproveProFormaInvoice": {
      "post": {
        "tags": [
          "ProFormaInvoice"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ProFormaInvoice_InvokeAction_ApproveProFormaInvoice",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApproveProFormaInvoice"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApproveProFormaInvoice"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProFormaInvoice"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProFormaInvoice"
                }
              }
            }
          }
        }
      }
    },
    "/ProFormaInvoice/RejectProFormaInvoice": {
      "post": {
        "tags": [
          "ProFormaInvoice"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ProFormaInvoice_InvokeAction_RejectProFormaInvoice",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RejectProFormaInvoice"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RejectProFormaInvoice"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProFormaInvoice"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProFormaInvoice"
                }
              }
            }
          }
        }
      }
    },
    "/ProFormaInvoice/EmailProFormaInvoice": {
      "post": {
        "tags": [
          "ProFormaInvoice"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ProFormaInvoice_InvokeAction_EmailProFormaInvoice",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailProFormaInvoice"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailProFormaInvoice"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProFormaInvoice"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProFormaInvoice"
                }
              }
            }
          }
        }
      }
    },
    "/ProFormaInvoice/HoldProFormaInvoice": {
      "post": {
        "tags": [
          "ProFormaInvoice"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ProFormaInvoice_InvokeAction_HoldProFormaInvoice",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HoldProFormaInvoice"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HoldProFormaInvoice"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProFormaInvoice"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProFormaInvoice"
                }
              }
            }
          }
        }
      }
    },
    "/ProFormaInvoice/RemoveProFormaInvoiceFromHold": {
      "post": {
        "tags": [
          "ProFormaInvoice"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ProFormaInvoice_InvokeAction_RemoveProFormaInvoiceFromHold",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveProFormaInvoiceFromHold"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveProFormaInvoiceFromHold"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProFormaInvoice"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProFormaInvoice"
                }
              }
            }
          }
        }
      }
    },
    "/ProFormaInvoice/{actionName}": {
      "post": {
        "tags": [
          "ProFormaInvoice"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ProFormaInvoice_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProFormaInvoiceCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProFormaInvoiceCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProFormaInvoice"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProFormaInvoice"
                }
              }
            }
          }
        }
      }
    },
    "/ProFormaInvoice/$adHocSchema": {
      "get": {
        "tags": [
          "ProFormaInvoice"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "ProFormaInvoice_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProFormaInvoice"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProFormaInvoice"
                }
              }
            }
          }
        }
      }
    },
    "/ProFormaInvoice/{ids}": {
      "get": {
        "tags": [
          "ProFormaInvoice"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "ProFormaInvoice_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProFormaInvoice"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProFormaInvoice"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProFormaInvoice"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "ProFormaInvoice_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/ProFormaInvoice/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "ProFormaInvoice"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "ProFormaInvoice_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/ProFormaInvoice/{id}": {
      "get": {
        "tags": [
          "ProFormaInvoice"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "ProFormaInvoice_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProFormaInvoice"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProFormaInvoice"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProFormaInvoice"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "ProFormaInvoice_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/ProFormaInvoice": {
      "get": {
        "tags": [
          "ProFormaInvoice"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "ProFormaInvoice_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProFormaInvoice"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProFormaInvoice"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProFormaInvoice"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "ProFormaInvoice_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProFormaInvoice"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProFormaInvoice"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProFormaInvoice"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProFormaInvoice"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProFormaInvoice"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProFormaInvoice"
                }
              }
            }
          }
        }
      }
    },
    "/LotSerialClass/{actionName}": {
      "post": {
        "tags": [
          "LotSerialClass"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "LotSerialClass_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LotSerialClassCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LotSerialClassCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LotSerialClass"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LotSerialClass"
                }
              }
            }
          }
        }
      }
    },
    "/LotSerialClass/$adHocSchema": {
      "get": {
        "tags": [
          "LotSerialClass"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "LotSerialClass_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LotSerialClass"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LotSerialClass"
                }
              }
            }
          }
        }
      }
    },
    "/LotSerialClass/{ids}": {
      "get": {
        "tags": [
          "LotSerialClass"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "LotSerialClass_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LotSerialClass"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LotSerialClass"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "LotSerialClass"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "LotSerialClass_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/LotSerialClass/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "LotSerialClass"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "LotSerialClass_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/LotSerialClass/{id}": {
      "get": {
        "tags": [
          "LotSerialClass"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "LotSerialClass_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LotSerialClass"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LotSerialClass"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "LotSerialClass"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "LotSerialClass_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/LotSerialClass": {
      "get": {
        "tags": [
          "LotSerialClass"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "LotSerialClass_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LotSerialClass"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LotSerialClass"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "LotSerialClass"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "LotSerialClass_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LotSerialClass"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LotSerialClass"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LotSerialClass"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LotSerialClass"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LotSerialClass"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LotSerialClass"
                }
              }
            }
          }
        }
      }
    },
    "/StockItem/UpdateStandardCostStockItem": {
      "post": {
        "tags": [
          "StockItem"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "StockItem_InvokeAction_UpdateStandardCostStockItem",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStandardCostStockItem"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStandardCostStockItem"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockItem"
                }
              }
            }
          }
        }
      }
    },
    "/StockItem/{actionName}": {
      "post": {
        "tags": [
          "StockItem"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "StockItem_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StockItemCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StockItemCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockItem"
                }
              }
            }
          }
        }
      }
    },
    "/StockItem/$adHocSchema": {
      "get": {
        "tags": [
          "StockItem"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "StockItem_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockItem"
                }
              }
            }
          }
        }
      }
    },
    "/StockItem/{ids}": {
      "get": {
        "tags": [
          "StockItem"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "StockItem_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockItem"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "StockItem"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "StockItem_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/StockItem/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "StockItem"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "StockItem_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/StockItem/{id}": {
      "get": {
        "tags": [
          "StockItem"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "StockItem_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockItem"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "StockItem"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "StockItem_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/StockItem": {
      "get": {
        "tags": [
          "StockItem"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "StockItem_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StockItem"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "StockItem"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "StockItem_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StockItem"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StockItem"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockItem"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockItem"
                }
              }
            }
          }
        }
      }
    },
    "/StorageDetailsInquiry/{actionName}": {
      "post": {
        "tags": [
          "StorageDetailsInquiry"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "StorageDetailsInquiry_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StorageDetailsInquiryCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StorageDetailsInquiryCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageDetailsInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageDetailsInquiry"
                }
              }
            }
          }
        }
      }
    },
    "/StorageDetailsInquiry/$adHocSchema": {
      "get": {
        "tags": [
          "StorageDetailsInquiry"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "StorageDetailsInquiry_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageDetailsInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageDetailsInquiry"
                }
              }
            }
          }
        }
      }
    },
    "/StorageDetailsInquiry/{ids}": {
      "get": {
        "tags": [
          "StorageDetailsInquiry"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "StorageDetailsInquiry_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageDetailsInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageDetailsInquiry"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "StorageDetailsInquiry"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "StorageDetailsInquiry_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/StorageDetailsInquiry/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "StorageDetailsInquiry"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "StorageDetailsInquiry_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/StorageDetailsInquiry/{id}": {
      "get": {
        "tags": [
          "StorageDetailsInquiry"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "StorageDetailsInquiry_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageDetailsInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageDetailsInquiry"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "StorageDetailsInquiry"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "StorageDetailsInquiry_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/StorageDetailsInquiry": {
      "get": {
        "tags": [
          "StorageDetailsInquiry"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "StorageDetailsInquiry_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StorageDetailsInquiry"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StorageDetailsInquiry"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "StorageDetailsInquiry"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "StorageDetailsInquiry_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StorageDetailsInquiry"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StorageDetailsInquiry"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageDetailsInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageDetailsInquiry"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageDetailsInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageDetailsInquiry"
                }
              }
            }
          }
        }
      }
    },
    "/UnitsOfMeasure/{actionName}": {
      "post": {
        "tags": [
          "UnitsOfMeasure"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "UnitsOfMeasure_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnitsOfMeasureCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UnitsOfMeasureCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitsOfMeasure"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitsOfMeasure"
                }
              }
            }
          }
        }
      }
    },
    "/UnitsOfMeasure/$adHocSchema": {
      "get": {
        "tags": [
          "UnitsOfMeasure"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "UnitsOfMeasure_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitsOfMeasure"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitsOfMeasure"
                }
              }
            }
          }
        }
      }
    },
    "/UnitsOfMeasure/{ids}": {
      "get": {
        "tags": [
          "UnitsOfMeasure"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "UnitsOfMeasure_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitsOfMeasure"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitsOfMeasure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "UnitsOfMeasure"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "UnitsOfMeasure_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/UnitsOfMeasure/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "UnitsOfMeasure"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "UnitsOfMeasure_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/UnitsOfMeasure/{id}": {
      "get": {
        "tags": [
          "UnitsOfMeasure"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "UnitsOfMeasure_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitsOfMeasure"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitsOfMeasure"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "UnitsOfMeasure"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "UnitsOfMeasure_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/UnitsOfMeasure": {
      "get": {
        "tags": [
          "UnitsOfMeasure"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "UnitsOfMeasure_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnitsOfMeasure"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnitsOfMeasure"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "UnitsOfMeasure"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "UnitsOfMeasure_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnitsOfMeasure"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UnitsOfMeasure"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitsOfMeasure"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitsOfMeasure"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitsOfMeasure"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitsOfMeasure"
                }
              }
            }
          }
        }
      }
    },
    "/ChangeOrderClass/{actionName}": {
      "post": {
        "tags": [
          "ChangeOrderClass"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ChangeOrderClass_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeOrderClassCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeOrderClassCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeOrderClass"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeOrderClass"
                }
              }
            }
          }
        }
      }
    },
    "/ChangeOrderClass/$adHocSchema": {
      "get": {
        "tags": [
          "ChangeOrderClass"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "ChangeOrderClass_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeOrderClass"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeOrderClass"
                }
              }
            }
          }
        }
      }
    },
    "/ChangeOrderClass/{ids}": {
      "get": {
        "tags": [
          "ChangeOrderClass"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "ChangeOrderClass_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeOrderClass"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeOrderClass"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ChangeOrderClass"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "ChangeOrderClass_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/ChangeOrderClass/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "ChangeOrderClass"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "ChangeOrderClass_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/ChangeOrderClass/{id}": {
      "get": {
        "tags": [
          "ChangeOrderClass"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "ChangeOrderClass_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeOrderClass"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeOrderClass"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ChangeOrderClass"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "ChangeOrderClass_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/ChangeOrderClass": {
      "get": {
        "tags": [
          "ChangeOrderClass"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "ChangeOrderClass_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChangeOrderClass"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChangeOrderClass"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ChangeOrderClass"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "ChangeOrderClass_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeOrderClass"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeOrderClass"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeOrderClass"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeOrderClass"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeOrderClass"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeOrderClass"
                }
              }
            }
          }
        }
      }
    },
    "/ProjectTransaction/ReleaseTransactions": {
      "post": {
        "tags": [
          "ProjectTransaction"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ProjectTransaction_InvokeAction_ReleaseTransactions",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseTransactions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseTransactions"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTransaction"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTransaction"
                }
              }
            }
          }
        }
      }
    },
    "/ProjectTransaction/{actionName}": {
      "post": {
        "tags": [
          "ProjectTransaction"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ProjectTransaction_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectTransactionCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectTransactionCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTransaction"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTransaction"
                }
              }
            }
          }
        }
      }
    },
    "/ProjectTransaction/$adHocSchema": {
      "get": {
        "tags": [
          "ProjectTransaction"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "ProjectTransaction_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTransaction"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTransaction"
                }
              }
            }
          }
        }
      }
    },
    "/ProjectTransaction/{ids}": {
      "get": {
        "tags": [
          "ProjectTransaction"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "ProjectTransaction_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTransaction"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTransaction"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProjectTransaction"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "ProjectTransaction_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/ProjectTransaction/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "ProjectTransaction"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "ProjectTransaction_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/ProjectTransaction/{id}": {
      "get": {
        "tags": [
          "ProjectTransaction"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "ProjectTransaction_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTransaction"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTransaction"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProjectTransaction"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "ProjectTransaction_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/ProjectTransaction": {
      "get": {
        "tags": [
          "ProjectTransaction"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "ProjectTransaction_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectTransaction"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectTransaction"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProjectTransaction"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "ProjectTransaction_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectTransaction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectTransaction"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTransaction"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTransaction"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTransaction"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTransaction"
                }
              }
            }
          }
        }
      }
    },
    "/DiscountCode/{actionName}": {
      "post": {
        "tags": [
          "DiscountCode"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "DiscountCode_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscountCodeCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscountCodeCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscountCode"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscountCode"
                }
              }
            }
          }
        }
      }
    },
    "/DiscountCode/$adHocSchema": {
      "get": {
        "tags": [
          "DiscountCode"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "DiscountCode_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscountCode"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscountCode"
                }
              }
            }
          }
        }
      }
    },
    "/DiscountCode/{ids}": {
      "get": {
        "tags": [
          "DiscountCode"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "DiscountCode_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscountCode"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscountCode"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DiscountCode"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "DiscountCode_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/DiscountCode/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "DiscountCode"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "DiscountCode_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/DiscountCode/{id}": {
      "get": {
        "tags": [
          "DiscountCode"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "DiscountCode_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscountCode"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscountCode"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DiscountCode"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "DiscountCode_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/DiscountCode": {
      "get": {
        "tags": [
          "DiscountCode"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "DiscountCode_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiscountCode"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DiscountCode"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "DiscountCode"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "DiscountCode_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscountCode"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscountCode"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscountCode"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscountCode"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscountCode"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscountCode"
                }
              }
            }
          }
        }
      }
    },
    "/PayPeriod/{actionName}": {
      "post": {
        "tags": [
          "PayPeriod"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "PayPeriod_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayPeriodCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PayPeriodCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayPeriod"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayPeriod"
                }
              }
            }
          }
        }
      }
    },
    "/PayPeriod/$adHocSchema": {
      "get": {
        "tags": [
          "PayPeriod"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "PayPeriod_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayPeriod"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayPeriod"
                }
              }
            }
          }
        }
      }
    },
    "/PayPeriod/{ids}": {
      "get": {
        "tags": [
          "PayPeriod"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "PayPeriod_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayPeriod"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayPeriod"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PayPeriod"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "PayPeriod_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/PayPeriod/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "PayPeriod"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "PayPeriod_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/PayPeriod/{id}": {
      "get": {
        "tags": [
          "PayPeriod"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "PayPeriod_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayPeriod"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayPeriod"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PayPeriod"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "PayPeriod_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/PayPeriod": {
      "get": {
        "tags": [
          "PayPeriod"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "PayPeriod_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PayPeriod"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PayPeriod"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PayPeriod"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "PayPeriod_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayPeriod"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PayPeriod"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayPeriod"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayPeriod"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayPeriod"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PayPeriod"
                }
              }
            }
          }
        }
      }
    },
    "/ItemWarehouse/{actionName}": {
      "post": {
        "tags": [
          "ItemWarehouse"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ItemWarehouse_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemWarehouseCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemWarehouseCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemWarehouse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemWarehouse"
                }
              }
            }
          }
        }
      }
    },
    "/ItemWarehouse/$adHocSchema": {
      "get": {
        "tags": [
          "ItemWarehouse"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "ItemWarehouse_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemWarehouse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemWarehouse"
                }
              }
            }
          }
        }
      }
    },
    "/ItemWarehouse/{ids}": {
      "get": {
        "tags": [
          "ItemWarehouse"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "ItemWarehouse_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemWarehouse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemWarehouse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ItemWarehouse"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "ItemWarehouse_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/ItemWarehouse/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "ItemWarehouse"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "ItemWarehouse_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/ItemWarehouse/{id}": {
      "get": {
        "tags": [
          "ItemWarehouse"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "ItemWarehouse_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemWarehouse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemWarehouse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ItemWarehouse"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "ItemWarehouse_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/ItemWarehouse": {
      "get": {
        "tags": [
          "ItemWarehouse"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "ItemWarehouse_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemWarehouse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemWarehouse"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ItemWarehouse"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "ItemWarehouse_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemWarehouse"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemWarehouse"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemWarehouse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemWarehouse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemWarehouse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemWarehouse"
                }
              }
            }
          }
        }
      }
    },
    "/SalesOrder/CancelSalesOrder": {
      "post": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "SalesOrder_InvokeAction_CancelSalesOrder",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelSalesOrder"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelSalesOrder"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOrder"
                }
              }
            }
          }
        }
      }
    },
    "/SalesOrder/ReopenSalesOrder": {
      "post": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "SalesOrder_InvokeAction_ReopenSalesOrder",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReopenSalesOrder"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReopenSalesOrder"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOrder"
                }
              }
            }
          }
        }
      }
    },
    "/SalesOrder/PrepareSalesInvoice": {
      "post": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "SalesOrder_InvokeAction_PrepareSalesInvoice",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrepareSalesInvoice"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PrepareSalesInvoice"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOrder"
                }
              }
            }
          }
        }
      }
    },
    "/SalesOrder/OpenSalesOrder": {
      "post": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "SalesOrder_InvokeAction_OpenSalesOrder",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OpenSalesOrder"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OpenSalesOrder"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOrder"
                }
              }
            }
          }
        }
      }
    },
    "/SalesOrder/ReleaseFromCreditHoldSalesOrder": {
      "post": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "SalesOrder_InvokeAction_ReleaseFromCreditHoldSalesOrder",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseFromCreditHoldSalesOrder"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseFromCreditHoldSalesOrder"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOrder"
                }
              }
            }
          }
        }
      }
    },
    "/SalesOrder/SalesOrderCreateReceipt": {
      "post": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "SalesOrder_InvokeAction_SalesOrderCreateReceipt",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesOrderCreateReceipt"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesOrderCreateReceipt"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOrder"
                }
              }
            }
          }
        }
      }
    },
    "/SalesOrder/SalesOrderCreateShipment": {
      "post": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "SalesOrder_InvokeAction_SalesOrderCreateShipment",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesOrderCreateShipment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesOrderCreateShipment"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOrder"
                }
              }
            }
          }
        }
      }
    },
    "/SalesOrder/AutoRecalculateDiscounts": {
      "post": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "SalesOrder_InvokeAction_AutoRecalculateDiscounts",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutoRecalculateDiscounts"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AutoRecalculateDiscounts"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOrder"
                }
              }
            }
          }
        }
      }
    },
    "/SalesOrder/RecalculatePricesDiscounts": {
      "post": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "SalesOrder_InvokeAction_RecalculatePricesDiscounts",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecalculatePricesDiscounts"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RecalculatePricesDiscounts"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOrder"
                }
              }
            }
          }
        }
      }
    },
    "/SalesOrder/{actionName}": {
      "post": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "SalesOrder_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesOrderCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesOrderCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOrder"
                }
              }
            }
          }
        }
      }
    },
    "/SalesOrder/$adHocSchema": {
      "get": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "SalesOrder_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOrder"
                }
              }
            }
          }
        }
      }
    },
    "/SalesOrder/{ids}": {
      "get": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "SalesOrder_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOrder"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "SalesOrder_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/SalesOrder/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "SalesOrder_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/SalesOrder/{id}": {
      "get": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "SalesOrder_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOrder"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "SalesOrder_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/SalesOrder": {
      "get": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "SalesOrder_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesOrder"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesOrder"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SalesOrder"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "SalesOrder_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesOrder"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesOrder"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOrder"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOrder"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesOrder"
                }
              }
            }
          }
        }
      }
    },
    "/InventoryReceipt/ReleaseInventoryReceipt": {
      "post": {
        "tags": [
          "InventoryReceipt"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "InventoryReceipt_InvokeAction_ReleaseInventoryReceipt",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseInventoryReceipt"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseInventoryReceipt"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryReceipt"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryReceipt"
                }
              }
            }
          }
        }
      }
    },
    "/InventoryReceipt/{actionName}": {
      "post": {
        "tags": [
          "InventoryReceipt"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "InventoryReceipt_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryReceiptCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryReceiptCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryReceipt"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryReceipt"
                }
              }
            }
          }
        }
      }
    },
    "/InventoryReceipt/$adHocSchema": {
      "get": {
        "tags": [
          "InventoryReceipt"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "InventoryReceipt_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryReceipt"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryReceipt"
                }
              }
            }
          }
        }
      }
    },
    "/InventoryReceipt/{ids}": {
      "get": {
        "tags": [
          "InventoryReceipt"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "InventoryReceipt_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryReceipt"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryReceipt"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "InventoryReceipt"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "InventoryReceipt_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/InventoryReceipt/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "InventoryReceipt"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "InventoryReceipt_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/InventoryReceipt/{id}": {
      "get": {
        "tags": [
          "InventoryReceipt"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "InventoryReceipt_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryReceipt"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryReceipt"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "InventoryReceipt"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "InventoryReceipt_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/InventoryReceipt": {
      "get": {
        "tags": [
          "InventoryReceipt"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "InventoryReceipt_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InventoryReceipt"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InventoryReceipt"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "InventoryReceipt"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "InventoryReceipt_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryReceipt"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryReceipt"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryReceipt"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryReceipt"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryReceipt"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryReceipt"
                }
              }
            }
          }
        }
      }
    },
    "/Tax/{actionName}": {
      "post": {
        "tags": [
          "Tax"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Tax_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tax"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tax"
                }
              }
            }
          }
        }
      }
    },
    "/Tax/$adHocSchema": {
      "get": {
        "tags": [
          "Tax"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "Tax_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tax"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tax"
                }
              }
            }
          }
        }
      }
    },
    "/Tax/{ids}": {
      "get": {
        "tags": [
          "Tax"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "Tax_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tax"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tax"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tax"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "Tax_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/Tax/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Tax"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "Tax_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/Tax/{id}": {
      "get": {
        "tags": [
          "Tax"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "Tax_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tax"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tax"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tax"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "Tax_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/Tax": {
      "get": {
        "tags": [
          "Tax"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "Tax_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tax"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tax"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Tax"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "Tax_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tax"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Tax"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tax"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tax"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tax"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tax"
                }
              }
            }
          }
        }
      }
    },
    "/ItemSalesCategory/{actionName}": {
      "post": {
        "tags": [
          "ItemSalesCategory"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ItemSalesCategory_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemSalesCategoryCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemSalesCategoryCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemSalesCategory"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemSalesCategory"
                }
              }
            }
          }
        }
      }
    },
    "/ItemSalesCategory/$adHocSchema": {
      "get": {
        "tags": [
          "ItemSalesCategory"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "ItemSalesCategory_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemSalesCategory"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemSalesCategory"
                }
              }
            }
          }
        }
      }
    },
    "/ItemSalesCategory/{ids}": {
      "get": {
        "tags": [
          "ItemSalesCategory"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "ItemSalesCategory_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemSalesCategory"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemSalesCategory"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ItemSalesCategory"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "ItemSalesCategory_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/ItemSalesCategory/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "ItemSalesCategory"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "ItemSalesCategory_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/ItemSalesCategory/{id}": {
      "get": {
        "tags": [
          "ItemSalesCategory"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "ItemSalesCategory_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemSalesCategory"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemSalesCategory"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ItemSalesCategory"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "ItemSalesCategory_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/ItemSalesCategory": {
      "get": {
        "tags": [
          "ItemSalesCategory"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "ItemSalesCategory_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemSalesCategory"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemSalesCategory"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ItemSalesCategory"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "ItemSalesCategory_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemSalesCategory"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemSalesCategory"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemSalesCategory"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemSalesCategory"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemSalesCategory"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemSalesCategory"
                }
              }
            }
          }
        }
      }
    },
    "/CustomerLocation/{actionName}": {
      "post": {
        "tags": [
          "CustomerLocation"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "CustomerLocation_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerLocationCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerLocationCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerLocation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerLocation"
                }
              }
            }
          }
        }
      }
    },
    "/CustomerLocation/$adHocSchema": {
      "get": {
        "tags": [
          "CustomerLocation"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "CustomerLocation_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerLocation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerLocation"
                }
              }
            }
          }
        }
      }
    },
    "/CustomerLocation/{ids}": {
      "get": {
        "tags": [
          "CustomerLocation"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "CustomerLocation_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerLocation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerLocation"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CustomerLocation"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "CustomerLocation_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/CustomerLocation/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "CustomerLocation"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "CustomerLocation_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/CustomerLocation/{id}": {
      "get": {
        "tags": [
          "CustomerLocation"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "CustomerLocation_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerLocation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerLocation"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CustomerLocation"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "CustomerLocation_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/CustomerLocation": {
      "get": {
        "tags": [
          "CustomerLocation"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "CustomerLocation_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerLocation"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerLocation"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CustomerLocation"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "CustomerLocation_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerLocation"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerLocation"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerLocation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerLocation"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerLocation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerLocation"
                }
              }
            }
          }
        }
      }
    },
    "/TimeEntry/CompleteTimeEntry": {
      "post": {
        "tags": [
          "TimeEntry"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "TimeEntry_InvokeAction_CompleteTimeEntry",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompleteTimeEntry"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CompleteTimeEntry"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeEntry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeEntry"
                }
              }
            }
          }
        }
      }
    },
    "/TimeEntry/OpenTimeEntry": {
      "post": {
        "tags": [
          "TimeEntry"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "TimeEntry_InvokeAction_OpenTimeEntry",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OpenTimeEntry"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OpenTimeEntry"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeEntry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeEntry"
                }
              }
            }
          }
        }
      }
    },
    "/TimeEntry/{actionName}": {
      "post": {
        "tags": [
          "TimeEntry"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "TimeEntry_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TimeEntryCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TimeEntryCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeEntry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeEntry"
                }
              }
            }
          }
        }
      }
    },
    "/TimeEntry/$adHocSchema": {
      "get": {
        "tags": [
          "TimeEntry"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "TimeEntry_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeEntry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeEntry"
                }
              }
            }
          }
        }
      }
    },
    "/TimeEntry/{ids}": {
      "get": {
        "tags": [
          "TimeEntry"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "TimeEntry_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeEntry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeEntry"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TimeEntry"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "TimeEntry_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/TimeEntry/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "TimeEntry"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "TimeEntry_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/TimeEntry/{id}": {
      "get": {
        "tags": [
          "TimeEntry"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "TimeEntry_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeEntry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeEntry"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TimeEntry"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "TimeEntry_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/TimeEntry": {
      "get": {
        "tags": [
          "TimeEntry"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "TimeEntry_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TimeEntry"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TimeEntry"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "TimeEntry"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "TimeEntry_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TimeEntry"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TimeEntry"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeEntry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeEntry"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeEntry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeEntry"
                }
              }
            }
          }
        }
      }
    },
    "/VendorPriceWorksheet/ReleaseVendorPriceWorksheet": {
      "post": {
        "tags": [
          "VendorPriceWorksheet"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "VendorPriceWorksheet_InvokeAction_ReleaseVendorPriceWorksheet",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseVendorPriceWorksheet"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseVendorPriceWorksheet"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorPriceWorksheet"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorPriceWorksheet"
                }
              }
            }
          }
        }
      }
    },
    "/VendorPriceWorksheet/{actionName}": {
      "post": {
        "tags": [
          "VendorPriceWorksheet"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "VendorPriceWorksheet_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VendorPriceWorksheetCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VendorPriceWorksheetCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorPriceWorksheet"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorPriceWorksheet"
                }
              }
            }
          }
        }
      }
    },
    "/VendorPriceWorksheet/$adHocSchema": {
      "get": {
        "tags": [
          "VendorPriceWorksheet"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "VendorPriceWorksheet_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorPriceWorksheet"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorPriceWorksheet"
                }
              }
            }
          }
        }
      }
    },
    "/VendorPriceWorksheet/{ids}": {
      "get": {
        "tags": [
          "VendorPriceWorksheet"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "VendorPriceWorksheet_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorPriceWorksheet"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorPriceWorksheet"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "VendorPriceWorksheet"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "VendorPriceWorksheet_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/VendorPriceWorksheet/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "VendorPriceWorksheet"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "VendorPriceWorksheet_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/VendorPriceWorksheet/{id}": {
      "get": {
        "tags": [
          "VendorPriceWorksheet"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "VendorPriceWorksheet_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorPriceWorksheet"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorPriceWorksheet"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "VendorPriceWorksheet"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "VendorPriceWorksheet_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/VendorPriceWorksheet": {
      "get": {
        "tags": [
          "VendorPriceWorksheet"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "VendorPriceWorksheet_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VendorPriceWorksheet"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VendorPriceWorksheet"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "VendorPriceWorksheet"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "VendorPriceWorksheet_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VendorPriceWorksheet"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VendorPriceWorksheet"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorPriceWorksheet"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorPriceWorksheet"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorPriceWorksheet"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorPriceWorksheet"
                }
              }
            }
          }
        }
      }
    },
    "/ShippingTerm/{actionName}": {
      "post": {
        "tags": [
          "ShippingTerm"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "ShippingTerm_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShippingTermCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ShippingTermCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShippingTerm"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShippingTerm"
                }
              }
            }
          }
        }
      }
    },
    "/ShippingTerm/$adHocSchema": {
      "get": {
        "tags": [
          "ShippingTerm"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "ShippingTerm_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShippingTerm"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShippingTerm"
                }
              }
            }
          }
        }
      }
    },
    "/ShippingTerm/{ids}": {
      "get": {
        "tags": [
          "ShippingTerm"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "ShippingTerm_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShippingTerm"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShippingTerm"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ShippingTerm"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "ShippingTerm_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/ShippingTerm/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "ShippingTerm"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "ShippingTerm_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/ShippingTerm/{id}": {
      "get": {
        "tags": [
          "ShippingTerm"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "ShippingTerm_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShippingTerm"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShippingTerm"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ShippingTerm"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "ShippingTerm_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/ShippingTerm": {
      "get": {
        "tags": [
          "ShippingTerm"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "ShippingTerm_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShippingTerm"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ShippingTerm"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ShippingTerm"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "ShippingTerm_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShippingTerm"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ShippingTerm"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShippingTerm"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShippingTerm"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShippingTerm"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShippingTerm"
                }
              }
            }
          }
        }
      }
    },
    "/BigCommerceStores/{actionName}": {
      "post": {
        "tags": [
          "BigCommerceStores"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "BigCommerceStores_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BigCommerceStoresCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BigCommerceStoresCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BigCommerceStores"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BigCommerceStores"
                }
              }
            }
          }
        }
      }
    },
    "/BigCommerceStores/$adHocSchema": {
      "get": {
        "tags": [
          "BigCommerceStores"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "BigCommerceStores_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BigCommerceStores"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BigCommerceStores"
                }
              }
            }
          }
        }
      }
    },
    "/BigCommerceStores/{ids}": {
      "get": {
        "tags": [
          "BigCommerceStores"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "BigCommerceStores_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BigCommerceStores"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BigCommerceStores"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BigCommerceStores"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "BigCommerceStores_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/BigCommerceStores/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "BigCommerceStores"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "BigCommerceStores_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/BigCommerceStores/{id}": {
      "get": {
        "tags": [
          "BigCommerceStores"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "BigCommerceStores_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BigCommerceStores"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BigCommerceStores"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BigCommerceStores"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "BigCommerceStores_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/BigCommerceStores": {
      "get": {
        "tags": [
          "BigCommerceStores"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "BigCommerceStores_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BigCommerceStores"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BigCommerceStores"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "BigCommerceStores"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "BigCommerceStores_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BigCommerceStores"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BigCommerceStores"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BigCommerceStores"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BigCommerceStores"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BigCommerceStores"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BigCommerceStores"
                }
              }
            }
          }
        }
      }
    },
    "/UnionLocal/{actionName}": {
      "post": {
        "tags": [
          "UnionLocal"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "UnionLocal_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnionLocalCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UnionLocalCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnionLocal"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnionLocal"
                }
              }
            }
          }
        }
      }
    },
    "/UnionLocal/$adHocSchema": {
      "get": {
        "tags": [
          "UnionLocal"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "UnionLocal_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnionLocal"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnionLocal"
                }
              }
            }
          }
        }
      }
    },
    "/UnionLocal/{ids}": {
      "get": {
        "tags": [
          "UnionLocal"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "UnionLocal_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnionLocal"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnionLocal"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "UnionLocal"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "UnionLocal_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/UnionLocal/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "UnionLocal"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "UnionLocal_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/UnionLocal/{id}": {
      "get": {
        "tags": [
          "UnionLocal"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "UnionLocal_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnionLocal"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnionLocal"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "UnionLocal"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "UnionLocal_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/UnionLocal": {
      "get": {
        "tags": [
          "UnionLocal"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "UnionLocal_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnionLocal"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnionLocal"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "UnionLocal"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "UnionLocal_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnionLocal"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UnionLocal"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnionLocal"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnionLocal"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnionLocal"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnionLocal"
                }
              }
            }
          }
        }
      }
    },
    "/CustomerPriceClass/{actionName}": {
      "post": {
        "tags": [
          "CustomerPriceClass"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "CustomerPriceClass_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerPriceClassCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerPriceClassCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerPriceClass"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerPriceClass"
                }
              }
            }
          }
        }
      }
    },
    "/CustomerPriceClass/$adHocSchema": {
      "get": {
        "tags": [
          "CustomerPriceClass"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "CustomerPriceClass_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerPriceClass"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerPriceClass"
                }
              }
            }
          }
        }
      }
    },
    "/CustomerPriceClass/{ids}": {
      "get": {
        "tags": [
          "CustomerPriceClass"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "CustomerPriceClass_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerPriceClass"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerPriceClass"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CustomerPriceClass"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "CustomerPriceClass_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/CustomerPriceClass/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "CustomerPriceClass"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "CustomerPriceClass_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/CustomerPriceClass/{id}": {
      "get": {
        "tags": [
          "CustomerPriceClass"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "CustomerPriceClass_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerPriceClass"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerPriceClass"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CustomerPriceClass"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "CustomerPriceClass_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/CustomerPriceClass": {
      "get": {
        "tags": [
          "CustomerPriceClass"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "CustomerPriceClass_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerPriceClass"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerPriceClass"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CustomerPriceClass"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "CustomerPriceClass_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerPriceClass"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerPriceClass"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerPriceClass"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerPriceClass"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerPriceClass"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerPriceClass"
                }
              }
            }
          }
        }
      }
    },
    "/Ledger/{actionName}": {
      "post": {
        "tags": [
          "Ledger"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Ledger_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LedgerCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LedgerCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ledger"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ledger"
                }
              }
            }
          }
        }
      }
    },
    "/Ledger/$adHocSchema": {
      "get": {
        "tags": [
          "Ledger"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "Ledger_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ledger"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ledger"
                }
              }
            }
          }
        }
      }
    },
    "/Ledger/{ids}": {
      "get": {
        "tags": [
          "Ledger"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "Ledger_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ledger"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ledger"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Ledger"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "Ledger_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/Ledger/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Ledger"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "Ledger_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/Ledger/{id}": {
      "get": {
        "tags": [
          "Ledger"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "Ledger_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ledger"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ledger"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Ledger"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "Ledger_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/Ledger": {
      "get": {
        "tags": [
          "Ledger"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "Ledger_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ledger"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ledger"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Ledger"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "Ledger_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ledger"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ledger"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ledger"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ledger"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ledger"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ledger"
                }
              }
            }
          }
        }
      }
    },
    "/InventoryAllocationInquiry/{actionName}": {
      "post": {
        "tags": [
          "InventoryAllocationInquiry"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "InventoryAllocationInquiry_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryAllocationInquiryCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryAllocationInquiryCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryAllocationInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryAllocationInquiry"
                }
              }
            }
          }
        }
      }
    },
    "/InventoryAllocationInquiry/$adHocSchema": {
      "get": {
        "tags": [
          "InventoryAllocationInquiry"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "InventoryAllocationInquiry_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryAllocationInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryAllocationInquiry"
                }
              }
            }
          }
        }
      }
    },
    "/InventoryAllocationInquiry/{ids}": {
      "get": {
        "tags": [
          "InventoryAllocationInquiry"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "InventoryAllocationInquiry_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryAllocationInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryAllocationInquiry"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "InventoryAllocationInquiry"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "InventoryAllocationInquiry_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/InventoryAllocationInquiry/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "InventoryAllocationInquiry"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "InventoryAllocationInquiry_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/InventoryAllocationInquiry/{id}": {
      "get": {
        "tags": [
          "InventoryAllocationInquiry"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "InventoryAllocationInquiry_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryAllocationInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryAllocationInquiry"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "InventoryAllocationInquiry"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "InventoryAllocationInquiry_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/InventoryAllocationInquiry": {
      "get": {
        "tags": [
          "InventoryAllocationInquiry"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "InventoryAllocationInquiry_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InventoryAllocationInquiry"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InventoryAllocationInquiry"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "InventoryAllocationInquiry"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "InventoryAllocationInquiry_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryAllocationInquiry"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryAllocationInquiry"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryAllocationInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryAllocationInquiry"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryAllocationInquiry"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryAllocationInquiry"
                }
              }
            }
          }
        }
      }
    },
    "/CustomerClass/{actionName}": {
      "post": {
        "tags": [
          "CustomerClass"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "CustomerClass_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerClassCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerClassCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerClass"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerClass"
                }
              }
            }
          }
        }
      }
    },
    "/CustomerClass/$adHocSchema": {
      "get": {
        "tags": [
          "CustomerClass"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "CustomerClass_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerClass"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerClass"
                }
              }
            }
          }
        }
      }
    },
    "/CustomerClass/{ids}": {
      "get": {
        "tags": [
          "CustomerClass"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "CustomerClass_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerClass"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerClass"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CustomerClass"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "CustomerClass_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/CustomerClass/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "CustomerClass"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "CustomerClass_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/CustomerClass/{id}": {
      "get": {
        "tags": [
          "CustomerClass"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "CustomerClass_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerClass"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerClass"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CustomerClass"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "CustomerClass_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/CustomerClass": {
      "get": {
        "tags": [
          "CustomerClass"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "CustomerClass_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerClass"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerClass"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CustomerClass"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "CustomerClass_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerClass"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerClass"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerClass"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerClass"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerClass"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerClass"
                }
              }
            }
          }
        }
      }
    },
    "/Task/CompleteTask": {
      "post": {
        "tags": [
          "Task"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Task_InvokeAction_CompleteTask",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompleteTask"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CompleteTask"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          }
        }
      }
    },
    "/Task/CancelActivityTask": {
      "post": {
        "tags": [
          "Task"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Task_InvokeAction_CancelActivityTask",
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelActivityTask"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelActivityTask"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          }
        }
      }
    },
    "/Task/{actionName}": {
      "post": {
        "tags": [
          "Task"
        ],
        "summary": "Performs an action in the system.",
        "operationId": "Task_InvokeAction_CustomAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/actionName"
          }
        ],
        "requestBody": {
          "description": "The record to which the action should be applied and the parameters of the action.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskCustomAction"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskCustomAction"
              }
            }
          },
          "required": true,
          "x-bodyName": "invocation"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/InvokeAction_204"
          },
          "202": {
            "$ref": "#/components/responses/InvokeAction_202"
          },
          "400": {
            "$ref": "#/components/responses/InvokeAction_400"
          },
          "412": {
            "$ref": "#/components/responses/InvokeAction_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          }
        }
      }
    },
    "/Task/$adHocSchema": {
      "get": {
        "tags": [
          "Task"
        ],
        "summary": "Retrieves the schema of custom fields of the entity from the system.",
        "operationId": "Task_GetAdHocSchema",
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The field name, view name, and type of the fields that are not defined in the contract of the endpoint for this entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          }
        }
      }
    },
    "/Task/{ids}": {
      "get": {
        "tags": [
          "Task"
        ],
        "summary": "Retrieves a record by the values of its key fields from the system.",
        "operationId": "Task_GetByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Task"
        ],
        "summary": "Deletes the record by the values of its key fields.",
        "operationId": "Task_DeleteByKeys",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteByKeys_204"
          }
        }
      }
    },
    "/Task/{ids}/files/{filename}": {
      "put": {
        "tags": [
          "Task"
        ],
        "summary": "Attaches a file to a record.",
        "operationId": "Task_PutFile",
        "parameters": [
          {
            "$ref": "#/components/parameters/ids"
          },
          {
            "$ref": "#/components/parameters/filename"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/PutFile_204"
          }
        }
      }
    },
    "/Task/{id}": {
      "get": {
        "tags": [
          "Task"
        ],
        "summary": "Retrieves a record by the value of the session entity ID from the system.",
        "operationId": "Task_GetById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The requested record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Task"
        ],
        "summary": "Deletes the record by its session identifier.",
        "operationId": "Task_DeleteById",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "204": {
            "$ref": "#/components/responses/DeleteById_204"
          }
        }
      }
    },
    "/Task": {
      "get": {
        "tags": [
          "Task"
        ],
        "summary": "Retrieves records that satisfy the specified conditions from the system.",
        "operationId": "Task_GetList",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/top"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The list of records that satisfy the specified conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Task"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Task"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Task"
        ],
        "summary": "Creates a record or updates an existing record.",
        "operationId": "Task_PutEntity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/expand"
          },
          {
            "$ref": "#/components/parameters/custom"
          }
        ],
        "requestBody": {
          "description": "The record to be passed to the system.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Task"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Task"
              }
            }
          },
          "required": true,
          "x-bodyName": "entity"
        },
        "responses": {
          "401": {
            "$ref": "#/components/responses/ContractBasedControllerBase_401"
          },
          "500": {
            "$ref": "#/components/responses/ContractBasedControllerBase_500"
          },
          "200": {
            "description": "The created or updated record.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/PutEntity_400"
          },
          "412": {
            "$ref": "#/components/responses/PutEntity_412"
          },
          "422": {
            "description": "The data specified in the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ACAInfoDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "CoverageType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "HealthPlanType": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ACAInformation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ACAInfoDetails": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ACAInfoDetail"
                }
              },
              "MinIndividualContribution": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "AcceptInvitationEvent": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Event"
          }
        }
      },
      "Account": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AccountCD": {
                "$ref": "#/components/schemas/StringValue"
              },
              "AccountClass": {
                "$ref": "#/components/schemas/StringValue"
              },
              "AccountGroup": {
                "$ref": "#/components/schemas/StringValue"
              },
              "AccountID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Active": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "CashAccount": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ChartOfAccountsOrder": {
                "$ref": "#/components/schemas/IntValue"
              },
              "ConsolidationAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CreatedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "CurrencyID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "PostOption": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RequireUnits": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "RevaluationRateType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Secured": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "TaxCategory": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Type": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UseDefaultSubaccount": {
                "$ref": "#/components/schemas/BooleanValue"
              }
            }
          }
        ]
      },
      "AccountCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Account"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "AccountDetailsForPeriodInquiry": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "FromPeriod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Ledger": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Results": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountDetailsForPeriodInquiryDetail"
                }
              },
              "ToPeriod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "IncludeUnposted": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "IncludeUnreleased": {
                "$ref": "#/components/schemas/BooleanValue"
              }
            }
          }
        ]
      },
      "AccountDetailsForPeriodInquiryCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/AccountDetailsForPeriodInquiry"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "AccountDetailsForPeriodInquiryDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Account": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BatchNumber": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Branch": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CreditAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CreditAmountInBaseCurrency": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Currency": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CustomerVendor": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DebitAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "DebitAmountInBaseCurrency": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Ledger": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Module": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PeriodID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Project": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProjectTask": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RefNumber": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TransactionDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "TransactionDescription": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TransactionType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Posted": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Released": {
                "$ref": "#/components/schemas/BooleanValue"
              }
            }
          }
        ]
      },
      "AccountGroup": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AccountGroupID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Active": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Attributes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AttributeValue"
                }
              },
              "DefaultAccountID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Expense": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "SortOrder": {
                "$ref": "#/components/schemas/ShortValue"
              },
              "Type": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "AccountGroupCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/AccountGroup"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "AccountSummaryInquiry": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AccountClass": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Branch": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Ledger": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Period": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Results": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AccountSummaryRow"
                }
              },
              "Subaccount": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "AccountSummaryInquiryCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/AccountSummaryInquiry"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "AccountSummaryRow": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Account": {
                "$ref": "#/components/schemas/StringValue"
              },
              "AccountClass": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BeginningBalance": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Branch": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ConsolidationAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CreditTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CurrencyBeginningBalance": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CurrencyCreditTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CurrencyDebitTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CurrencyEndingBalance": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CurrencyID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CurrencyPtdTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "DebitTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EndingBalance": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "LastActivity": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LedgerID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "PtdTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Subaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Type": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ActivateProject": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Project"
          }
        }
      },
      "ActivateProjectTask": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ProjectTask"
          }
        }
      },
      "ActivateProjectTemplate": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ProjectTemplate"
          }
        }
      },
      "Activity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Body": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Date": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Internal": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "NoteID": {
                "$ref": "#/components/schemas/GuidValue"
              },
              "Owner": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Summary": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Task": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TimeActivity": {
                "$ref": "#/components/schemas/TimeActivity"
              },
              "Type": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Workgroup": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CreatedByID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CreatedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "RelatedEntityType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RelatedEntityNoteID": {
                "$ref": "#/components/schemas/GuidValue"
              },
              "RelatedEntityDescription": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ActivityCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Activity"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "ActivityDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Billable": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Overtime": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BillableOvertime": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BillableTime": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Category": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CostCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CreatedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "CreatedByID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "NoteID": {
                "$ref": "#/components/schemas/GuidValue"
              },
              "Owner": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Project": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProjectTask": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RefNoteID": {
                "$ref": "#/components/schemas/GuidValue"
              },
              "Released": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "StartDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Summary": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TimeSpent": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Type": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WorkgroupID": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "Address": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AddressLine1": {
                "$ref": "#/components/schemas/StringValue"
              },
              "AddressLine2": {
                "$ref": "#/components/schemas/StringValue"
              },
              "City": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Country": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PostalCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "State": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Validated": {
                "$ref": "#/components/schemas/BooleanValue"
              }
            }
          }
        ]
      },
      "AllowBilling": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ServiceOrder"
          }
        }
      },
      "AmazonStore": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BindingName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LocaleName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Marketplace": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RefreshToken": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Region": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SellerPartnerId": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Active": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Default": {
                "$ref": "#/components/schemas/BooleanValue"
              }
            }
          }
        ]
      },
      "AmazonStoreCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/AmazonStore"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "AppAttributes": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Attribute": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RefNoteID": {
                "$ref": "#/components/schemas/GuidValue"
              },
              "Required": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Value": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "AppDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Account": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ActualAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ActualDuration": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ActualQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "AppointmentNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Billable": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "BillableAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "BillableQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "BillingRule": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Branch": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ComponentID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ComponentLineRef": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CostCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CoveredQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CuryUnitCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DiscountAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "DiscountPercent": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "EquipmentAction": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EquipmentActionComment": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EstimatedAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "EstimatedDuration": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EstimatedQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ExtPrice": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "LineRef": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineStatus": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Location": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LotSerialNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ManualPrice": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "MarkforPO": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ModelEquipmentLineRef": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OverageQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "OverageUnitPrice": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PickupDeliveryAction": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PickupDeliveryLineRef": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PickupDeliveryServiceID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "POCompleted": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "PONbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "POStatus": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PrepaidItem": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ProjectTask": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RelatedDocNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ServiceContractItem": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ServiceOrderLineRef": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ServiceOrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SortOrder": {
                "$ref": "#/components/schemas/IntValue"
              },
              "StaffMemberID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TargetEquipmentID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxCategory": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UnitPrice": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Warehouse": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Warranty": {
                "$ref": "#/components/schemas/BooleanValue"
              }
            }
          }
        ]
      },
      "AppFinancialSettings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BillingCustomer": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BillingCycle": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BillingLocation": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Branch": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Commissionable": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "CustomerTaxZone": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RunBillingFor": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Salesperson": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxCalculationMode": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "AppLogs": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AddtoActualDuration": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "AppointmentNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Approved": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "BillableAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "BillableLabor": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "BillableTime": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CostCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DetailLineRef": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Duration": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EarningType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EndDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "EndTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LaborItemID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "LogLineRef": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LogLineStatus": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ManageTimeManually": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ProjectTask": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ServiceOrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "StaffMember": {
                "$ref": "#/components/schemas/StringValue"
              },
              "StartDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "StartTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "TimeCardRefNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TrackTime": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Travel": {
                "$ref": "#/components/schemas/BooleanValue"
              }
            }
          }
        ]
      },
      "AppOtherInformation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BatchNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DocumentType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InvoiceNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "IssueReferenceNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RecurrenceDescription": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ReferenceNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RouteID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RouteNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SourceScheduleID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SourceServiceContractID": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "AppPrepayments": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ApplicationDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "AppliedtoOrders": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "AvailableBalance": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CashAccount": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Currency": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PaymentAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PaymentMethod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PaymentRef": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ReferenceNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SourceAppointmentNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Type": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "AppProfitability": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ActualAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ActualDuration": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ActualQuantity": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "BillableAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "BillableQuantity": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ExtCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EstimatedAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "EstimatedQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineRef": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Profit": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ProfitPercent": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "StaffMember": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UnitCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UnitPrice": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "AppRecalcExternalTax": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Appointment"
          }
        }
      },
      "AppResourceEquipment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AppointmentNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Comment": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EquipmentID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ServiceOrderType": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "AppStaff": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AppointmentNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CostCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DetailLineRef": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EarningType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LaborItem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "LineRef": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PrimaryDriver": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Project": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProjectTask": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RouteDriver": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ServiceOrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "StaffMember": {
                "$ref": "#/components/schemas/StringValue"
              },
              "StaffType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TrackTime": {
                "$ref": "#/components/schemas/BooleanValue"
              }
            }
          }
        ]
      },
      "AppTaxDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AppointmentNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "IncludeinVATExemptTotal": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "PendingVAT": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "RecordID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "ReverseVAT": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ServiceOrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "StatisticalVAT": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "TaxableAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TaxAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TaxID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxRate": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TaxType": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "AppTotals": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ActualTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "AppointmentBillableTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "AppointmentTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "BillableLaborTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "BillableTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "EstimatedTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "LineTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PrepaymentApplied": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PrepaymentReceived": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PrepaymentRemaining": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ServiceOrderBillableUnpaidBalance": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ServiceOrderTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ServiceOrderUnpaidBalance": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TaxTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "VATExemptTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "VATTaxableTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "ApplicableWage": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BenefitIncreasingApplWage": {
                "$ref": "#/components/schemas/BenefitIncreasingApplWage"
              },
              "DeductionsDecreasingApplWage": {
                "$ref": "#/components/schemas/DeductionDecreasingApplWage"
              },
              "EarningIncreasingApplWage": {
                "$ref": "#/components/schemas/EarningIncreasingApplWage"
              },
              "EmployeeTaxesDecreasingApplWage": {
                "$ref": "#/components/schemas/TaxesDecreasingApplWage"
              },
              "EmployerTaxesIncreasingApplWage": {
                "$ref": "#/components/schemas/EmployerTaxesIncreasingApplWage"
              }
            }
          }
        ]
      },
      "Appointment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ActualDuration": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ActualEndDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ActualEndTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ActualHandleManually": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ActualServiceDuration": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ActualStartDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ActualStartTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "AppointmentNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "AppointmentTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Attributes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AppAttributes"
                }
              },
              "BranchLocation": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Confirmed": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "CostTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Customer": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DefaultProjectTask": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Details": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AppDetails"
                }
              },
              "EstimatedServiceDuration": {
                "$ref": "#/components/schemas/StringValue"
              },
              "FinancialSettings": {
                "$ref": "#/components/schemas/AppFinancialSettings"
              },
              "Finished": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Hold": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Location": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Logs": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AppLogs"
                }
              },
              "OptimizationResult": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OtherInformation": {
                "$ref": "#/components/schemas/AppOtherInformation"
              },
              "Override": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Prepayments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AppPrepayments"
                }
              },
              "Profit": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Profitability": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AppProfitability"
                }
              },
              "Project": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ResourceEquipment": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AppResourceEquipment"
                }
              },
              "ScheduledDuration": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ScheduledEndDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ScheduledEndTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ScheduledHandleManually": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ScheduledStartDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ScheduledStartTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ServiceOrderNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ServiceOrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Staff": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AppStaff"
                }
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxDetails": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AppTaxDetails"
                }
              },
              "TaxTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Totals": {
                "$ref": "#/components/schemas/AppTotals"
              },
              "UnreachedCustomer": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ValidatedbyDispatcher": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "WaitingforPurchasedItems": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "WorkflowStage": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "AppointmentCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Appointment"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "Approval": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ApprovedBy": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ApprovedByName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Approver": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ApproverName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Date": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Workgroup": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ApproveChangeOrder": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ChangeOrder"
          }
        }
      },
      "ApproveExpenseClaim": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ExpenseClaim"
          }
        }
      },
      "ApproveExpenseReceipt": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ExpenseReceipt"
          }
        }
      },
      "ApproveProFormaInvoice": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ProFormaInvoice"
          }
        }
      },
      "ApproveProject": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Project"
          }
        }
      },
      "ArchiveEmail": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Email"
          }
        }
      },
      "AssignCase": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Case"
          }
        }
      },
      "AttributeDefinition": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AttributeID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ControlType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CreatedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EntryMask": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Internal": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "RegExp": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Values": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AttributeDefinitionValue"
                }
              }
            }
          }
        ]
      },
      "AttributeDefinitionCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/AttributeDefinition"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "AttributeDefinitionValue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Disabled": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "SortOrder": {
                "$ref": "#/components/schemas/ShortValue"
              },
              "ValueID": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "AttributeValue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AttributeID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "AttributeDescription": {
                "$ref": "#/components/schemas/StringValue"
              },
              "IsActive": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "RefNoteID": {
                "$ref": "#/components/schemas/GuidValue"
              },
              "Required": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Value": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ValueDescription": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "AutoRecalculateDiscounts": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/SalesOrder"
          }
        }
      },
      "BCRoleAssignment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "RoleAssignmentID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "BAccountID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "ContactID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "LocationCD": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Role": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CreatedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              }
            }
          }
        ]
      },
      "BatchDeductionOrBenefitDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BatchNumber": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BenefitAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "BenefitCalculationMethod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BenefitPercent": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ContributionType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DeductionAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "DeductionCalculationMethod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DeductionCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DeductionPercent": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Enabled": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "IsGarnishment": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              }
            }
          }
        ]
      },
      "BatchEarningDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Account": {
                "$ref": "#/components/schemas/StringValue"
              },
              "AllowCopy": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Amount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Branch": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CertifiedJob": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Code": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CostCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Date": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Employee": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EmployeeName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Hours": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "LaborItem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Location": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ManualRate": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Project": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Rate": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ExcelRecordID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ShiftCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Task": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TimeActivity": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UnionLocal": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Units": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UnitType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WCCCode": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "BatchOvertimeRules": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ApplyOvertimeRulesfortheDocument": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "OvertimeRulesDetails": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BatchOvertimeRulesDetail"
                }
              }
            }
          }
        ]
      },
      "BatchOvertimeRulesDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "DayofWeek": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DisbursingEarningType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Enabled": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Multiplier": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "OvertimeRule": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Project": {
                "$ref": "#/components/schemas/StringValue"
              },
              "State": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ThresholdforOvertimehours": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Type": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UnionLocal": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "BenefitIncreasingApplWage": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BenefitIncreasingApplWageDetails": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BenefitIncreasingApplWageDetail"
                }
              },
              "InclusionType": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "BenefitIncreasingApplWageDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BenefitCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              }
            }
          }
        ]
      },
      "BigCommerceStores": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AccessToken": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Active": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "APIPath": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ClientID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Connector": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Default": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "StoreAdminPath": {
                "$ref": "#/components/schemas/StringValue"
              },
              "StoreName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WebDAVPassword": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WebDAVPath": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WebDAVUsername": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "BigCommerceStoresCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/BigCommerceStores"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "Bill": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Amount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Applications": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BillApplicationDetail"
                }
              },
              "ApprovedForPayment": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Balance": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "BranchID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CashAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CurrencyID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Date": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Details": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BillDetail"
                }
              },
              "DueDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Hold": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "LocationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PostPeriod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Project": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ReferenceNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxDetails": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BillTaxDetail"
                }
              },
              "TaxTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Terms": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Type": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Vendor": {
                "$ref": "#/components/schemas/StringValue"
              },
              "VendorRef": {
                "$ref": "#/components/schemas/StringValue"
              },
              "IsTaxValid": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              }
            }
          }
        ]
      },
      "BillApplicationDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AmountPaid": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Balance": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "DocType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ReferenceNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "BillCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Bill"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "BillDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Account": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Amount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Branch": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CalculateDiscountsOnImport": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "CostCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ExtendedCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LCLineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "LCNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LCType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "NonBillable": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "POLine": {
                "$ref": "#/components/schemas/IntValue"
              },
              "POOrderNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "POOrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "POReceiptLine": {
                "$ref": "#/components/schemas/IntValue"
              },
              "POReceiptType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "POReceiptNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Project": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProjectTask": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Qty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Subaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxCategory": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TransactionDescription": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UnitCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "BillTaxDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "TaxableAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TaxAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TaxID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxRate": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "BillToSettings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BillToAddress": {
                "$ref": "#/components/schemas/Address"
              },
              "BillToAddressOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "BillToContact": {
                "$ref": "#/components/schemas/DocContact"
              },
              "BillToContactOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "CustomerLocation": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "BooleanValue": {
        "type": "object",
        "properties": {
          "value": {
            "type": "boolean"
          },
          "error": {
            "type": "string"
          }
        }
      },
      "BoxStockItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BoxID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "MaxQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "MaxVolume": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "MaxWeight": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Qty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "Budget": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Branch": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ComparetoBranch": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ComparetoLedger": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ComparetoYear": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Details": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BudgetDetail"
                }
              },
              "FinancialYear": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Ledger": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SubaccountFilter": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TreeNodeFilter": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "BudgetCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Budget"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "BudgetDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Account": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Amount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Branch": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CreatedBy": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DistributedAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "FinancialYear": {
                "$ref": "#/components/schemas/StringValue"
              },
              "GroupID": {
                "$ref": "#/components/schemas/GuidValue"
              },
              "LastModifiedBy": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LedgerID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Node": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Period01": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Period02": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Period03": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Period04": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Period05": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Period06": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Period07": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Period08": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Period09": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Period10": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Period11": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Period12": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Period13": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Released": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Subaccount": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "BusinessAccount": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AccountRef": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Activities": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ActivityDetail"
                }
              },
              "Attributes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AttributeValue"
                }
              },
              "BusinessAccountID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Campaigns": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CampaignDetail"
                }
              },
              "Cases": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BusinessAccountCaseDetail"
                }
              },
              "ClassID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Contacts": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BusinessAccountContact"
                }
              },
              "Contracts": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BusinessAccountContract"
                }
              },
              "DefaultLocationSettings": {
                "$ref": "#/components/schemas/BusinessAccountDefaultLocationSetting"
              },
              "Duplicate": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Duplicates": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DuplicateDetail"
                }
              },
              "LastIncomingActivity": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "LastOutgoingActivity": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Locations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BusinessAccountLocation"
                }
              },
              "MainAddress": {
                "$ref": "#/components/schemas/Address"
              },
              "MainAddressValidated": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "MainContact": {
                "$ref": "#/components/schemas/BusinessAccountMainContact"
              },
              "MarketingLists": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MarketingListDetail"
                }
              },
              "Name": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Opportunities": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BusinessAccountOpportunityDetail"
                }
              },
              "Orders": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BusinessAccountOrder"
                }
              },
              "Owner": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OwnerEmployeeName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ParentAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PrimaryContact": {
                "$ref": "#/components/schemas/Contact"
              },
              "Relations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RelationDetail"
                }
              },
              "ShippingAddress": {
                "$ref": "#/components/schemas/Address"
              },
              "ShippingAddressOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ShippingAddressValidated": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ShippingContact": {
                "$ref": "#/components/schemas/BusinessAccountShippingContact"
              },
              "SourceCampaign": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Type": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Workgroup": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WorkgroupDescription": {
                "$ref": "#/components/schemas/StringValue"
              },
              "NoteID": {
                "$ref": "#/components/schemas/GuidValue"
              },
              "CurrencyID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EnableCurrencyOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              }
            }
          }
        ]
      },
      "BusinessAccountCaseDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "CaseID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ClassID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ClosingDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Contract": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DateReported": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Estimation": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InitialResponse": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Owner": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Reason": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Severity": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subject": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Workgroup": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "BusinessAccountClassAttributeDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Active": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "AttributeID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DefaultValue": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Required": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "SortOrder": {
                "$ref": "#/components/schemas/ShortValue"
              }
            }
          }
        ]
      },
      "BusinessAccountContact": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Active": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "City": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ContactID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "DisplayName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Email": {
                "$ref": "#/components/schemas/StringValue"
              },
              "JobTitle": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Owner": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone1": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Type": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Workgroup": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "BusinessAccountContract": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BusinessAccountID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BusinessAccountName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ContractID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ExpirationDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Location": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "BusinessAccountCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/BusinessAccount"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "BusinessAccountDefaultLocationSetting": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "FOBPoint": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Insurance": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "LeadTimeInDays": {
                "$ref": "#/components/schemas/ShortValue"
              },
              "LocationName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrderPriority": {
                "$ref": "#/components/schemas/ShortValue"
              },
              "PriceClass": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ResidentialDelivery": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "SaturdayDelivery": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ShippingBranch": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ShippingRule": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ShippingTerms": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ShippingZone": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ShipVia": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxRegistrationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxZone": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Warehouse": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "BusinessAccountLocation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Active": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "City": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Country": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Default": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "LocationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LocationName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PriceClass": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SalesAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SalesSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "State": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxZone": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "BusinessAccountMainContact": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Attention": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CompanyName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Email": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Fax": {
                "$ref": "#/components/schemas/StringValue"
              },
              "JobTitle": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LanguageOrLocale": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone1": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone2": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Web": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "BusinessAccountOpportunityDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BusinessAccountID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BusinessAccountName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CurrencyID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DisplayName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Estimation": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Owner": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Probability": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Stage": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subject": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Total": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Workgroup": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "BusinessAccountOrder": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "CurrencyID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CustomerOrder": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrderedQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "OrderNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrderTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "OrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrderVolume": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "OrderWeight": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "RequestedOn": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ScheduledShipment": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ShippingZone": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ShipVia": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "BusinessAccountPaymentInstructionDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LocationID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "PaymentInstructionsID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PaymentMethod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Value": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "BusinessAccountShippingContact": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Attention": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Email": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Fax": {
                "$ref": "#/components/schemas/StringValue"
              },
              "JobTitle": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone1": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone2": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Override": {
                "$ref": "#/components/schemas/BooleanValue"
              }
            }
          }
        ]
      },
      "ByteValue": {
        "type": "object",
        "properties": {
          "value": {
            "type": "integer",
            "format": "int32"
          },
          "error": {
            "type": "string"
          }
        }
      },
      "CalendarSettings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Friday": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "FridayEndTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "FridayStartTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "FriUnpaidBreakTime": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Monday": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "MondayEndTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "MondayStartTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "MonUnpaidBreakTime": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SatUnpaidBreakTime": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Saturday": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "SaturdayEndTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "SaturdayStartTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Sunday": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "SundayEndTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "SundayStartTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "SunUnpaidBreakTime": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Thursday": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ThursdayEndTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ThursdayStartTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ThuUnpaidBreakTime": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Tuesday": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "TuesdayEndTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "TuesdayStartTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "TueUnpaidBreakTime": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Wednesday": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "WednesdayEndTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "WednesdayStartTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "WedUnpaidBreakTime": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "CampaignDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "CampaignID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CampaignName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ContactID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Stage": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "CancelActivityEvent": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Event"
          }
        }
      },
      "CancelActivityTask": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Task"
          }
        }
      },
      "CancelAppointment": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Appointment"
          }
        }
      },
      "CancelOrder": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ServiceOrder"
          }
        }
      },
      "CancelPhysicalInventory": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/PhysicalInventoryReview"
          }
        }
      },
      "CancelProject": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Project"
          }
        }
      },
      "CancelProjectTask": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ProjectTask"
          }
        }
      },
      "CancelSalesOrder": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/SalesOrder"
          }
        }
      },
      "CancelSendingEmail": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Email"
          }
        }
      },
      "CaptureCreditCardPayment": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Payment"
          }
        }
      },
      "CardOperation": {
        "required": [
          "entity",
          "parameters"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Payment"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "TranType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TranNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "AuthNumber": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ExtProfileId": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TranDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "OrigTranNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Amount": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "Carrier": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "CarrierID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CarrierUnits": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CreatedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "CustomerAccounts": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CarrierCustomerAccount"
                }
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "PlugInParameters": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CarrierPluginParameter"
                }
              },
              "PlugInType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Centimeter": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Inch": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Kilogram": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Pound": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WarehouseID": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "CarrierCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Carrier"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "CarrierCustomerAccount": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Active": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "CarrierAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CustomerID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CustomerName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Location": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PostalCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RecordID": {
                "$ref": "#/components/schemas/IntValue"
              }
            }
          }
        ]
      },
      "CarrierPluginParameter": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PluginID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Value": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "Case": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Activities": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ActivityDetail"
                }
              },
              "Attributes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AttributeValue"
                }
              },
              "Billable": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "BillableOvertime": {
                "$ref": "#/components/schemas/IntValue"
              },
              "BillableTime": {
                "$ref": "#/components/schemas/IntValue"
              },
              "BusinessAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BusinessAccountName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CaseID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ClassID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ClosingDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ContactDisplayName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ContactID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Contract": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DateReported": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InitialResponse": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastActivityDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "LastIncomingActivity": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "LastOutgoingActivity": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Location": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ManualOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "OvertimeSpent": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Owner": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OwnerEmployeeName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Priority": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Reason": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RelatedCases": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CaseRelatedCase"
                }
              },
              "Relations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RelationDetail"
                }
              },
              "ResolutionTime": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Severity": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SLA": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subject": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TimeSpent": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Workgroup": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WorkgroupDescription": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "NoteID": {
                "$ref": "#/components/schemas/GuidValue"
              }
            }
          }
        ]
      },
      "CaseCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Case"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "CaseDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "CaseID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ClassID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ClosingDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "DateReported": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Estimation": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InitialResponse": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Owner": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Reason": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Severity": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subject": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Workgroup": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "CaseRelatedCase": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "CaseID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Owner": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ParentCaseID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RelationType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subject": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Workgroup": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "CashSale": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Amount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Balance": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CashAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CreatedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "CustomerID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Date": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Details": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CashSaleDetail"
                }
              },
              "Hold": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "PaymentMethod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PaymentRef": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Project": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ReferenceNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Type": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "CashSaleCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/CashSale"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "CashSaleDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Account": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Amount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Branch": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CostCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ExtendedPrice": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProjectTask": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Qty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Subaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxCategory": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TransactionDescription": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UnitPrice": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "CashTransaction": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Approved": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "CashAccountCD": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Details": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CashTransactionDetail"
                }
              },
              "EntryTypeCD": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ExternalReferenceNumber": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PostedDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              }
            }
          }
        ]
      },
      "CashTransactionCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/CashTransaction"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "CashTransactionDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Amount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "AmountDescription": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "CategoryStockItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "CategoryID": {
                "$ref": "#/components/schemas/IntValue"
              }
            }
          }
        ]
      },
      "ChangeBusinessAccountID": {
        "required": [
          "entity",
          "parameters"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/BusinessAccount"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "BusinessAccountID": {
                "$ref": "#/components/schemas/StringValue"
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "ChangeCostCodeID": {
        "required": [
          "entity",
          "parameters"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/CostCode"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "CostCodeID": {
                "$ref": "#/components/schemas/StringValue"
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "ChangeEmployeeID": {
        "required": [
          "entity",
          "parameters"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Employee"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "EmployeeID": {
                "$ref": "#/components/schemas/StringValue"
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "ChangeOrder": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ApprovalDetails": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Approval"
                }
              },
              "Attributes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AttributeValue"
                }
              },
              "ChangeDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Class": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Commitments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ChangeOrderCommitment"
                }
              },
              "CommitmentsChangeTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CompletionDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ContractTimeChangeDays": {
                "$ref": "#/components/schemas/IntValue"
              },
              "CostBudget": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ChangeOrderCostBudget"
                }
              },
              "CostBudgetChangeTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Customer": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DetailedDescription": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ExternalRefNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "GrossMargin": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "GrossMarginAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Hold": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "OriginalCORefNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProjectID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RefNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RevenueBudget": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ChangeOrderRevenueBudget"
                }
              },
              "RevenueBudgetChangeTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "RevenueChangeNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ReverseStatus": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ChangeOrderClass": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Active": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Attributes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BusinessAccountClassAttributeDetail"
                }
              },
              "ClassID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Commitments": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "CostBudget": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "RevenueBudget": {
                "$ref": "#/components/schemas/BooleanValue"
              }
            }
          }
        ]
      },
      "ChangeOrderClassCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ChangeOrderClass"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "ChangeOrderCommitment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Account": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Amount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "AmountinBaseCurrency": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CostCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CurrencyID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "LineDescription": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OpenQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "OrderDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "OrderQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "POLineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "PONbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PotentiallyRevisedAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PotentiallyRevisedQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ProjectTaskID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Qty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UnitCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Vendor": {
                "$ref": "#/components/schemas/StringValue"
              },
              "POType": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ChangeOrderCostBudget": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AccountGroup": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ActualAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ActualQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Amount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CommittedCOAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CommittedCOQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CommittedInvoicedAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CommittedInvoicedQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CommittedOpenAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CommittedOpenQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CommittedReceivedQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CostCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CurrentCommittedCOAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CurrentCommittedCOQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OriginalBudgetedAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "OriginalBudgetedQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "OtherDraftCOAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PreviouslyApprovedCOAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PreviouslyApprovedCOQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ProjectTaskID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Qty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "RevisedBudgetedAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "RevisedBudgetedQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "RevisedCommittedAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "RevisedCommittedQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TotalPotentiallyRevisedAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UnitRate": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ChangeOrderCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ChangeOrder"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "ChangeOrderRevenueBudget": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AccountGroup": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Amount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CostCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OtherDraftCOAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PreviouslyApprovedCOAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PreviouslyApprovedCOQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ProjectTaskID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Qty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "RevisedBudgetedAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "RevisedBudgetedQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TotalPotentiallyRevisedAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UnitRate": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ChangeProjectID": {
        "required": [
          "entity",
          "parameters"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Project"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "ProjectID": {
                "$ref": "#/components/schemas/StringValue"
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "Check": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ApplicationDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "CashAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CurrencyID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Details": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CheckDetail"
                }
              },
              "History": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CheckHistoryDetail"
                }
              },
              "Hold": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "PaymentAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PaymentMethod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PaymentRef": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ReferenceNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Type": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UnappliedBalance": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Vendor": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              }
            }
          }
        ]
      },
      "CheckCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Check"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "CheckDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AmountPaid": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Balance": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CashDiscountBalance": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "DocLineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "DocType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ReferenceNbr": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "CheckForBusinessAccountDuplicates": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/BusinessAccount"
          }
        }
      },
      "CheckForContactDuplicates": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Contact"
          }
        }
      },
      "CheckHistoryDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AmountPaid": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Balance": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CashDiscountBalance": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CashDiscountTaken": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "DocType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ReferenceNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "VendorRef": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "CheckLeadForDuplicates": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Lead"
          }
        }
      },
      "ClaimExpenseReceipt": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ExpenseReceipt"
          }
        }
      },
      "CloseAppointment": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Appointment"
          }
        }
      },
      "CloseOrder": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ServiceOrder"
          }
        }
      },
      "Commissions": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "DefaultSalesperson": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SalesPersons": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SalesPersonDetail"
                }
              }
            }
          }
        ]
      },
      "CompaniesStructure": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Results": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CompaniesStructureDetail"
                }
              }
            }
          }
        ]
      },
      "CompaniesStructureCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/CompaniesStructure"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "CompaniesStructureDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BaseCurrencyID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BranchCountry": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BranchID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BranchName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BranchStatus": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "CompanyID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CompanyName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CompanyStatus": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "CompanyType": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "CompanyFinancialPeriod": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Company": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Details": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FinancialPeriodDetail"
                }
              },
              "FinancialYear": {
                "$ref": "#/components/schemas/StringValue"
              },
              "NbrOfPeriods": {
                "$ref": "#/components/schemas/ShortValue"
              },
              "StartDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              }
            }
          }
        ]
      },
      "CompanyFinancialPeriodCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/CompanyFinancialPeriod"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "CompensationDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Active": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "EarningCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EarningDescription": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EndDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PayRate": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "StartDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "UnitOfPay": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "CompleteActivity": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Activity"
          }
        }
      },
      "CompleteAppointment": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Appointment"
          }
        }
      },
      "CompleteEvent": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Event"
          }
        }
      },
      "CompleteOrder": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ServiceOrder"
          }
        }
      },
      "CompletePhysicalInventory": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/PhysicalInventoryReview"
          }
        }
      },
      "CompleteProject": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Project"
          }
        }
      },
      "CompleteProjectTask": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ProjectTask"
          }
        }
      },
      "CompleteTask": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Task"
          }
        }
      },
      "CompleteTimeEntry": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/TimeEntry"
          }
        }
      },
      "ConfirmShipment": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Shipment"
          }
        }
      },
      "Contact": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Active": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Activities": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ActivityDetail"
                }
              },
              "Address": {
                "$ref": "#/components/schemas/Address"
              },
              "OverrideAccountAddress": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "AddressValidated": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Attention": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Attributes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AttributeValue"
                }
              },
              "BusinessAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Campaigns": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CampaignDetail"
                }
              },
              "Cases": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CaseDetail"
                }
              },
              "CompanyName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ContactClass": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ContactID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "ContactMethod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ConvertedBy": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DateOfBirth": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "DisplayName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DoNotCall": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "DoNotEmail": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "DoNotFax": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "DoNotMail": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Duplicate": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DuplicateFound": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Duplicates": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ContactDuplicateDetail"
                }
              },
              "Email": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Fax": {
                "$ref": "#/components/schemas/StringValue"
              },
              "FaxType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "FirstName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Gender": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Image": {
                "$ref": "#/components/schemas/StringValue"
              },
              "JobTitle": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LanguageOrLocale": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastIncomingActivity": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "LastName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastOutgoingActivity": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "MaritalStatus": {
                "$ref": "#/components/schemas/StringValue"
              },
              "MarketingLists": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MarketingListDetail"
                }
              },
              "MiddleName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "NoMarketing": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "NoMassMail": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Notifications": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ContactNotification"
                }
              },
              "Opportunities": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OpportunityDetail"
                }
              },
              "Owner": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OwnerEmployeeName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ParentAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone1": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone1Type": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone2": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone2Type": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone3": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone3Type": {
                "$ref": "#/components/schemas/StringValue"
              },
              "QualificationDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Reason": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Relations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RelationDetail"
                }
              },
              "RoleAssignments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BCRoleAssignment"
                }
              },
              "Source": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SourceCampaign": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SpouseOrPartnerName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Synchronize": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Title": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Type": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UserInfo": {
                "$ref": "#/components/schemas/ContactUserInfo"
              },
              "WebSite": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Workgroup": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WorkgroupDescription": {
                "$ref": "#/components/schemas/StringValue"
              },
              "NoteID": {
                "$ref": "#/components/schemas/GuidValue"
              },
              "FullName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ExtRefNbr": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ContactCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Contact"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "ContactDuplicateDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BusinessAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BusinessAccountName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BusinessAccountType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DisplayName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Duplicate": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Email": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastModifiedDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Type": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ContactNotification": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Active": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Bcc": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ClassID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Format": {
                "$ref": "#/components/schemas/StringValue"
              },
              "MailingID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Module": {
                "$ref": "#/components/schemas/StringValue"
              },
              "NotificationID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Report": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Source": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ContactRoles": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "RoleDescription": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RoleName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Selected": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "UserType": {
                "$ref": "#/components/schemas/IntValue"
              }
            }
          }
        ]
      },
      "ContactUserInfo": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "GeneratePassword": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Login": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Password": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Roles": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ContactRoles"
                }
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UserType": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ContractUsage": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BilledTransactions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ContractUsageTransactionDetail"
                }
              },
              "ContractID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PostPeriod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UnbilledTransactions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ContractUsageTransactionDetail"
                }
              }
            }
          }
        ]
      },
      "ContractUsageCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ContractUsage"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "ContractUsageTransactionDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BillingDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Branch": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CaseID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Date": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EndDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Qty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ReferenceNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "StartDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "TransactionID": {
                "$ref": "#/components/schemas/LongValue"
              },
              "Type": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ConvertBusinessAccountToCustomer": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/BusinessAccount"
          }
        }
      },
      "ConvertLeadToBAccount": {
        "required": [
          "entity",
          "parameters"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Lead"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "FirstName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "JobTitle": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone1Type": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone1": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone2Type": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone2": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Email": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ContactClass": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BusinessAccountID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BusinessAccountName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BusinessAccountClass": {
                "$ref": "#/components/schemas/StringValue"
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "ConvertLeadToContact": {
        "required": [
          "entity",
          "parameters"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Lead"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "FirstName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "AccountName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "JobTitle": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone1Type": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone1": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone2Type": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone2": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Email": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ContactClass": {
                "$ref": "#/components/schemas/StringValue"
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "ConvertLeadToOpportunity": {
        "required": [
          "entity",
          "parameters"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Lead"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "FirstName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "AccountName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "JobTitle": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone1Type": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone1": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone2Type": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone2": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Email": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ContactClass": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BusinessAccountID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BusinessAccountName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BusinessAccountClass": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OpportunitySubject": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OpportunityCloseDate": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OpportunityClass": {
                "$ref": "#/components/schemas/StringValue"
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "CorrectShipment": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Shipment"
          }
        }
      },
      "CostCode": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "CostCodeID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              }
            }
          }
        ]
      },
      "CostCodeCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/CostCode"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "CreateAPBill": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/PurchaseReceipt"
          }
        }
      },
      "CreateAccountFromContact": {
        "required": [
          "entity",
          "parameters"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Contact"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "BusinessAccountID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BusinessAccountName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BusinessAccountClass": {
                "$ref": "#/components/schemas/StringValue"
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "CreateAccountFromOpportunity": {
        "required": [
          "entity",
          "parameters"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Opportunity"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "FirstName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "AccountName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "JobTitle": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone1Type": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone1": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone2Type": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone2": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Email": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ContactClass": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LinkContactToAccount": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "BusinessAccountID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BusinessAccountName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BusinessAccountClass": {
                "$ref": "#/components/schemas/StringValue"
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "CreateCaseFromEmail": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Email"
          }
        }
      },
      "CreateContactFromBusinessAccount": {
        "required": [
          "entity",
          "parameters"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/BusinessAccount"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "FirstName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "JobTitle": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone1Type": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone1": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone2Type": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone2": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Email": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ContactClass": {
                "$ref": "#/components/schemas/StringValue"
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "CreateContactFromCustomer": {
        "required": [
          "entity",
          "parameters"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Customer"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "FirstName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "JobTitle": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone1Type": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone1": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone2Type": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone2": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Email": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ContactClass": {
                "$ref": "#/components/schemas/StringValue"
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "CreateContactFromEmail": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Email"
          }
        }
      },
      "CreateContactFromOpportunity": {
        "required": [
          "entity",
          "parameters"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Opportunity"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "FirstName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "AccountName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "JobTitle": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone1Type": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone1": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone2Type": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone2": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Email": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ContactClass": {
                "$ref": "#/components/schemas/StringValue"
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "CreateContactFromVendor": {
        "required": [
          "entity",
          "parameters"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Vendor"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "FirstName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "JobTitle": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone1Type": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone1": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone2Type": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone2": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Email": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ContactClass": {
                "$ref": "#/components/schemas/StringValue"
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "CreateEventFromEmail": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Email"
          }
        }
      },
      "CreateExpenseReceiptFromEmail": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Email"
          }
        }
      },
      "CreateLeadFromEmail": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Email"
          }
        }
      },
      "CreateOpportunityFromEmail": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Email"
          }
        }
      },
      "CreateOpportunityInvoice": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Opportunity"
          }
        }
      },
      "CreateOpportunitySalesOrder": {
        "required": [
          "entity",
          "parameters"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Opportunity"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "OrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RecalculatePricesandDiscounts": {
                "$ref": "#/components/schemas/BooleanValue"
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "CreateTaskFromEmail": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Email"
          }
        }
      },
      "CreditCardProcessingDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "TransactionAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TransactionStatus": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "CreditCardTransactionDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "TranNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TranType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "AuthNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TranDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ExtProfileId": {
                "$ref": "#/components/schemas/StringValue"
              },
              "NeedValidation": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "OrigTranNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ExpirationDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "CardType": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "CreditVerificationRules": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "CreditDaysPastDue": {
                "$ref": "#/components/schemas/ShortValue"
              },
              "CreditLimit": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CreditVerification": {
                "$ref": "#/components/schemas/StringValue"
              },
              "FirstDueDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "OpenOrdersBalance": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "RemainingCreditLimit": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UnreleasedBalance": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "Currency": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Active": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "CreatedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "CurrencyID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CurrencySymbol": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DecimalPrecision": {
                "$ref": "#/components/schemas/ShortValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "UseForAccounting": {
                "$ref": "#/components/schemas/BooleanValue"
              }
            }
          }
        ]
      },
      "CurrencyCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Currency"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "CustomBooleanField": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomField"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "boolean"
              },
              "error": {
                "type": "string"
              }
            }
          }
        ]
      },
      "CustomByteField": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomField"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "integer",
                "format": "int32"
              },
              "error": {
                "type": "string"
              }
            }
          }
        ]
      },
      "CustomDateTimeField": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomField"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "format": "date-time"
              },
              "error": {
                "type": "string"
              }
            }
          }
        ]
      },
      "CustomDecimalField": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomField"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "format": "double"
              },
              "error": {
                "type": "string"
              }
            }
          }
        ]
      },
      "CustomDoubleField": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomField"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "format": "double"
              },
              "error": {
                "type": "string"
              }
            }
          }
        ]
      },
      "CustomField": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "discriminator": {
          "propertyName": "type"
        }
      },
      "CustomGuidField": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomField"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "format": "uuid"
              },
              "error": {
                "type": "string"
              }
            }
          }
        ]
      },
      "CustomIntField": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomField"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "integer",
                "format": "int32"
              },
              "error": {
                "type": "string"
              }
            }
          }
        ]
      },
      "CustomLongField": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomField"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "integer",
                "format": "int64"
              },
              "error": {
                "type": "string"
              }
            }
          }
        ]
      },
      "CustomShortField": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomField"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "integer",
                "format": "int32"
              },
              "error": {
                "type": "string"
              }
            }
          }
        ]
      },
      "CustomStringField": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomField"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "string"
              },
              "error": {
                "type": "string"
              }
            }
          }
        ]
      },
      "Customer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AccountRef": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ApplyOverdueCharges": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Attributes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AttributeValue"
                }
              },
              "AutoApplyPayments": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "BAccountID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "BillingAddressOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "BillingContact": {
                "$ref": "#/components/schemas/Contact"
              },
              "BillingContactOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Contacts": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CustomerContact"
                }
              },
              "CreatedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "CreditVerificationRules": {
                "$ref": "#/components/schemas/CreditVerificationRules"
              },
              "CurrencyID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CurrencyRateType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CustomerClass": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CustomerID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CustomerCategory": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CustomerName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Email": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EnableCurrencyOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "EnableRateOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "EnableWriteOffs": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "FOBPoint": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "LeadTimedays": {
                "$ref": "#/components/schemas/ShortValue"
              },
              "LocationName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "MainContact": {
                "$ref": "#/components/schemas/Contact"
              },
              "MultiCurrencyStatements": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "OrderPriority": {
                "$ref": "#/components/schemas/ShortValue"
              },
              "ParentRecord": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PaymentInstructions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BusinessAccountPaymentInstructionDetail"
                }
              },
              "PriceClassID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PrimaryContact": {
                "$ref": "#/components/schemas/Contact"
              },
              "PrimaryContactID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "PrintDunningLetters": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "PrintInvoices": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "PrintStatements": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ResidentialDelivery": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Salespersons": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CustomerSalesPerson"
                }
              },
              "SaturdayDelivery": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "SendDunningLettersbyEmail": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "SendInvoicesbyEmail": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "SendStatementsbyEmail": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ShippingAddressOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ShippingBranch": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ShippingContact": {
                "$ref": "#/components/schemas/Contact"
              },
              "ShippingContactOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ShippingRule": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ShippingTerms": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ShippingZoneID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ShipVia": {
                "$ref": "#/components/schemas/StringValue"
              },
              "StatementCycleID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "StatementType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxRegistrationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxZone": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Terms": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WarehouseID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WriteOffLimit": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "RestrictVisibilityTo": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CreditLimit": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "NoteID": {
                "$ref": "#/components/schemas/GuidValue"
              },
              "EntityUsageType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxExemptionNumber": {
                "$ref": "#/components/schemas/StringValue"
              },
              "IsGuestCustomer": {
                "$ref": "#/components/schemas/BooleanValue"
              }
            }
          }
        ]
      },
      "CustomerClass": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ApplyOverdueCharges": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ARAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ARSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Attributes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BusinessAccountClassAttributeDetail"
                }
              },
              "AutoApplyPayments": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "CashDiscountAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CashDiscountSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ClassID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "COGSAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "COGSSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Country": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CreatedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "CreditDaysPastDue": {
                "$ref": "#/components/schemas/ShortValue"
              },
              "CreditLimit": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CreditVerification": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CurrencyID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CurrencyRateType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DefaultLocationIDfromBranch": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "DefaultRestrictionGroup": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DiscountAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DiscountSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EnableCurrencyOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "EnableRateOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "EnableWriteOffs": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "EntityUsageType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "FreightAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "FreightSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "GroupDocumentDiscountLimit": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "MiscAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "MiscSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "MultiCurrencyStatements": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "OverdueChargeID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OverLimitAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PaymentMethod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PrepaymentAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PrepaymentSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PrintDunningLetters": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "PrintInvoices": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "PrintStatements": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "RequireEntityUsageType": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "RequireTaxZone": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "SalesAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SalespersonID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SalesSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SendDunningLettersbyEmail": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "SendInvoicesbyEmail": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "SendStatementsByEmail": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ShippingRule": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ShippingTerms": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ShipVia": {
                "$ref": "#/components/schemas/StringValue"
              },
              "StatementCycleID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "StatementType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxZoneID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Terms": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UnrealizedGainAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UnrealizedGainSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UnrealizedLossAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UnrealizedLossSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WriteOffLimit": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "CustomerClassCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/CustomerClass"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "CustomerContact": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Contact": {
                "$ref": "#/components/schemas/Contact"
              },
              "ContactID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              }
            }
          }
        ]
      },
      "CustomerCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Customer"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "CustomerLocation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Active": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "AddressOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Calendar": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ContactOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "CreatedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Customer": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Default": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "DefaultProject": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EntityUsageType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "FedExGroundCollect": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "FOBPoint": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Insurance": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "LeadTimeDays": {
                "$ref": "#/components/schemas/ShortValue"
              },
              "LocationContact": {
                "$ref": "#/components/schemas/Contact"
              },
              "LocationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LocationName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrderPriority": {
                "$ref": "#/components/schemas/ShortValue"
              },
              "PriceClass": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ResidentialDelivery": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "RoleAssignments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BCRoleAssignment"
                }
              },
              "SaturdayDelivery": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ShippingBranch": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ShippingRule": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ShippingTerms": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ShippingZone": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ShipVia": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxExemptionNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxRegistrationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxZone": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Warehouse": {
                "$ref": "#/components/schemas/StringValue"
              },
              "NoteID": {
                "$ref": "#/components/schemas/GuidValue"
              },
              "ExtRefNbr": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "CustomerLocationCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/CustomerLocation"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "CustomerPaymentMethod": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Active": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "CardAccountNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CashAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CreatedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "CustomerID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CustomerProfileID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Details": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CustomerPaymentMethodDetail"
                }
              },
              "InstanceID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "PaymentMethod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProcCenterID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CardType": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "CustomerPaymentMethodCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/CustomerPaymentMethod"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "CustomerPaymentMethodDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Name": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Value": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "CustomerPriceClass": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "CreatedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "PriceClassID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "NoteID": {
                "$ref": "#/components/schemas/GuidValue"
              }
            }
          }
        ]
      },
      "CustomerPriceClassCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/CustomerPriceClass"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "CustomerSalesPerson": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Commission": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Default": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "LocationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LocationName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Name": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SalespersonID": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "DateTimeValue": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "format": "date-time"
          },
          "error": {
            "type": "string"
          }
        }
      },
      "DecimalValue": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "format": "double"
          },
          "error": {
            "type": "string"
          }
        }
      },
      "DeductionBenefitCode": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ACAApplicable": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ACAInformation": {
                "$ref": "#/components/schemas/ACAInformation"
              },
              "Active": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "AffectsTaxCalculation": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ApplicableWage": {
                "$ref": "#/components/schemas/ApplicableWage"
              },
              "AssociatedWith": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ContributionType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DeductionBenefitCodeID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EmployeeDeduction": {
                "$ref": "#/components/schemas/EmployeeDeduction"
              },
              "EmployerContribution": {
                "$ref": "#/components/schemas/EmployerContribution"
              },
              "GLAccounts": {
                "$ref": "#/components/schemas/DeductionOrBenefitCodeGLAccounts"
              },
              "InvoiceDescrSource": {
                "$ref": "#/components/schemas/StringValue"
              },
              "IsGarnishment": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "PayableBenefit": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ShowApplicableWageTab": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "TaxSettingsCA": {
                "$ref": "#/components/schemas/TaxSettingsCA"
              },
              "TaxSettingsUS": {
                "$ref": "#/components/schemas/TaxSettingsUS"
              },
              "Vendor": {
                "$ref": "#/components/schemas/StringValue"
              },
              "VendorInvoiceDescription": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WCCCode": {
                "$ref": "#/components/schemas/DeductionBenefitWCCCode"
              }
            }
          }
        ]
      },
      "DeductionBenefitCodeCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/DeductionBenefitCode"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "DeductionBenefitWCCCode": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "State": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WCCCodeRates": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WCCCodeRateDetail"
                }
              }
            }
          }
        ]
      },
      "DeductionDecreasingApplWage": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "DeductionIncreasingApplWageDetails": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DeductionDecreasingApplWageDetail"
                }
              },
              "InclusionType": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "DeductionDecreasingApplWageDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "DeductionCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              }
            }
          }
        ]
      },
      "DeductionOrBenefitCodeGLAccounts": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BenefitExpenseAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BenefitExpenseSub": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BenefitLiabilityAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BenefitLiabilitySub": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DeductionLiabilityAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DeductionLiabilitySub": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "DeductionOrBenefitTaxDetailCA": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Benefitincreasestaxablewage": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Deductiondecreasestaxablewage": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "TaxCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxName": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "DeductionOrBenefitTaxDetailUS": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "TaxCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxName": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "DeductionsAndBenefits": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "DeductionAndBenefitUseClassDefaults": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "DeductionsAndBenefitsDetails": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EmployeeDeductionOrBenefitDetail"
                }
              },
              "DeductionSplitMethod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "MaxPercOfNetPayForAllGarnishm": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "DefaultTaskForGLAccount": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Account": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DefaultTask": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "DirectDepositDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AccountNumber": {
                "$ref": "#/components/schemas/StringValue"
              },
              "AccountType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Amount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "BankName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BankRoutingNumber": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DepositSequenceNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "GetsRemainder": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Percent": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "Discount": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Active": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "BreakBy": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CreatedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "CustomerPriceClasses": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DiscountCustomerPriceClassesDetail"
                }
              },
              "Customers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DiscountCustomerDetail"
                }
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DiscountBreakpoints": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DiscountBreakpointDetail"
                }
              },
              "DiscountBy": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DiscountCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EffectiveDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ExpirationDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ItemPriceClasses": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DiscountItemPriceClassesDetail"
                }
              },
              "Items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DiscountItemDetail"
                }
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Promotional": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ProrateDiscount": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Sequence": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ShowFreeItem": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Warehouses": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DiscountWarehouseDetail"
                }
              }
            }
          }
        ]
      },
      "DiscountBreakpointDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BreakAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "BreakQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "DiscountAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "DiscountDetailID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "DiscountPercent": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "EffectiveDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "FreeItemQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "LastBreakAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "LastBreakQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "LastDiscountAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "LastDiscountPercent": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "LastFreeItemQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PendingBreakAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PendingBreakQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PendingDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "PendingDiscountAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PendingDiscountPercent": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PendingFreeItemQty": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "DiscountCode": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ApplicableTo": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CreatedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DiscountCodeID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DiscountType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              }
            }
          }
        ]
      },
      "DiscountCodeCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/DiscountCode"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "DiscountCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Discount"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "DiscountCustomerDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "CustomerID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CustomerName": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "DiscountCustomerPriceClassesDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "PriceClassID": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "DiscountItemDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "DiscountItemPriceClassesDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "PriceClassID": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "DiscountWarehouseDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Warehouse": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "DocContact": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Attention": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BusinessName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Email": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone1": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "DoubleValue": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "format": "double"
          },
          "error": {
            "type": "string"
          }
        }
      },
      "DuplicateDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AccountName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BusinessAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BusinessAccountType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ContactID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "DisplayName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Duplicate": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DuplicateContactID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Email": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EntityType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastModifiedDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Type": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "EarningCodeGLAccounts": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BenefitExpenseAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BenefitExpenseSub": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EarningsAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EarningsSub": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PTOExpenseAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PTOExpenseSub": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxExpenseAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxExpenseSub": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "EarningCodeProjectSettings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BillableProject": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "DefaultProjectCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DefaultProjectTask": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "EarningCodeTaxDetailCA": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Taxability": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxName": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "EarningCodeTaxDetailUS": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "TaxCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxName": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "EarningIncreasingApplWage": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "EarningIncreasingApplWageDetails": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EarningIncreasingApplWageDetail"
                }
              },
              "InclusionType": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "EarningIncreasingApplWageDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EarningTypeCategory": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EarningTypeCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              }
            }
          }
        ]
      },
      "EarningTypeCode": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AccrueTimeOff": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Active": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Category": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ContributestoWCCCalculation": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EarningTypeCodeID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "GLAccounts": {
                "$ref": "#/components/schemas/EarningCodeGLAccounts"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Multiplier": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ProjectSettings": {
                "$ref": "#/components/schemas/EarningCodeProjectSettings"
              },
              "PublicHoliday": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "RegularTimeTypeCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxAndReportingCA": {
                "$ref": "#/components/schemas/TaxAndReportingCA"
              },
              "TaxAndReportingUS": {
                "$ref": "#/components/schemas/TaxAndReportingUS"
              }
            }
          }
        ]
      },
      "EarningTypeCodeCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/EarningTypeCode"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "Email": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Bcc": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Body": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Cc": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "From": {
                "$ref": "#/components/schemas/StringValue"
              },
              "FromEmailAccountDisplayName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "FromEmailAccountID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Incoming": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Internal": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "MailStatus": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Owner": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Parent": {
                "$ref": "#/components/schemas/GuidValue"
              },
              "ParentSummary": {
                "$ref": "#/components/schemas/StringValue"
              },
              "StartDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Subject": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TimeActivity": {
                "$ref": "#/components/schemas/TimeActivity"
              },
              "To": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Workgroup": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CreatedByID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CreatedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "NoteID": {
                "$ref": "#/components/schemas/GuidValue"
              },
              "RelatedEntityType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RelatedEntityNoteID": {
                "$ref": "#/components/schemas/GuidValue"
              },
              "RelatedEntityDescription": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "EmailChangeOrder": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ChangeOrder"
          }
        }
      },
      "EmailCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Email"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "EmailProFormaInvoice": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ProFormaInvoice"
          }
        }
      },
      "EmailProcessing": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Account": {
                "$ref": "#/components/schemas/IntValue"
              },
              "AccountEmailAccountID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "AssignedToMe": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "AssignedToOwner": {
                "$ref": "#/components/schemas/StringValue"
              },
              "IncludeFailed": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Result": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EmailProcessingRow"
                }
              },
              "Type": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "EmailProcessingCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/EmailProcessing"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "EmailProcessingRow": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "EmailAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "From": {
                "$ref": "#/components/schemas/StringValue"
              },
              "MailStatus": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Owner": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Selected": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "StartDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Subject": {
                "$ref": "#/components/schemas/StringValue"
              },
              "To": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "Employee": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Attributes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AttributeValue"
                }
              },
              "ContactInfo": {
                "$ref": "#/components/schemas/Contact"
              },
              "Delegates": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EmployeeDelegate"
                }
              },
              "EmployeeID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EmployeeName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EmployeeSettings": {
                "$ref": "#/components/schemas/EmployeeSettings"
              },
              "EmploymentHistory": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EmploymentHistoryRecord"
                }
              },
              "FinancialSettings": {
                "$ref": "#/components/schemas/EmployeeFinancialSettings"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "EmployeeClassWorkLocation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "DefaultWorkLocation": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "LocationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LocationName": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "EmployeeCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Employee"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "EmployeeDeduction": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Amount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ApplicableEarnings": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CalculationMethod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "MaximumAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "MaximumFrequency": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Percent": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ReportingTypeCA": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ReportingTypeUS": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "EmployeeDeductionOrBenefitDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Active": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ContributionAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ContributionMax": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ContributionMaximumFrequency": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ContributionPercent": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "DeductionAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "DeductionCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DeductionMax": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "DeductionMaximumFrequency": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DeductionPercent": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EndDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "GarnishmentDetails": {
                "$ref": "#/components/schemas/GarnishmentDetails"
              },
              "IsGarnish": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Sequence": {
                "$ref": "#/components/schemas/IntValue"
              },
              "StartDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "UseContributionDefaults": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "UseDeductionDefaults": {
                "$ref": "#/components/schemas/BooleanValue"
              }
            }
          }
        ]
      },
      "EmployeeDelegate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Delegate": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EmployeeName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DelegationOf": {
                "$ref": "#/components/schemas/StringValue"
              },
              "StartsOn": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ExpiresOn": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "IsActive": {
                "$ref": "#/components/schemas/BooleanValue"
              }
            }
          }
        ]
      },
      "EmployeeFinancialSettings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "APAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "APSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CashAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ExpenseAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ExpenseSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PaymentInstructions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BusinessAccountPaymentInstructionDetail"
                }
              },
              "PaymentMethod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PrepaymentAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PrepaymentSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SalesAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SalesSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxZone": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Terms": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "EmployeeGLAccounts": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BenefitExpenseAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BenefitExpenseSub": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BenefitLiabilityAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BenefitLiabilitySub": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DeductionLiabilityAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DeductionLiabilitySub": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EarningsAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EarningsSub": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PTOAssetAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PTOAssetSub": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PTOExpenseAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PTOExpenseSub": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PTOLiabilityAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PTOLiabilitySub": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxExpenseAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxExpenseSub": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxLiabilityAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxLiabilitySub": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "EmployeeGeneralInfo": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Calendar": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CalendarClassDefault": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "CertifiedProjectHoursperYear": {
                "$ref": "#/components/schemas/IntValue"
              },
              "DefaultUnion": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DefaultWCCCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ExemptFromCertReporting": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ExemptFromCertReportingClassDefault": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ExemptFromOvertimeRules": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ExemptFromOvertimeRulesClassDefault": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "NetPayMinClassDefault": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "NetPayMinimum": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "OverrideHoursPerYearForCertClassDefault": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "OverrideHrsPerYearForCertProjects": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "PayGroup": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PayGroupClassDefault": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "UnionClassDefault": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "UseClassDefaultValueHoursPerYearForCertifiedUseDflt": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "WCCCodeClassDefault": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "WeeksPerYearClassDefault": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "WorkingHoursPerWeek": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "WorkingHoursPerYear": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "WorkingWeeksPerYear": {
                "$ref": "#/components/schemas/ByteValue"
              }
            }
          }
        ]
      },
      "EmployeePaidTimeOff": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "PaidTimeOffDetails": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EmployeePaidTimeOffDetail"
                }
              },
              "UseCustomSettings": {
                "$ref": "#/components/schemas/BooleanValue"
              }
            }
          }
        ]
      },
      "EmployeePaidTimeOffDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AccrualMethod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "AccrualPercent": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Active": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "AllowNegativeBalance": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "AllowViewAvailablePTOPaidHours": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "BalanceLimit": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "BandingRule": {
                "$ref": "#/components/schemas/IntValue"
              },
              "CanOnlyDisbursefromCarryover": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "CarryoverHours": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CarryoverType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "FrontLoadingHours": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "HoursperYear": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "OnSettlement": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProbationPeriodBehaviour": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PTOBank": {
                "$ref": "#/components/schemas/StringValue"
              },
              "StartDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "TransferDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              }
            }
          }
        ]
      },
      "EmployeePaycheckEarningDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Account": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Amount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Branch": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CertifiedJob": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Code": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CostCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Date": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Hours": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "LaborItem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Location": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ManualRate": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Project": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Rate": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ShiftCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Task": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UnionLocal": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Units": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UnitType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WCCCode": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "EmployeePaycheckEarnings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Amount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Employee": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EmployeeType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Hours": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ManualAmount": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "RegularAmounttoBePaid": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "EmployeePaycheckSummary": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Amount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Employee": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EmployeeName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EmployeePaycheckEarnings": {
                "$ref": "#/components/schemas/EmployeePaycheckEarnings"
              },
              "Hours": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "PaycheckRef": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Rate": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "VoidPaycheckRef": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "EmployeePayrollClass": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EmployeePayrollClassID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "PayrollDefaults": {
                "$ref": "#/components/schemas/EmployeePayrollClassDefaults"
              }
            }
          }
        ]
      },
      "EmployeePayrollClassCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/EmployeePayrollClass"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "EmployeePayrollClassDefaults": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "CertifiedProjectHoursperYear": {
                "$ref": "#/components/schemas/IntValue"
              },
              "DefaultCalendar": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DefaultUnion": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DefaultWCCCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EmployeeType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ExemptFromCertifiedReporting": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ExemptFromOvertimeRules": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "HoursPerYearForCertified": {
                "$ref": "#/components/schemas/StringValue"
              },
              "MaximumPercentofNetPayforallGarnishments": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "NetPayMinimum": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "OverrideHoursPerYearforCertProject": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "PayGroup": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UsePayrollWorkLocationfromProject": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "WorkingHoursPerWeek": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "WorkingHoursPerYear": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "WorkingWeeksPerYear": {
                "$ref": "#/components/schemas/ByteValue"
              },
              "WorkLocations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EmployeeClassWorkLocation"
                }
              }
            }
          }
        ]
      },
      "EmployeePayrollSettings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Active": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "AddressInfo": {
                "$ref": "#/components/schemas/Address"
              },
              "CashAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ClassID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Compensation": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CompensationDetail"
                }
              },
              "DeductionsAndBenefits": {
                "$ref": "#/components/schemas/DeductionsAndBenefits"
              },
              "DirectDepositDetails": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectDepositDetail"
                }
              },
              "EmployeeID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EmployeeName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EmployeeType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EmploymentDates": {
                "$ref": "#/components/schemas/EmploymentDates"
              },
              "EmploymentRecords": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EmploymentRecord"
                }
              },
              "GeneralInfo": {
                "$ref": "#/components/schemas/EmployeeGeneralInfo"
              },
              "GLAccounts": {
                "$ref": "#/components/schemas/EmployeeGLAccounts"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "PaidTimeOff": {
                "$ref": "#/components/schemas/EmployeePaidTimeOff"
              },
              "PaymentMethod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Taxes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EmployeeTaxDetail"
                }
              },
              "TaxSettings": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaxSettingDetail"
                }
              },
              "EmployeeTypeClassDefault": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "WorkLocations": {
                "$ref": "#/components/schemas/EmployeeWorkLocations"
              }
            }
          }
        ]
      },
      "EmployeePayrollSettingsCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/EmployeePayrollSettings"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "EmployeeSettings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BranchID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Calendar": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CurrencyID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CurrencyRateTypeID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DepartmentID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EmployeeClass": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EmployeeRefNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EnableCurrencyOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "EnableRateOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "LaborItem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RegularHoursValidation": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ReportsTo": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RouteEmails": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Salesperson": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TimeCardIsRequired": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "UnionLocalID": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "EmployeeTaxDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Active": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "TaxCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxCodeSettings": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaxCodeSetting"
                }
              },
              "TaxDescription": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "EmployeeWorkLocationDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "DefaultWorkLocation": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "LocationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LocationName": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "EmployeeWorkLocations": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "UseClassDefaultValueUsePayrollProjectWorkLocationUseDflt": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "UsePayrollWorkLocationfromProject": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "WorkLocationClassDefaults": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "WorkLocationDetails": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EmployeeWorkLocationDetail"
                }
              }
            }
          }
        ]
      },
      "EmployerContribution": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Amount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ApplicableEarnings": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CalculationMethod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CertifiedReportingType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ContributestoGrossCalculation": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "MaximumAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "MaximumFrequency": {
                "$ref": "#/components/schemas/StringValue"
              },
              "NoFinancialTransaction": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Percent": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ReportingTypeCA": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ReportingTypeUS": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "EmployerTaxesIncreasingApplWage": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "EmployerTaxesIncreasingApplWageDetails": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EmployerTaxesIncreasingApplWageDetail"
                }
              },
              "InclusionType": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "EmployerTaxesIncreasingApplWageDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "TaxCategory": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxName": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "EmploymentDates": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "HireDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "TerminationDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              }
            }
          }
        ]
      },
      "EmploymentHistoryRecord": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Active": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "EndDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "PositionID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RehireEligible": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "StartDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "StartReason": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Terminated": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "TerminationReason": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "EmploymentRecord": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Active": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "EndDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "FinalPayment": {
                "$ref": "#/components/schemas/GuidValue"
              },
              "Position": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RehireEligible": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "StartDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "StartReason": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProbationPeriodEndDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Terminated": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "TerminationReason": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "Entity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "rowNumber": {
            "type": "integer",
            "format": "int64"
          },
          "note": {
            "$ref": "#/components/schemas/StringValue"
          },
          "custom": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/components/schemas/CustomField"
              }
            }
          },
          "error": {
            "type": "string"
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FileLink"
            }
          }
        }
      },
      "Event": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AllDay": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Attendees": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventAttendee"
                }
              },
              "Body": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Category": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EndDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "EndTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Internal": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Location": {
                "$ref": "#/components/schemas/StringValue"
              },
              "NoteID": {
                "$ref": "#/components/schemas/GuidValue"
              },
              "Priority": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RelatedActivities": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ActivityDetail"
                }
              },
              "Reminder": {
                "$ref": "#/components/schemas/ReminderDetail"
              },
              "ShowAs": {
                "$ref": "#/components/schemas/StringValue"
              },
              "StartDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Summary": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TimeActivity": {
                "$ref": "#/components/schemas/EventTimeActivity"
              },
              "CreatedByID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CreatedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "RelatedEntityType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RelatedEntityNoteID": {
                "$ref": "#/components/schemas/GuidValue"
              },
              "RelatedEntityDescription": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "EventAttendee": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Comment": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Email": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EventNoteID": {
                "$ref": "#/components/schemas/GuidValue"
              },
              "InvitationStatus": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Key": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Name": {
                "$ref": "#/components/schemas/StringValue"
              },
              "NameAttendeeName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Type": {
                "$ref": "#/components/schemas/IntValue"
              }
            }
          }
        ]
      },
      "EventCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Event"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "EventTimeActivity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BillableOvertime": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BillableTime": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Overtime": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TimeSpent": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ExpenseClaim": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ApprovalDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ApprovalDetails": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Approval"
                }
              },
              "BaseCurrencyID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ClaimedBy": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ClaimTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CurrencyID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CurrencyRate": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CustomerID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Date": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "DepartmentID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Details": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpenseClaimDetails"
                }
              },
              "FinancialDetails": {
                "$ref": "#/components/schemas/ExpenseClaimFinancialDetail"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "LocationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ReciprocalRate": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "RefNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxDetails": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpenseClaimTaxDetail"
                }
              },
              "TaxTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "VATExemptTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "VATTaxableTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "ExpenseClaimAPDocument": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Amount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "RefNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxZone": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Type": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ExpenseClaimCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ExpenseClaim"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "ExpenseClaimDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Amount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "AmountInClaimCurrency": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "APRefNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ARRefNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Billable": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Branch": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ClaimAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CostCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CurrencyID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CustomerID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Date": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EmployeePart": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ExpenseAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ExpenseItemID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ExpenseSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LocationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "NetAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ProjectID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProjectTaskID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Qty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "RefNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SalesAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SalesSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TaxCategory": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxZone": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TipAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UnitCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ExpenseClaimFinancialDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "APDocuments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpenseClaimAPDocument"
                }
              },
              "Branch": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PosttoPeriod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxZone": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ExpenseClaimTaxDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "DeductibleTaxRate": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ExpenseAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "IncludeinVATExemptTotal": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "PendingVAT": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ReverseVAT": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "StatisticalVAT": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "TaxableAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TaxAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TaxID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxRate": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TaxType": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ExpenseReceipt": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Branch": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ClaimAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ClaimedBy": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Date": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ExpenseItemID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ReceiptDetails": {
                "$ref": "#/components/schemas/ExpenseReceiptDetails"
              },
              "ReceiptID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxDetails": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ExpenseReceiptTaxDetails"
                }
              },
              "TaxTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "ExpenseReceiptCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ExpenseReceipt"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "ExpenseReceiptDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Amount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "BaseCurrencyID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Billable": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "CostCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CurrancyRateTypeID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CurrencyID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CurrencyRate": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CustomerID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EmployeePart": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ExpenseAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ExpenseClaimID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ExpenseClaimStatus": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ExpenseSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LocationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProjectID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProjectTaskID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Qty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ReciprocalRate": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "RefNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SalesAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SalesSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxCategory": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxZone": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UnitCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ExpenseReceiptTaxDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "DeductibleTaxRate": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ExpenseAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "IncludeInVATExemptTotal": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "PendingVAT": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ReverseVAT": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "StatisticalVAT": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "TaxableAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TaxAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TaxID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxRate": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TaxType": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ExportCardEvent": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Event"
          }
        }
      },
      "ExternalCommitment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AccountGroup": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CommittedCOAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CommittedCOQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CommittedInvoicedAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CommittedInvoicedQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CommittedOpenAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CommittedOpenQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CommittedReceivedQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CostCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ExternalRefNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "OriginalCommittedAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "OriginalCommittedQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ProjectID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProjectTaskID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RelatedDocument": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RevisedCommittedAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "RevisedCommittedQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Type": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ExternalCommitmentCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ExternalCommitment"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "FOBPoint": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "FOBPointID": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "FOBPointCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/FOBPoint"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "FileLink": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "filename": {
            "type": "string"
          },
          "href": {
            "type": "string",
            "format": "uri"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "FinancialPeriod": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "CreatedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Details": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FinancialPeriodDetail"
                }
              },
              "FinancialYear": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "NbrOfPeriods": {
                "$ref": "#/components/schemas/ShortValue"
              },
              "StartDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "UserDefinedPeriods": {
                "$ref": "#/components/schemas/BooleanValue"
              }
            }
          }
        ]
      },
      "FinancialPeriodCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/FinancialPeriod"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "FinancialPeriodDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AdjustmentPeriod": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ClosedInAP": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ClosedInAR": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ClosedInCA": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ClosedInFA": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ClosedInIN": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EndDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "FinancialPeriodID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LengthInDays": {
                "$ref": "#/components/schemas/IntValue"
              },
              "PeriodNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "StartDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "FinancialSettings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BillSeparately": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Branch": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CashDiscountDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "CustomerTaxZone": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DueDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "EntityUsageType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InvoiceDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "InvoiceNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OriginalOrderNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OriginalOrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OverrideTaxZone": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Owner": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PostPeriod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Terms": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "FinancialYear": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AdjustToPeriodStart": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "BelongsToNextYear": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "CreatedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "DayOfWeek": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Details": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FinancialYearPeriodDetail"
                }
              },
              "FinancialYearStartsOn": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "FirstFinancialYear": {
                "$ref": "#/components/schemas/StringValue"
              },
              "FirstPeriodStartDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "HasAdjustmentPeriod": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "LengthOfFinancialPeriodInDays": {
                "$ref": "#/components/schemas/ShortValue"
              },
              "NbrOfFinancialPeriods": {
                "$ref": "#/components/schemas/ShortValue"
              },
              "PeriodsStartDayOfWeek": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PeriodType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UserDefinedPeriods": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "YearEndCalculationMethod": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "FinancialYearCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/FinancialYear"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "FinancialYearPeriodDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EndDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "PeriodNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "StartDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              }
            }
          }
        ]
      },
      "FinishCountingPhysicalInventory": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/PhysicalInventoryReview"
          }
        }
      },
      "GarnishmentDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "GarnCourtDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "GarnCourtName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "GarnDocRefNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "GarnOrigAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "GarnPaidAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "GarnVendorID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "GarnVendorInvDescr": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "GuidValue": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "format": "uuid"
          },
          "error": {
            "type": "string"
          }
        }
      },
      "HoldChangeOrder": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ChangeOrder"
          }
        }
      },
      "HoldProFormaInvoice": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ProFormaInvoice"
          }
        }
      },
      "HoldProject": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Project"
          }
        }
      },
      "HoldProjectTask": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ProjectTask"
          }
        }
      },
      "HoldProjectTemplate": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ProjectTemplate"
          }
        }
      },
      "HttpError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "exceptionMessage": {
            "type": "string",
            "nullable": true
          },
          "exceptionType": {
            "type": "string",
            "nullable": true
          },
          "stackTrace": {
            "type": "string",
            "nullable": true
          },
          "modelState": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "messageDetail": {
            "type": "string"
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "ImportEmployeeTaxes": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/EmployeePayrollSettings"
          }
        }
      },
      "IntValue": {
        "type": "object",
        "properties": {
          "value": {
            "type": "integer",
            "format": "int32"
          },
          "error": {
            "type": "string"
          }
        }
      },
      "InventoryAdjustment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Date": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Details": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InventoryAdjustmentDetail"
                }
              },
              "ExternalRef": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Hold": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ReferenceNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TotalCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TotalQty": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "InventoryAdjustmentCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/InventoryAdjustment"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "InventoryAdjustmentDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BranchID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CostCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CostLayerType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ExpirationDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ExtendedCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LocationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LotSerialNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Project": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProjectTask": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Qty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ReasonCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ReceiptNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SpecialOrderNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WarehouseID": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "InventoryAllocationInquiry": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Available": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "AvailableForIssue": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "AvailableForShipping": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "BaseUnit": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InTransit": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "InTransitToSO": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InventoryIssues": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "InventoryReceipts": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "KitAssemblyDemand": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "KitAssemblySupply": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Location": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OnHand": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "OnLocationNotAvailable": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PurchaseForSO": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PurchaseForSOPrepared": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PurchaseOrders": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PurchasePrepared": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PurchaseReceipts": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ReceiptsForSO": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Results": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InventoryAllocationRow"
                }
              },
              "SOAllocated": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "SOBackOrdered": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "SOBooked": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "SOPrepared": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "SOShipped": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "SOToPurchase": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TotalAddition": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TotalDeduction": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "WarehouseID": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "InventoryAllocationInquiryCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/InventoryAllocationInquiry"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "InventoryAllocationRow": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AllocationDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "AllocationType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DocType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Expired": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Location": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LotSerialNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Module": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Qty": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "InventoryFileUrls": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "FileType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "FileURL": {
                "$ref": "#/components/schemas/StringValue"
              },
              "NoteID": {
                "$ref": "#/components/schemas/GuidValue"
              }
            }
          }
        ]
      },
      "InventoryIssue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ControlAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ControlQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Date": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Details": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InventoryIssueDetail"
                }
              },
              "ExternalRef": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "PostPeriod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ReferenceNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TotalAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TotalCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TotalQty": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "InventoryIssueCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/InventoryIssue"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "InventoryIssueDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Allocations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InventoryIssueDetailAllocation"
                }
              },
              "Branch": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CostCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CostLayerType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ExpirationDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ExtCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ExtPrice": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineNumber": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Location": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LotSerialNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Project": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProjectTask": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Qty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ReasonCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SpecialOrderNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TranType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UnitCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UnitPrice": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WarehouseID": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "InventoryIssueDetailAllocation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ExpirationDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Location": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LotSerialNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Qty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "SplitLineNumber": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "InventoryItemCrossReference": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AlternateID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "AlternateType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "VendorOrCustomer": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "InventoryItemUOMConversion": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ConversionFactor": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "FromUOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "MultiplyOrDivide": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ToUOM": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "InventoryQuantityAvailable": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Results": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InventoryQuantityAvailableDetail"
                }
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              }
            }
          }
        ]
      },
      "InventoryQuantityAvailableCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/InventoryQuantityAvailable"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "InventoryQuantityAvailableDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "QtyAvailable": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "InventoryReceipt": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ControlCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ControlQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Date": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Details": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InventoryReceiptDetail"
                }
              },
              "Hold": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "PostPeriod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ReferenceNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TotalCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TotalQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TransferNbr": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "InventoryReceiptCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/InventoryReceipt"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "InventoryReceiptDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Allocations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InventoryReceiptDetailAllocation"
                }
              },
              "CostCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CostLayerType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ExpirationDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ExtCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineNumber": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Location": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LotSerialNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "POReceiptNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Project": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProjectTask": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ReasonCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Qty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "SpecialOrderNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UnitCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WarehouseID": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "InventoryReceiptDetailAllocation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ExpirationDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Location": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LotSerialNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Qty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "SplitLineNumber": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "InventorySummaryInquiry": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ExpandByLotSerialNbr": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LocationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Results": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InventorySummaryRow"
                }
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WarehouseID": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "InventorySummaryInquiryCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/InventorySummaryInquiry"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "InventorySummaryRow": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BaseUOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EstimatedTotalCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "EstimatedUnitCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ExpirationDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "LocationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LotSerialNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "QtyAvailable": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "QtyAvailableForShipment": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "QtyNotAvailable": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "QtyOnHand": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WarehouseID": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "InviteAllEvent": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Event"
          }
        }
      },
      "InviteEvent": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Event"
          }
        }
      },
      "Invoice": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Amount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ApplicationsCreditMemo": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvoiceApplicationsCreditMemo"
                }
              },
              "ApplicationsDefault": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvoiceApplicationsDefault"
                }
              },
              "Balance": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "BillingPrinted": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "BillToContact": {
                "$ref": "#/components/schemas/DocContact"
              },
              "BillToContactOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "CreatedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Customer": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CustomerOrder": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Date": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Details": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvoiceDetail"
                }
              },
              "DiscountDetails": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvoiceDiscountDetail"
                }
              },
              "DueDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Hold": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "LinkARAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LinkBranch": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LocationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PostPeriod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Project": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ReferenceNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ShipToContact": {
                "$ref": "#/components/schemas/DocContact"
              },
              "ShipToContactOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "TaxDetails": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InvoiceTaxDetail"
                }
              },
              "IsTaxValid": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "TaxTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Terms": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Type": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "InvoiceApplicationsCreditMemo": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AmountPaid": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Balance": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Customer": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CustomerOrder": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DocType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PostPeriod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ReferenceNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "InvoiceApplicationsDefault": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AmountPaid": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Balance": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CashDiscountTaken": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "DocType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PaymentDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ReferenceNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "InvoiceAppointment": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Appointment"
          }
        }
      },
      "InvoiceCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Invoice"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "InvoiceDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Account": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Amount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Branch": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CalculateDiscountsOnImport": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "CostCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DiscountAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ExtendedPrice": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "ProjectTask": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Qty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Subaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TransactionDescription": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UnitPrice": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxCategory": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "InvoiceDiscountDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DiscountableAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "DiscountableQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "DiscountAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "DiscountCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DiscountPercent": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ExternalDiscountCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ManualDiscount": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "OrderNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RetainedDiscount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "SequenceID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SkipDiscount": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Type": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "InvoiceOrder": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ServiceOrder"
          }
        }
      },
      "InvoiceTaxDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "TaxableAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TaxAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TaxID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxRate": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "ItemClass": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Attributes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ItemClassAtrribute"
                }
              },
              "AvailabilityCalculationRule": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BaseUOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ClassID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CountryOfOrigin": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DefaultWarehouseID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ItemType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "LotSerialClass": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PostingClass": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PriceClass": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PurchaseUOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SalesUOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "StockItem": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "TariffCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxCategoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ValuationMethod": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ItemClassAtrribute": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AttributeID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Required": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "SortOrder": {
                "$ref": "#/components/schemas/ShortValue"
              }
            }
          }
        ]
      },
      "ItemClassCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ItemClass"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "ItemPriceClassesDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "PriceClassID": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ItemSalesCategory": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "CategoryID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Members": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ItemSalesCategoryMember"
                }
              },
              "ParentCategoryID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Path": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SortOrder": {
                "$ref": "#/components/schemas/IntValue"
              },
              "NoteID": {
                "$ref": "#/components/schemas/GuidValue"
              }
            }
          }
        ]
      },
      "ItemSalesCategoryCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ItemSalesCategory"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "ItemSalesCategoryMember": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ItemClass": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ItemStatus": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ItemWarehouse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "CreatedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "DefaultIssueFrom": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DefaultReceiptTo": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DefaultSubitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InventoryAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InventorySubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "MaxQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "MSRP": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "OverrideInventoryAccountSubaccount": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "OverridePreferredVendor": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "OverridePrice": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "OverrideReplenishmentSettings": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "OverrideServiceLevel": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "OverrideStandardCost": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "OverrideProductManager": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "OverrideMaxQty": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "OverrideReorderPoint": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "OverrideSafetyStock": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "PreferredLocation": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PreferredVendor": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProductManager": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProductWorkgroup": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ReorderPoint": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ReplenishmentClass": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ReplenishmentMethod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ReplenishmentSource": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ReplenishmentWarehouse": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SafetyStock": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Seasonality": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ServiceLevel": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WarehouseID": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ItemWarehouseCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ItemWarehouse"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "ItemsDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "JournalTransaction": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BatchNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BranchID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CreatedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "CurrencyID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Details": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JournalTransactionDetail"
                }
              },
              "Hold": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "LedgerID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Module": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PostPeriod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TransactionDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              }
            }
          }
        ]
      },
      "JournalTransactionCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/JournalTransaction"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "JournalTransactionDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Account": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BranchID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CostCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CreditAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "DebitAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "IsNonPM": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "NonBillable": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Project": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProjectTask": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProjectTransactionID": {
                "$ref": "#/components/schemas/LongValue"
              },
              "Qty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ReferenceNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TransactionDescription": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "VendorOrCustomer": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "KitAssembly": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Allocations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/KitAssemblyAllocation"
                }
              },
              "Date": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Hold": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "KitInventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LocationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "NonStockComponents": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/KitAssemblyNonStockComponent"
                }
              },
              "PostPeriod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Qty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ReasonCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ReferenceNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Revision": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "StockComponents": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/KitAssemblyStockComponent"
                }
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Type": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WarehouseID": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "KitAssemblyAllocation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ExpirationDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "LocationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LotSerialNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Qty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "SplitLineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "KitAssemblyCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/KitAssembly"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "KitAssemblyNonStockComponent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ComponentQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "NonStockInventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Qty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ReasonCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UnitCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "KitAssemblyStockComponent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Allocations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/KitAssemblyStockComponentAllocation"
                }
              },
              "ComponentQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "LocationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Qty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ReasonCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "StockInventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UnitCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "KitAssemblyStockComponentAllocation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "DocType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ExpirationDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "LocationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LotSerialNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Qty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ReferenceNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SplitLineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "KitNonStockComponent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AllowComponentQtyVariance": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ComponentQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "MaxComponentQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "MinComponentQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "NonStockInventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "KitSpecification": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Active": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "IsNonStock": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "KitInventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "NonStockComponents": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/KitNonStockComponent"
                }
              },
              "RevisionID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "StockComponents": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/KitStockComponent"
                }
              }
            }
          }
        ]
      },
      "KitSpecificationCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/KitSpecification"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "KitStockComponent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AllowComponentQtyVariance": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ComponentQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "MaxComponentQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "MinComponentQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "StockInventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "LaborCostRate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "EffectiveDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Employee": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LaborItem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Project": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProjectTask": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LaborRateType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UnionLocal": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Results": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LaborRate"
                }
              }
            }
          }
        ]
      },
      "LaborCostRateCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/LaborCostRate"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "LaborRate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AnnualRate": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CurrencyID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EffectiveDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "EmployeeID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EmployeeName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ExternalRefNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "HourlyRate": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "LaborItem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LaborRateType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProjectID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProjectTaskID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RecordID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "RegularHoursPerWeek": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TypeOfEmployment": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UnionLocalID": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "Lead": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Activities": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ActivityDetail"
                }
              },
              "Address": {
                "$ref": "#/components/schemas/Address"
              },
              "Attributes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AttributeValue"
                }
              },
              "BusinessAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Campaigns": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CampaignDetail"
                }
              },
              "CompanyName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ContactMethod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DoNotCall": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "DoNotEmail": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "DoNotFax": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "DoNotMail": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Duplicate": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DuplicateFound": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Duplicates": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DuplicateDetail"
                }
              },
              "Email": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Fax": {
                "$ref": "#/components/schemas/StringValue"
              },
              "FaxType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "FirstName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "JobTitle": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LanguageOrLocale": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastIncomingActivity": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "LastName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastOutgoingActivity": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "LeadClass": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LeadDisplayName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LeadID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "MarketingLists": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MarketingListDetail"
                }
              },
              "NoMarketing": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "NoMassMail": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Owner": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OwnerEmployeeName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ParentAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone1": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone1Type": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone2": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone2Type": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone3": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone3Type": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Reason": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Relations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RelationDetail"
                }
              },
              "Source": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SourceCampaign": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Title": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WebSite": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Workgroup": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WorkgroupDescription": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "NoteID": {
                "$ref": "#/components/schemas/GuidValue"
              },
              "Active": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RefContactID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "ConvertedBy": {
                "$ref": "#/components/schemas/StringValue"
              },
              "QualificationDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              }
            }
          }
        ]
      },
      "LeadCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Lead"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "Ledger": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Branches": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LedgerBranches"
                }
              },
              "Companies": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LedgerCompanies"
                }
              },
              "ConsolidationSource": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Currency": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "LedgerID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Type": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "LedgerBranches": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Active": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "BranchID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BranchName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CompanyName": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "LedgerCompanies": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Active": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Company": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CompanyName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CompanyType": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "LedgerCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Ledger"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "LockProjectBudget": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Project"
          }
        }
      },
      "LockProjectCommitments": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Project"
          }
        }
      },
      "LongValue": {
        "type": "object",
        "properties": {
          "value": {
            "type": "integer",
            "format": "int64"
          },
          "error": {
            "type": "string"
          }
        }
      },
      "LotSerialClass": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AssignmentMethod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ClassID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "IssueMethod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Segments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LotSerialClassSegment"
                }
              },
              "TrackExpirationDate": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "TrackingMethod": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "LotSerialClassCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/LotSerialClass"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "LotSerialClassSegment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "SegmentNbr": {
                "$ref": "#/components/schemas/ShortValue"
              },
              "Type": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Value": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "MarkBusinessAccountAsValidated": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/BusinessAccount"
          }
        }
      },
      "MarkContactAsValidated": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Contact"
          }
        }
      },
      "MarkLeadAsValidated": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Lead"
          }
        }
      },
      "MarketingListDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ContactID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "DynamicList": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Format": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ListName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "MarketingListID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Subscribed": {
                "$ref": "#/components/schemas/BooleanValue"
              }
            }
          }
        ]
      },
      "MatrixItems": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "DefaultPrice": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "MSRP": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ItemStatus": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ExportToExternal": {
                "$ref": "#/components/schemas/BooleanValue"
              }
            }
          }
        ]
      },
      "NonStockItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Attributes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AttributeValue"
                }
              },
              "BaseUnit": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CrossReferences": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InventoryItemCrossReference"
                }
              },
              "CurrentCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "DefaultPrice": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "DeferralAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DeferralSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EffectiveDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ExpenseAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ExpenseAccrualAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ExpenseAccrualSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ExpenseSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "IsKit": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "IsAKit": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ItemClass": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ItemStatus": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ItemType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "PendingCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PendingCostDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "POAccrualAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "POAccrualSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PostingClass": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PriceClass": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PurchasePriceVarianceAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PurchasePriceVarianceSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PurchaseUnit": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ReasonCodeSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RequireReceipt": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "RequireShipment": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "SalesAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SalesCategories": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NonStockItemSalesCategory"
                }
              },
              "SalesSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SalesUnit": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxCategory": {
                "$ref": "#/components/schemas/StringValue"
              },
              "VendorDetails": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NonStockItemVendorDetail"
                }
              },
              "Volume": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "VolumeUOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Weight": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "WeightUOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CurySpecificMSRP": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CurySpecificPrice": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Availability": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ExportToExternal": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Categories": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CategoryStockItem"
                }
              },
              "Content": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CurrentStdCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CustomURL": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DimensionWeight": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "FileUrls": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InventoryFileUrls"
                }
              },
              "MetaDescription": {
                "$ref": "#/components/schemas/StringValue"
              },
              "MetaKeywords": {
                "$ref": "#/components/schemas/StringValue"
              },
              "MSRP": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "NoteID": {
                "$ref": "#/components/schemas/GuidValue"
              },
              "PageTitle": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SearchKeywords": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TemplateItemID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Visibility": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "NonStockItemCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/NonStockItem"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "NonStockItemSalesCategory": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "CategoryID": {
                "$ref": "#/components/schemas/IntValue"
              }
            }
          }
        ]
      },
      "NonStockItemVendorDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "RecordID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "VendorID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "VendorName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Default": {
                "$ref": "#/components/schemas/BooleanValue"
              }
            }
          }
        ]
      },
      "OpenSalesOrder": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/SalesOrder"
          }
        }
      },
      "OpenTimeEntry": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/TimeEntry"
          }
        }
      },
      "Opportunity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Activities": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ActivityDetail"
                }
              },
              "Address": {
                "$ref": "#/components/schemas/Address"
              },
              "Amount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Attributes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AttributeValue"
                }
              },
              "Branch": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BusinessAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ClassID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ContactDisplayName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ContactID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "ContactInformation": {
                "$ref": "#/components/schemas/OpportunityContact"
              },
              "ConvertedLeadDisplayName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ConvertedLeadID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "CurrencyID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CurrencyViewState": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Details": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Discount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Discounts": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OpportunityDiscount"
                }
              },
              "Estimation": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Location": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ManualAmount": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "OpportunityID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Override": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Owner": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OwnerEmployeeName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ParentAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Products": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OpportunityProduct"
                }
              },
              "Project": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Reason": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Relations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RelationDetail"
                }
              },
              "Source": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SourceCampaign": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Stage": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subject": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxDetails": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OpportunityTaxDetail"
                }
              },
              "TaxZone": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Total": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "WeightTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "WorkgroupDescription": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WorkgroupID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "NoteID": {
                "$ref": "#/components/schemas/GuidValue"
              }
            }
          }
        ]
      },
      "OpportunityContact": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Attention": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CompanyName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Email": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Fax": {
                "$ref": "#/components/schemas/StringValue"
              },
              "FaxType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "FirstName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone1": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone1Type": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone2": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone2Type": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone3": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone3Type": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Position": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Title": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WebSite": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "OpportunityCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Opportunity"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "OpportunityDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Currency": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DisplayName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Estimation": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Owner": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Probability": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Stage": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subject": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Total": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Workgroup": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "OpportunityDiscount": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "DiscountableAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "DiscountableQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "DiscountAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "DiscountCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DiscountPercent": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "FreeItem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "FreeItemQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "ManualDiscount": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "SequenceID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SkipDiscount": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Type": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "OpportunityProduct": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Amount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Discount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "DiscountAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "DiscountCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DiscountSequence": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ExternalPrice": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "FreeItem": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ManualDiscount": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "OpportunityProductID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "ProjectTask": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Qty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxCategory": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TransactionDescription": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UnitPrice": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Warehouse": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SkipLineDiscounts": {
                "$ref": "#/components/schemas/BooleanValue"
              }
            }
          }
        ]
      },
      "OpportunityTaxDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "IncludeInVATExemptTotal": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "PendingVAT": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ReverseVAT": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "StatisticalVAT": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "TaxableAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TaxAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TaxID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxRate": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TaxType": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "OrderRisks": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Message": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Recommendation": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Score": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "PTOBank": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AccrualMethod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "AccrueonCertifiedJobOnly": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Active": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ApplyBandingRules": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "BandingRules": {
                "$ref": "#/components/schemas/PTOBankBandingRule"
              },
              "CarryoverType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CreateFinTransactions": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "DefaultDisbursingType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DisbursingEarningType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EmployeeClassSettings": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PTOBankEmployeeClassSetting"
                }
              },
              "GLAccounts": {
                "$ref": "#/components/schemas/PTOBankGLAccounts"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "OnSettlement": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PTOBankID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TransferDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "TransferDateDay": {
                "$ref": "#/components/schemas/IntValue"
              },
              "TransferDateMonth": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TransferDateType": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "PTOBankBandingRule": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BandingRuleDetails": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PTOBankBandingRuleDetail"
                }
              },
              "RoundingMethodforYearsofService": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "PTOBankBandingRuleDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AccrualPercent": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "BalanceLimit": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CarryoverHours": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "EmployeeClass": {
                "$ref": "#/components/schemas/StringValue"
              },
              "FrontLoadingHours": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "HoursperYear": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "YearsofService": {
                "$ref": "#/components/schemas/IntValue"
              }
            }
          }
        ]
      },
      "PTOBankCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/PTOBank"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "PTOBankEmployeeClassSetting": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AccrualPercent": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Active": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "AllowNegativeBalance": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "BalanceLimit": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CarryoverHours": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "DisburseOnlyfromCarryover": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "EffectiveDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "EmployeeClass": {
                "$ref": "#/components/schemas/StringValue"
              },
              "FrontLoadingHours": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "HoursperYear": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ProbationPeriodBehaviour": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "PTOBankGLAccounts": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AssetAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "AssetSub": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ExpenseAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ExpenseSub": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LiabilityAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LiabilitySub": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "PauseAppointment": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Appointment"
          }
        }
      },
      "PayGroup": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BenefitExpenseAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BenefitExpenseSub": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BenefitLiabilityAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BenefitLiabilitySub": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DeductionLiabilityAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DeductionLiabilitySub": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EarningsAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EarningsSub": {
                "$ref": "#/components/schemas/StringValue"
              },
              "IsDefault": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "PayGroupID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PayGroupName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PTOAssetAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PTOAssetSub": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PTOExpenseAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PTOExpenseSub": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PTOLiabilityAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PTOLiabilitySub": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxExpenseAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxExpenseSub": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxLiabilityAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxLiabilitySub": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UserRole": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "PayGroupCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/PayGroup"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "PayPeriod": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "NumberofPeriods": {
                "$ref": "#/components/schemas/ShortValue"
              },
              "Override": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "PayGroup": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PaymentPeriods": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PaymentPeriod"
                }
              },
              "StartDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Year": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "PayPeriodCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/PayPeriod"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "Payment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ApplicationDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ApplicationHistory": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PaymentApplicationHistoryDetail"
                }
              },
              "AppliedToDocuments": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Branch": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CardAccountNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "CashAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Charges": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PaymentCharge"
                }
              },
              "CreditCardProcessingInfo": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreditCardProcessingDetail"
                }
              },
              "CurrencyID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CustomerID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DocumentsToApply": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PaymentDetail"
                }
              },
              "Hold": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "IsCCPayment": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "OrdersToApply": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PaymentOrderDetail"
                }
              },
              "PaymentAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PaymentMethod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PaymentRef": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ReferenceNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Type": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ProcessingCenterID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SaveCard": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "CreditCardTransactionInfo": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreditCardTransactionDetail"
                }
              },
              "ExternalRef": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrigTransaction": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BranchID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CustomerLocationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "IsNewCard": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "NoteID": {
                "$ref": "#/components/schemas/GuidValue"
              },
              "AvailableBalance": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "AppliedToOrders": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "PaymentApplicationHistoryDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AdjustedDocType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "AdjustedRefNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "AdjustingDocType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "AdjustingRefNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "AdjustmentNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "AdjustsVAT": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "AmountPaid": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ApplicationPeriod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Balance": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "BalanceWriteOff": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "BatchNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CashDiscountBalance": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CashDiscountDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "CashDiscountTaken": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CurrencyID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Customer": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CustomerOrder": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Date": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DisplayDocType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DisplayRefNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DueDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "PostPeriod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "VATCreditMemo": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "PaymentCharge": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AccountID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Amount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DocType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EntryTypeID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "RefNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SubID": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "PaymentCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Payment"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "PaymentDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AmountPaid": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "BalanceWriteOff": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CashDiscountTaken": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CustomerOrder": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DocLineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "DocType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ReferenceNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WriteOffReasonCode": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "PaymentMethod": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Active": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "AllowedCashAccounts": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PaymentMethodAllowedCashAccountDetail"
                }
              },
              "CreatedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "IntegratedProcessing": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "MeansOfPayment": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PaymentMethodID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProcessingCenters": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PaymentMethodProcessingCenterDetail"
                }
              },
              "RequireRemittanceInformationforCashAccount": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "UseInAP": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "UseInAR": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "UseInPR": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "SetPaymentDatetoBankTransactionDate": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "SettingsForPR": {
                "$ref": "#/components/schemas/SettingsForPR"
              }
            }
          }
        ]
      },
      "PaymentMethodAllowedCashAccountDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "APDefault": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "APLastRefNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "APSuggestNextNbr": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ARDefault": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ARDefaultForRefund": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ARLastRefNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ARSuggestNextNbr": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "BatchLastRefNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Branch": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CashAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PaymentMethod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UseInAP": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "UseInAR": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "UseInPR": {
                "$ref": "#/components/schemas/BooleanValue"
              }
            }
          }
        ]
      },
      "PaymentMethodCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "PaymentMethodProcessingCenterDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Active": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Default": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "PaymentMethod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProcCenterID": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "PaymentOrderDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AppliedToOrder": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "OrderNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrderType": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "PaymentPeriod": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EndDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "FinYear": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "PayPeriodID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PeriodNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "StartDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "TransactionDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              }
            }
          }
        ]
      },
      "PayrollBatch": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BatchID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DeductionsAndBenefitsDetails": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BatchDeductionOrBenefitDetail"
                }
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EarningDetails": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BatchEarningDetail"
                }
              },
              "EmployeeSummary": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EmployeePaycheckSummary"
                }
              },
              "Hold": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "NumberofEmployees": {
                "$ref": "#/components/schemas/IntValue"
              },
              "OvertimeRules": {
                "$ref": "#/components/schemas/BatchOvertimeRules"
              },
              "PayGroup": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PayPeriod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TotalEarnings": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TotalHourQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PayrollType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PeriodEnd": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "PeriodStart": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TransactionDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              }
            }
          }
        ]
      },
      "PayrollBatchCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/PayrollBatch"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "PayrollUnionLocal": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Active": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "DeductionsAndBenefits": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UnionDeductionOrBenefitDetail"
                }
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EarningRates": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UnionEarningRateDetail"
                }
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Location": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PayrollUnionLocalID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Vendor": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "PayrollUnionLocalCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/PayrollUnionLocal"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "PayrollWCCCode": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Country": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WCCCodes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WCCCode"
                }
              }
            }
          }
        ]
      },
      "PayrollWCCCodeCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/PayrollWCCCode"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "PhysicalInventoryCount": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Details": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalInventoryCountDetail"
                }
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Location": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LotSerialNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ReferenceNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "PhysicalInventoryCountCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/PhysicalInventoryCount"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "PhysicalInventoryCountDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BookQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Location": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LotSerialNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PhysicalQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ReferenceNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "PhysicalInventoryReview": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "CreatedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Details": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhysicalInventoryReviewDetail"
                }
              },
              "FreezeDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ReferenceNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TotalPhysicalQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TotalVarianceCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TotalVarianceQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TypeID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WarehouseID": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "PhysicalInventoryReviewCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/PhysicalInventoryReview"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "PhysicalInventoryReviewDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BookQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ExpirationDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ExtendedVarianceCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "LocationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LotSerialNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PhysicalQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ReasonCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TagNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "UnitCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "VarianceQty": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "PrepareInvoice": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Shipment"
          }
        }
      },
      "PrepareSalesInvoice": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/SalesOrder"
          }
        }
      },
      "ProFormaFinancialDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ARDocType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ARRefNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Branch": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CashDiscountDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "CustomerTaxZone": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CustomerUsageType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DueDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Terms": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ProFormaInvoice": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AmountDue": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ApprovalDetails": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Approval"
                }
              },
              "BillingSettings": {
                "$ref": "#/components/schemas/BillToSettings"
              },
              "CurrencyID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CustomerID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EffectiveDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ExternalRefNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "FinancialDetails": {
                "$ref": "#/components/schemas/ProFormaFinancialDetails"
              },
              "Hold": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "InvoiceDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "InvoiceTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Location": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PostPeriod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProgressBilling": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProgressBilling"
                }
              },
              "ProgressBillingTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ProjectID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RefNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RetainageTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxDetails": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProFormaTaxDetail"
                }
              },
              "TaxTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TimeAndMaterial": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TimeAndMaterial"
                }
              },
              "TimeAndMaterialTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "ProFormaInvoiceCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ProFormaInvoice"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "ProFormaTaxDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "RetainedTax": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "RetainedTaxable": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TaxableAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TaxAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TaxID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxRate": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "ProcessAllEmailProcessing": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/EmailProcessing"
          }
        }
      },
      "ProcessEmail": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Email"
          }
        }
      },
      "ProcessEmailProcessing": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/EmailProcessing"
          }
        }
      },
      "ProgressBilling": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ActualAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Amount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "AmountToInvoice": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Branch": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CostCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CurrentInvoiced": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "DeferralCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DraftInvoicesAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PreviouslyInvoiced": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ProjectTaskID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Retainage": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "RetainageAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "RevisedBudgetedAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "SalesAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SalesSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "StoredMaterial": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TaxCategory": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TotalCompleted": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "Project": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ActivityHistory": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProjectActivity"
                }
              },
              "ApprovalDetails": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Approval"
                }
              },
              "Assets": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Attributes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AttributeValue"
                }
              },
              "Balances": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProjectBalance"
                }
              },
              "BillingAndAllocationSettings": {
                "$ref": "#/components/schemas/ProjectBillingAndAllocationSettings"
              },
              "BillToSettings": {
                "$ref": "#/components/schemas/BillToSettings"
              },
              "Customer": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Employees": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProjectEmployee"
                }
              },
              "Equipments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProjectEquipment"
                }
              },
              "Expenses": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ExternalRefNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "GLAccounts": {
                "$ref": "#/components/schemas/ProjectGLAccount"
              },
              "Hold": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Income": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Invoices": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProjectProFormaDetails"
                }
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Liabilities": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ProjectID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProjectProperties": {
                "$ref": "#/components/schemas/ProjectProperties"
              },
              "ProjectTemplateID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UnionLocals": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProjectUnionLocal"
                }
              },
              "VisibilitySettings": {
                "$ref": "#/components/schemas/VisibilitySettings"
              },
              "Retainage": {
                "$ref": "#/components/schemas/ProjectRetainage"
              },
              "ProjectAddress": {
                "$ref": "#/components/schemas/ProjectAddress"
              }
            }
          }
        ]
      },
      "ProjectActivity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Billable": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "BillableOvertime": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BillableTime": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Category": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Overtime": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Owner": {
                "$ref": "#/components/schemas/StringValue"
              },
              "StartDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Summary": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TimeSpent": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Type": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Workgroup": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ProjectAddress": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AddressLine1": {
                "$ref": "#/components/schemas/StringValue"
              },
              "City": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Country": {
                "$ref": "#/components/schemas/StringValue"
              },
              "State": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PostalCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Latitude": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Longitude": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "ProjectBalance": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AccountGroup": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ActualAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ActualOpenCommittedAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "BudgetedCOAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CommittedCOAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CommittedInvoicedAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CommittedOpenAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OriginalBudgetedAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "OriginalCommittedAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Performance": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "RevisedBudgetedAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "RevisedCommittedAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "VarianceAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "ProjectBillingAndAllocationSettings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AllocationRule": {
                "$ref": "#/components/schemas/StringValue"
              },
              "AutomaticallyReleaseARDocuments": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "BillingPeriod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BillingRule": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Branch": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CreateProFormaOnBilling": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "LastBillingDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "NextBillingDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "RateTable": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RunAllocationOnReleaseOfProjectTransactions": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Terms": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UseTMRevenueBudgetLimits": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "BillingCurrency": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ProjectBudget": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AccountGroup": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ActualAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ActualPlusOpenCommittedAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ActualQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "AutoCompleted": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "BudgetedCOAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "BudgetedCOQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CommittedCOAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CommittedCOQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CommittedInvoicedAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CommittedInvoicedQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CommittedOpenAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CommittedOpenQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CommittedReceivedQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Completed": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CostAtCompletion": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CostCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CostToComplete": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DraftInvoicesAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastCostAtCompletion": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "LastCostToComplete": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "LastPercentageOfCompletion": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "OriginalBudgetedAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "OriginalBudgetedQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "OriginalCommittedAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "OriginalCommittedQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PendingInvoiceAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PercentageOfCompletion": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Performance": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ProjectID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProjectTaskID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Retainage": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "RevenueTask": {
                "$ref": "#/components/schemas/IntValue"
              },
              "RevisedBudgetedAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "RevisedBudgetedQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "RevisedCommittedAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "RevisedCommittedQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TaxCategory": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Type": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UnitRate": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "VarianceAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "ProjectBudgetCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ProjectBudget"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "ProjectCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Project"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "ProjectEmployee": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Department": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EmployeeID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EmployeeName": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ProjectEquipment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Active": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EquipmentID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RunRate": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "RunRateItem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SetupRate": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "SetupRateItem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SuspendRate": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "SuspendRateItem": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ProjectGLAccount": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AccrualAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "AccrualSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DefaultAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DefaultSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DefaultCostAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DefaultCostSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DefaultTaskForGLAccounts": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DefaultTaskForGLAccount"
                }
              }
            }
          }
        ]
      },
      "ProjectProFormaDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ARDocDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ARDocDescription": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ARDocOriginalAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ARDocStatus": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ARDocType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ARReferenceNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BillingNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InvoiceTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "OpenARBalance": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "OriginalRefNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OriginalRetainage": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PaidRetainage": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ProFormaDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ProFormaReferenceNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RetainageInvoice": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TotalAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UnpaidRetainage": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UnreleasedRetainage": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "ProjectProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "CertifiedJob": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ChangeOrderWorkflow": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "EndDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "LastRevenueChangeNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProjectManager": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RestrictEmployees": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "RestrictEquipment": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "RevenueBudgetLevel": {
                "$ref": "#/components/schemas/StringValue"
              },
              "StartDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "TrackProductionData": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "CostBudgetLevel": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TimeActivityApprover": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProjectCurrency": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RateType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InventoryTrackingMode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CostTaxZone": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RevenueTaxZone": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ProjectRetainage": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "RetainageMode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "IncludeCO": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "UseSteps": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "CapPct": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CapAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "RetainagePct": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "RetainTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ContractTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CompletedPct": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "ProjectTask": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ActivityHistory": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProjectActivity"
                }
              },
              "Attributes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AttributeValue"
                }
              },
              "BillingAndAllocationSettings": {
                "$ref": "#/components/schemas/ProjectTaskBillingAndAllocationSettings"
              },
              "CRMLink": {
                "$ref": "#/components/schemas/ProjectTaskToCRMLink"
              },
              "Default": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "DefaultValues": {
                "$ref": "#/components/schemas/ProjectTaskDefaultValues"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ExternalRefNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ProjectID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProjectTaskID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Properties": {
                "$ref": "#/components/schemas/ProjectTaskProperties"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "VisibilitySettings": {
                "$ref": "#/components/schemas/VisibilitySettings"
              }
            }
          }
        ]
      },
      "ProjectTaskBillingAndAllocationSettings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AllocationRule": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BillingOption": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BillingRule": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BillSeparately": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Branch": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Customer": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Location": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RateTable": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WIPAccountGroup": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ProjectTaskCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ProjectTask"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "ProjectTaskDefaultValues": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AccrualAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "AccrualSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DefaultAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DefaultSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DefaultCostAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DefaultCostSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxCategory": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ProjectTaskProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Approver": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Completed": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CompletionMethod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EndDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "PlannedEndDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "PlannedStartDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "StartDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              }
            }
          }
        ]
      },
      "ProjectTaskToCRMLink": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AccountedCampaign": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ProjectTemplate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Attributes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AttributeValue"
                }
              },
              "BillingAndAllocationSettings": {
                "$ref": "#/components/schemas/ProjectBillingAndAllocationSettings"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Employees": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProjectEmployee"
                }
              },
              "Equipments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProjectEquipment"
                }
              },
              "GLAccounts": {
                "$ref": "#/components/schemas/ProjectGLAccount"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ProjectProperties": {
                "$ref": "#/components/schemas/ProjectProperties"
              },
              "ProjectTemplateID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "VisibilitySettings": {
                "$ref": "#/components/schemas/VisibilitySettings"
              }
            }
          }
        ]
      },
      "ProjectTemplateCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ProjectTemplate"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "ProjectTemplateTask": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Attributes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AttributeValue"
                }
              },
              "BillingAndAllocationSettings": {
                "$ref": "#/components/schemas/ProjectTaskBillingAndAllocationSettings"
              },
              "DefaultValues": {
                "$ref": "#/components/schemas/ProjectTaskDefaultValues"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ProjectTemplateID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProjectTemplateTaskID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Properties": {
                "$ref": "#/components/schemas/ProjectTemplateTaskProperties"
              },
              "VisibilitySettings": {
                "$ref": "#/components/schemas/VisibilitySettings"
              }
            }
          }
        ]
      },
      "ProjectTemplateTaskCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ProjectTemplateTask"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "ProjectTemplateTaskProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Approver": {
                "$ref": "#/components/schemas/StringValue"
              },
              "AutomaticallyIncludeInProject": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "CompletionMethod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Default": {
                "$ref": "#/components/schemas/BooleanValue"
              }
            }
          }
        ]
      },
      "ProjectTransaction": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "CreatedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Details": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProjectTransactionDetail"
                }
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Module": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OriginalDocNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OriginalDocType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ReferenceNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TotalAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TotalBillableQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TotalQty": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "ProjectTransactionCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ProjectTransaction"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "ProjectTransactionDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AccountGroup": {
                "$ref": "#/components/schemas/StringValue"
              },
              "AccountGroupDescription": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Allocated": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Amount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "BatchNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Billable": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "BillableQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Billed": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Branch": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CostCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CreditAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CreditSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Date": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "DebitAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DebitSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EarningType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Employee": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EndDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ExternalRefNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "FinPeriod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Location": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Multiplier": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Project": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProjectTask": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Qty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Released": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "StartDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "TransactionID": {
                "$ref": "#/components/schemas/LongValue"
              },
              "UnitRate": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UseBillableQtyInAmountFormula": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "VendorOrCustomer": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ProjectUnionLocal": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UnionLocalID": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "PurchaseOrder": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BaseCurrencyID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Branch": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ControlTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CurrencyID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CurrencyEffectiveDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "CurrencyRate": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CurrencyRateTypeID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CurrencyReciprocalRate": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Date": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Details": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PurchaseOrderDetail"
                }
              },
              "Hold": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "IsTaxValid": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "LineTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Location": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrderNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrderTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Owner": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Project": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PromisedOn": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ShippingInstructions": {
                "$ref": "#/components/schemas/ShippingInstructions"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxDetails": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PurchaseOrderTaxDetail"
                }
              },
              "TaxTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Terms": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Type": {
                "$ref": "#/components/schemas/StringValue"
              },
              "VendorID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "VendorRef": {
                "$ref": "#/components/schemas/StringValue"
              },
              "VendorTaxZone": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "PurchaseOrderCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/PurchaseOrder"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "PurchaseOrderDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Account": {
                "$ref": "#/components/schemas/StringValue"
              },
              "AlternateID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BranchID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CalculateDiscountsOnImport": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Cancelled": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Completed": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "CompleteOn": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CostCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ExtendedCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineDescription": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "LineType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "MaxReceiptPercent": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "MinReceiptPercent": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "OrderNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrderQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "OrderedQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "OrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrigPONbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrigPOType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Project": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProjectTask": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Promised": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "QtyOnReceipts": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ReceiptAction": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ReceivedAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Requested": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Subaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxCategory": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UnitCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WarehouseID": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "PurchaseOrderTaxDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "RetainedTaxableAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "RetainedTaxAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TaxableAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TaxAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TaxID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxRate": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "PurchaseReceipt": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BaseCurrencyID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BillDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Branch": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ControlQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CreateBill": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "CurrencyID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CurrencyEffectiveDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "CurrencyRate": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CurrencyRateTypeID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CurrencyReciprocalRate": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Date": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Details": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PurchaseReceiptDetail"
                }
              },
              "Hold": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "InventoryRefNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Location": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PostPeriod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProcessReturnWithOriginalCost": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ReceiptNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TotalCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TotalQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Type": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UnbilledQuantity": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "VendorID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "VendorRef": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Warehouse": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "PurchaseReceiptCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/PurchaseReceipt"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "PurchaseReceiptDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Account": {
                "$ref": "#/components/schemas/StringValue"
              },
              "AccrualAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "AccrualSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Allocations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PurchaseReceiptDetailAllocation"
                }
              },
              "Branch": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EditableUnitCost": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "EstimatedINExtendedCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ExtendedCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ExpirationDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "FinalINExtendedCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "LineType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Location": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LotSerialNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OpenQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "OrderedQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "POLineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "POOrderNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "POOrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "POReceiptLineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "POReceiptNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ReceiptQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Subaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TransactionDescription": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TransferOrderNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TransferOrderLineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "TransferOrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TransferShipmentNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UnitCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Warehouse": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "PurchaseReceiptDetailAllocation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Location": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LotSerialNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Qty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ReceiptNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SplitLineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "ExpirationDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              }
            }
          }
        ]
      },
      "PurchaseSettings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "POSiteID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "POSource": {
                "$ref": "#/components/schemas/StringValue"
              },
              "VendorID": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "PurchasingDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "POOrderLineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "POOrderNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "POOrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Selected": {
                "$ref": "#/components/schemas/BooleanValue"
              }
            }
          }
        ]
      },
      "PutOnHold": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Subcontract"
          }
        }
      },
      "PutOnHoldExpenseClaim": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ExpenseClaim"
          }
        }
      },
      "PutOnHoldExpenseReceipt": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ExpenseReceipt"
          }
        }
      },
      "RecalcExternalTax": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ServiceOrder"
          }
        }
      },
      "RecalculatePricesDiscounts": {
        "required": [
          "entity",
          "parameters"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/SalesOrder"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "OverrideManualDiscounts": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "OverrideManualDocGroupDiscounts": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "OverrideManualPrices": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "RecalcDiscounts": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "RecalcUnitPrices": {
                "$ref": "#/components/schemas/BooleanValue"
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "RejectChangeOrder": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ChangeOrder"
          }
        }
      },
      "RejectExpenseClaim": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ExpenseClaim"
          }
        }
      },
      "RejectExpenseReceipt": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ExpenseReceipt"
          }
        }
      },
      "RejectInvitationEvent": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Event"
          }
        }
      },
      "RejectProFormaInvoice": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ProFormaInvoice"
          }
        }
      },
      "RejectProject": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Project"
          }
        }
      },
      "RelationDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Account": {
                "$ref": "#/components/schemas/StringValue"
              },
              "AddToCc": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ContactDisplayName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ContactID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Document": {
                "$ref": "#/components/schemas/GuidValue"
              },
              "DocumentTargetNoteIDDescription": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Email": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Name": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Primary": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "RelationID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Role": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Type": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DocumentDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              }
            }
          }
        ]
      },
      "ReleaseAdjustment": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/InventoryAdjustment"
          }
        }
      },
      "ReleaseBatch": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/PayrollBatch"
          }
        }
      },
      "ReleaseBill": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Bill"
          }
        }
      },
      "ReleaseCase": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Case"
          }
        }
      },
      "ReleaseCashSale": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/CashSale"
          }
        }
      },
      "ReleaseCashTransaction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/CashTransaction"
          }
        }
      },
      "ReleaseChangeOrder": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ChangeOrder"
          }
        }
      },
      "ReleaseCheck": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Check"
          }
        }
      },
      "ReleaseExpenseClaim": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ExpenseClaim"
          }
        }
      },
      "ReleaseFromCreditHoldSalesOrder": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/SalesOrder"
          }
        }
      },
      "ReleaseFromHold": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Subcontract"
          }
        }
      },
      "ReleaseInventoryIssue": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/InventoryIssue"
          }
        }
      },
      "ReleaseInventoryReceipt": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/InventoryReceipt"
          }
        }
      },
      "ReleaseInvoice": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Invoice"
          }
        }
      },
      "ReleaseJournalTransaction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/JournalTransaction"
          }
        }
      },
      "ReleaseKitAssembly": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/KitAssembly"
          }
        }
      },
      "ReleasePayment": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Payment"
          }
        }
      },
      "ReleaseProFormaInvoice": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ProFormaInvoice"
          }
        }
      },
      "ReleasePurchaseReceipt": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/PurchaseReceipt"
          }
        }
      },
      "ReleaseRetainage": {
        "required": [
          "entity",
          "parameters"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Bill"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "AmtToRelease": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Date": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "PostPeriod": {
                "$ref": "#/components/schemas/StringValue"
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "ReleaseSalesInvoice": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/SalesInvoice"
          }
        }
      },
      "ReleaseSalesPriceWorksheet": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/SalesPriceWorksheet"
          }
        }
      },
      "ReleaseTransactions": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ProjectTransaction"
          }
        }
      },
      "ReleaseTransferOrder": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/TransferOrder"
          }
        }
      },
      "ReleaseVendorPriceWorksheet": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/VendorPriceWorksheet"
          }
        }
      },
      "ReminderDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "IsActive": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "RemindAtDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "RemindAtTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              }
            }
          }
        ]
      },
      "RemoveChangeOrderFromHold": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ChangeOrder"
          }
        }
      },
      "RemoveProFormaInvoiceFromHold": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ProFormaInvoice"
          }
        }
      },
      "ReopenAppointment": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Appointment"
          }
        }
      },
      "ReopenOrder": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ServiceOrder"
          }
        }
      },
      "ReopenSalesOrder": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/SalesOrder"
          }
        }
      },
      "ReplenishmentParameterStockItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "DemandForecastModel": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ForecastPeriodType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LaunchDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "MaxQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "MaxShelfLifeInDays": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Method": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PeriodsToAnalyze": {
                "$ref": "#/components/schemas/IntValue"
              },
              "ReorderPoint": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ReplenishmentClass": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ReplenishmentWarehouse": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SafetyStock": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Seasonality": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ServiceLevel": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Source": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TerminationDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "TransferERQ": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "ReportingGroup": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "GroupType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Name": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "RestoreArchivedEmail": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Email"
          }
        }
      },
      "RestoreDeletedEmail": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Email"
          }
        }
      },
      "ResumeAppointment": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Appointment"
          }
        }
      },
      "ReverseBill": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Bill"
          }
        }
      },
      "ReverseChangeOrder": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ChangeOrder"
          }
        }
      },
      "RunProjectAllocation": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Project"
          }
        }
      },
      "RunProjectBilling": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Project"
          }
        }
      },
      "SalesInvoice": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Amount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ApplicationsCreditMemo": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SalesInvoiceApplicationCreditMemo"
                }
              },
              "ApplicationsInvoice": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SalesInvoiceApplicationInvoice"
                }
              },
              "Balance": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "BillingSettings": {
                "$ref": "#/components/schemas/BillToSettings"
              },
              "CashDiscount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Commissions": {
                "$ref": "#/components/schemas/SalesInvoiceCommissions"
              },
              "CreditHold": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Currency": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CustomerID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CustomerOrder": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Date": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Details": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SalesInvoiceDetail"
                }
              },
              "DetailTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "DiscountDetails": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SalesInvoiceDiscountDetails"
                }
              },
              "DiscountTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "DueDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "IsTaxValid": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "FinancialDetails": {
                "$ref": "#/components/schemas/SalesInvoiceFinancialDetails"
              },
              "FreightDetails": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SalesInvoiceFreightDetail"
                }
              },
              "FreightPrice": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Hold": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "PaymentTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Project": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ReferenceNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxDetails": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SalesInvoiceTaxDetail"
                }
              },
              "TaxTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Type": {
                "$ref": "#/components/schemas/StringValue"
              },
              "VATExemptTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "VATTaxableTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "BillToAddress": {
                "$ref": "#/components/schemas/SalesInvoiceAddress"
              },
              "BillToAddressOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "BillToContact": {
                "$ref": "#/components/schemas/SalesInvoiceDocContact"
              },
              "BillToContactOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "CreatedDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ExternalRef": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastModifiedDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ShipToAddress": {
                "$ref": "#/components/schemas/SalesInvoiceAddress"
              },
              "ShipToAddressOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ShipToContact": {
                "$ref": "#/components/schemas/SalesInvoiceDocContact"
              },
              "ShipToContactOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "TaxCalcMode": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "SalesInvoiceAddress": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AddressLine1": {
                "$ref": "#/components/schemas/StringValue"
              },
              "AddressLine2": {
                "$ref": "#/components/schemas/StringValue"
              },
              "City": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Country": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PostalCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "State": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "SalesInvoiceApplicationCreditMemo": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AmountPaid": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Balance": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Currency": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Customer": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CustomerOrder": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Date": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DocType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PostPeriod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ReferenceNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "SalesInvoiceApplicationInvoice": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AdjustedDocReferenceNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "AdjustingDocReferenceNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "AdjustmentNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "AmountPaid": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Balance": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CashDiscountTaken": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Currency": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Customer": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DocType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DocumentType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PaymentDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "PaymentPeriod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PaymentRef": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "SalesInvoiceCommissions": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "CommissionAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "SalesPersons": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SalesInvoiceSalesPersonDetail"
                }
              },
              "TotalCommissionableAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "SalesInvoiceCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/SalesInvoice"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "SalesInvoiceDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Account": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Amount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "BranchID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CalculateDiscountsOnImport": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "CostCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DiscountAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "DiscountPercent": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ExpirationDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ExternalRef": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InventoryDocType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InventoryRefNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Location": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LotSerialNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ManualDiscount": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ManualPrice": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "NoteID": {
                "$ref": "#/components/schemas/GuidValue"
              },
              "OrderLineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "OrderNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrigInvLineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "OrigInvNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrigInvType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProjectTask": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Qty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ShipmentNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SubAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxCategory": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TransactionDescr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UnitPrice": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WarehouseID": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "SalesInvoiceDiscountDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DiscountableAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "DiscountableQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "DiscountAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "DiscountCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DiscountPercent": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ExternalDiscountCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "FreeItem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "FreeItemQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ManualDiscount": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "OrderNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SequenceID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SkipDiscount": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Type": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "SalesInvoiceDocContact": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Attention": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BusinessName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Email": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone1": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "SalesInvoiceFinancialDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BatchNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Branch": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CustomerTaxZone": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "SalesInvoiceFreightDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "FreightAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "FreightCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "LineTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PremiumFreightAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ShipmentNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ShipmentType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TotalFreightAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Volume": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Weight": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "SalesInvoiceSalesPersonDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "CommissionableAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CommissionAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CommissionPercent": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "SalespersonID": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "SalesInvoiceTaxDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "TaxableAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TaxAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TaxID": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "SalesOrder": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Approved": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "BaseCurrencyID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BillToAddress": {
                "$ref": "#/components/schemas/Address"
              },
              "BillToAddressOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "BillToAddressValidated": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "BillToContact": {
                "$ref": "#/components/schemas/DocContact"
              },
              "BillToContactOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Branch": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CashAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Commissions": {
                "$ref": "#/components/schemas/Commissions"
              },
              "ContactID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ControlTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CreditHold": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "CurrencyID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CurrencyRate": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CurrencyRateTypeID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CustomerID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CustomerOrder": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Date": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DestinationWarehouseID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Details": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SalesOrderDetail"
                }
              },
              "DisableAutomaticDiscountUpdate": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "DisableAutomaticTaxCalculation": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "DiscountDetails": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SalesOrdersDiscountDetails"
                }
              },
              "EffectiveDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ExternalRef": {
                "$ref": "#/components/schemas/StringValue"
              },
              "FinancialSettings": {
                "$ref": "#/components/schemas/FinancialSettings"
              },
              "Hold": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "IsTaxValid": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "LastModified": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "LocationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "MaxRiskScore": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "OrderedQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "OrderNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrderRisks": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OrderRisks"
                }
              },
              "OrderTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "OrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PaymentMethod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Payments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SalesOrderPayment"
                }
              },
              "PreferredWarehouseID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Project": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ReciprocalRate": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Relations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RelationDetail"
                }
              },
              "RequestedOn": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Shipments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SalesOrderShipment"
                }
              },
              "ShippingSettings": {
                "$ref": "#/components/schemas/ShippingSettings"
              },
              "ShipToAddress": {
                "$ref": "#/components/schemas/Address"
              },
              "ShipToAddressOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ShipToAddressValidated": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ShipToContact": {
                "$ref": "#/components/schemas/DocContact"
              },
              "ShipToContactOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ShipVia": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxDetails": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaxDetail"
                }
              },
              "TaxTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Totals": {
                "$ref": "#/components/schemas/Totals"
              },
              "VATExemptTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "VATTaxableTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ExternalOrderOriginal": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ExternalRefundRef": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WillCall": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "PaymentRef": {
                "$ref": "#/components/schemas/StringValue"
              },
              "NoteID": {
                "$ref": "#/components/schemas/GuidValue"
              },
              "UsrExternalOrderOriginal": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ExternalOrderOrigin": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ExternalOrderSource": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxCalcMode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CreatedDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              }
            }
          }
        ]
      },
      "SalesOrderCreateReceipt": {
        "required": [
          "entity",
          "parameters"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/SalesOrder"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "ShipmentDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "WarehouseID": {
                "$ref": "#/components/schemas/StringValue"
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "SalesOrderCreateShipment": {
        "required": [
          "entity",
          "parameters"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/SalesOrder"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "ShipmentDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "WarehouseID": {
                "$ref": "#/components/schemas/StringValue"
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "SalesOrderCreditCardTransactionDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AuthNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ExtProfileId": {
                "$ref": "#/components/schemas/StringValue"
              },
              "NeedValidation": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "TranDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "TranNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TranType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CardType": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "SalesOrderCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/SalesOrder"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "SalesOrderDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Account": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Allocations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SalesOrderDetailAllocation"
                }
              },
              "AlternateID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Amount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "AutoCreateIssue": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "AverageCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Branch": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CalculateDiscountsOnImport": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Commissionable": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Completed": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "CostCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CustomerOrderNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DiscountAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "DiscountCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DiscountedUnitPrice": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "DiscountPercent": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ExtendedPrice": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "FreeItem": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InvoiceLineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "InvoiceNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InvoiceType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastModifiedDate": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineDescription": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "LineType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Location": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ManualDiscount": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "MarkForPO": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "OpenQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Operation": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrderQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "OvershipThreshold": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "POSource": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProjectTask": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PurchaseWarehouse": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PurchasingDetails": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PurchasingDetail"
                }
              },
              "VendorID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "QtyOnShipments": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ReasonCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RequestedOn": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "SalespersonID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SchedOrderDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ShipOn": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ShippingRule": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ShipToLocation": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxCategory": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxZone": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UnbilledAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UndershipThreshold": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UnitCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UnitPrice": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WarehouseID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "AssociatedOrderLineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "GiftMessage": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ManualPrice": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "LotSerialNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "NoteID": {
                "$ref": "#/components/schemas/GuidValue"
              },
              "ExternalRef": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "SalesOrderDetailAllocation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Allocated": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "AllocWarehouseID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Completed": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "CustomerOrderNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ExpirationDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "LocationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LotSerialNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrderNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Qty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "QtyOnShipments": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "QtyReceived": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "RelatedDocument": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SchedOrderDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ShipOn": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "SplitLineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "SalesOrderPayment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ApplicationDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "AppliedToOrder": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Authorize": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Balance": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CardAccountNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Capture": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "CashAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Currency": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CreditCardTransactionInfo": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SalesOrderCreditCardTransactionDetail"
                }
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DocType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Hold": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "OrigTransactionNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PaymentAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PaymentMethod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PaymentRef": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProcessingCenterID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ReferenceNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Refund": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "SaveCard": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TransferredtoInvoice": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ValidateCCRefundOrigTransaction": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ExternalRef": {
                "$ref": "#/components/schemas/StringValue"
              },
              "NoteID": {
                "$ref": "#/components/schemas/GuidValue"
              }
            }
          }
        ]
      },
      "SalesOrderShipment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "InventoryDocType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InventoryRefNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InvoiceNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InvoiceType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ShipmentDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ShipmentNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ShipmentType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ShippedQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ShippedVolume": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ShippedWeight": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InventoryNoteID": {
                "$ref": "#/components/schemas/GuidValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "OrderNoteID": {
                "$ref": "#/components/schemas/GuidValue"
              },
              "ShippingNoteID": {
                "$ref": "#/components/schemas/GuidValue"
              }
            }
          }
        ]
      },
      "SalesOrdersDiscountDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DiscountableAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "DiscountableQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "DiscountAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "DiscountCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DiscountPercent": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ExternalDiscountCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "FreeItem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "FreeItemQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ManualDiscount": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "SequenceID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SkipDiscount": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Type": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "SalesPersonDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "CommissionableAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CommissionAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CommissionPercent": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "SalespersonID": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "SalesPriceDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BreakQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CreatedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "CurrencyID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EffectiveDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ExpirationDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Price": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PriceCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PriceType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Promotion": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "RecordID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Tax": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "NoteID": {
                "$ref": "#/components/schemas/GuidValue"
              },
              "Warehouse": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxCalculationMode": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "SalesPriceWorksheet": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "CreatedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EffectiveDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ExpirationDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Hold": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "OverwriteOverlappingPrices": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ReferenceNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SalesPrices": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SalesPricesWorksheetDetail"
                }
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "SalesPriceWorksheetCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/SalesPriceWorksheet"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "SalesPricesInquiry": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "EffectiveAsOf": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ItemClassID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PriceClass": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PriceCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PriceManager": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PriceManagerIsMe": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "PriceType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PriceWorkgroup": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PriceWorkgroupIsMine": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "SalesPriceDetails": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SalesPriceDetail"
                }
              },
              "TaxCalculationMode": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "SalesPricesInquiryCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/SalesPricesInquiry"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "SalesPricesWorksheetDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BreakQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CurrencyID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "PendingPrice": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PriceCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PriceType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ReferenceNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SourcePrice": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Tax": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "Salesperson": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "CreatedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "DefaultCommission": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "IsActive": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Name": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SalespersonID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SalesSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "SalespersonCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Salesperson"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "SendEmail": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Email"
          }
        }
      },
      "ServiceOrder": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Address": {
                "$ref": "#/components/schemas/SrvOrdAddress"
              },
              "AppointmentDuration": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Appointments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SrvOrdAppointments"
                }
              },
              "AppointmentsNeeded": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Attributes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SrvOrdAttributes"
                }
              },
              "BillableTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "BranchLocation": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Contact": {
                "$ref": "#/components/schemas/SrvOrdContact"
              },
              "ContractInfo": {
                "$ref": "#/components/schemas/SrvOrdContractInfo"
              },
              "Currency": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Customer": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CustomerOrder": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Date": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "DefaultProjectTask": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DefaultStaff": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SrvOrdDefaultStaff"
                }
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Details": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SrvOrdDetails"
                }
              },
              "EstimatedDuration": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ExternalReference": {
                "$ref": "#/components/schemas/StringValue"
              },
              "FinancialDetails": {
                "$ref": "#/components/schemas/SrvOrdFinancialDetails"
              },
              "Hold": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Location": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OtherInformation": {
                "$ref": "#/components/schemas/SrvOrdOtherInformation"
              },
              "Override": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Prepayments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SrvOrdPrepayments"
                }
              },
              "Priority": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Problem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Project": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ServiceOrderNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ServiceOrderTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ServiceOrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Severity": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SLA": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "SLATime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Supervisor": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxDetails": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SrvOrdTaxDetails"
                }
              },
              "TaxTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Totals": {
                "$ref": "#/components/schemas/SrvOrdTotals"
              },
              "WaitingforPurchasedItems": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "WorkflowStage": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ServiceOrderCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ServiceOrder"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "SettingsForPR": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ExportScenario": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PRProcessing": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Report": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ShipToSettings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ShipToAddress": {
                "$ref": "#/components/schemas/Address"
              },
              "ShipToAddressOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ShipToContact": {
                "$ref": "#/components/schemas/DocContact"
              },
              "ShipToContactOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Validated": {
                "$ref": "#/components/schemas/BooleanValue"
              }
            }
          }
        ]
      },
      "ShipVia": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "CalculationMethod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Calendar": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CarrierID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CommonCarrier": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "FreightExpenseAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "FreightExpenseSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "FreightRates": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShipViaFreightRate"
                }
              },
              "FreightSalesAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "FreightSalesSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Packages": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShippingBox"
                }
              },
              "TaxCategory": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ShipViaCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ShipVia"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "ShipViaFreightRate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Rate": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Volume": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Weight": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ZoneID": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "Shipment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BaseCurrencyID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ControlQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CreatedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "CurrencyRate": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CurrencyRateTypeID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CurrencyViewState": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "CustomerID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CreateNewShipmentForEveryOrder": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Details": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShipmentDetail"
                }
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EffectiveDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "FOBPoint": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OverrideFreightPrice": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "FreightPrice": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "FreightCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "FreightCurrencyID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "GroundCollect": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Hold": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Insurance": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "LocationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Operation": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Orders": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShipmentOrderDetail"
                }
              },
              "Owner": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PackageCount": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Packages": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShipmentPackage"
                }
              },
              "PackageWeight": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Picked": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ReciprocalRate": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ResidentialDelivery": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "SaturdayDelivery": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ShipmentDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ShipmentNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ShippedQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ShippedVolume": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ShippedWeight": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ShippingSettings": {
                "$ref": "#/components/schemas/ShipToSettings"
              },
              "ShippingTerms": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ShippingZoneID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ShipVia": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ToWarehouseID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Type": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UnlimitedPackages": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "UseCustomersAccount": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "WarehouseID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WorkgroupID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "NoteID": {
                "$ref": "#/components/schemas/GuidValue"
              }
            }
          }
        ]
      },
      "ShipmentCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Shipment"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "ShipmentDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Allocations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShipmentDetailAllocation"
                }
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ExpirationDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "FreeItem": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "LocationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LotSerialNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OpenQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "OrderedQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "OrderLineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "OrderNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OriginalQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ReasonCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ShippedQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WarehouseID": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ShipmentDetailAllocation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ExpirationDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LocationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LotSerialNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrderNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Qty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SplitLineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ShipmentOrderDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "InventoryDocType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InventoryRefNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InvoiceNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InvoiceType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrderNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ShipmentNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ShipmentType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ShippedQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ShippedVolume": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ShippedWeight": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "OrderNoteID": {
                "$ref": "#/components/schemas/GuidValue"
              }
            }
          }
        ]
      },
      "ShipmentPackage": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BoxID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CODAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Confirmed": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "CustomRefNbr1": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CustomRefNbr2": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DeclaredValue": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TrackingNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Type": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Weight": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Length": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Width": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Height": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PackageContents": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShipmentPackageDetail"
                }
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "NoteID": {
                "$ref": "#/components/schemas/GuidValue"
              }
            }
          }
        ]
      },
      "ShipmentPackageDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LotSerialNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrigOrderNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrigOrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Quantity": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ShipmentSplitLineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ShippingBox": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ActiveByDefault": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "BoxID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BoxWeight": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CarriersPackage": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Height": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Length": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "MaxVolume": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "MaxWeight": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "VolumeUOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WeightUOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Width": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "LinearUOM": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ShippingBoxCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ShippingBox"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "ShippingInstructions": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ShippingDestinationType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ShippingLocation": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ShipTo": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ShipToAddress": {
                "$ref": "#/components/schemas/Address"
              },
              "ShipToAddressOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ShipToAddressValidated": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ShipToContact": {
                "$ref": "#/components/schemas/DocContact"
              },
              "ShipToContactOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Warehouse": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ShippingSettings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "CancelByDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Canceled": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "FOBPoint": {
                "$ref": "#/components/schemas/StringValue"
              },
              "GroundCollect": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Insurance": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "PreferredWarehouseID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Priority": {
                "$ref": "#/components/schemas/ShortValue"
              },
              "ResidentialDelivery": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "SaturdayDelivery": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ScheduledShipmentDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ShippingRule": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ShippingTerms": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ShippingZone": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ShipSeparately": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ShipVia": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ShopForRates": {
                "$ref": "#/components/schemas/ShopForRates"
              },
              "UseCustomersAccount": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "FreightPrice": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "FreightCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "FreightCostIsuptodate": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "FreightTaxCategory": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrderVolume": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "OrderWeight": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "OverrideFreightPrice": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "PackageWeight": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PremiumFreight": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "ShippingTerm": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Details": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShippingTermDetail"
                }
              },
              "TermID": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ShippingTermCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ShippingTerm"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "ShippingTermDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BreakAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "FreightCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "InvoiceAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "LineHandling": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "ShippingandHandling": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "ShippingZones": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ZoneID": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ShippingZonesCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ShippingZones"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "ShopForRates": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "IsManualPackage": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "OrderWeight": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PackageWeight": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "ShopifyStore": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AccessToken": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Active": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Connector": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Default": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "SharedSecret": {
                "$ref": "#/components/schemas/StringValue"
              },
              "StoreAdminURL": {
                "$ref": "#/components/schemas/StringValue"
              },
              "StoreName": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "ShopifyStoreCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ShopifyStore"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "ShortValue": {
        "type": "object",
        "properties": {
          "value": {
            "type": "integer",
            "format": "int32"
          },
          "error": {
            "type": "string"
          }
        }
      },
      "SrvOrdAddress": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AddressLine1": {
                "$ref": "#/components/schemas/StringValue"
              },
              "AddressLine2": {
                "$ref": "#/components/schemas/StringValue"
              },
              "City": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Country": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PostalCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "State": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "SrvOrdAppointments": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AppointmentNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Confirmed": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ScheduledEndDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ScheduledEndTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ScheduledStartDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ScheduledStartTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ServiceOrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "SrvOrdAttributes": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Attribute": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RefNoteID": {
                "$ref": "#/components/schemas/GuidValue"
              },
              "Required": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Value": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "SrvOrdContact": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Attention": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CompanyName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Email": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone1": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Phone1Type": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "SrvOrdContractInfo": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ContractPeriod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ServiceContract": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "SrvOrdDefaultStaff": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Comment": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "ServiceLineRef": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ServiceOrderNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ServiceOrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "StaffMemberID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Type": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "SrvOrdDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Account": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Amount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "AppointmentAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "AppointmentCount": {
                "$ref": "#/components/schemas/IntValue"
              },
              "AppointmentDuration": {
                "$ref": "#/components/schemas/StringValue"
              },
              "AppointmentEstimatedDuration": {
                "$ref": "#/components/schemas/StringValue"
              },
              "AppointmentQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Billable": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "BillingRule": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Branch": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ComponentID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ComponentLineRef": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CostCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CoveredQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DiscountAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "DiscountPercent": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "EquipmentAction": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EquipmentActionComment": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EstimatedAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "EstimatedDuration": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EstimatedQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ExtPrice": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastReference": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "LineRef": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineStatus": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Location": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LotSerialNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ManualPrice": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "MarkforPO": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ModelEquipmentLineRef": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OverageQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "OverageUnitPrice": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "POCompleted": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "PONbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "POStatus": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PrepaidItem": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ProjectTask": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Qty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ServiceContractItem": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ServiceOrderNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ServiceOrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SortOrder": {
                "$ref": "#/components/schemas/IntValue"
              },
              "StaffMemberID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TargetEquipmentID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxCategory": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UnitCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UnitPrice": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "VendorID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "VendorLocationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Warehouse": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Warranty": {
                "$ref": "#/components/schemas/BooleanValue"
              }
            }
          }
        ]
      },
      "SrvOrdFinancialDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BillingCustomer": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BillingCycle": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BillingLocation": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Branch": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Commissionable": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "CustomerTaxZone": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RunBillingFor": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Salesperson": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxCalculationMode": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "SrvOrdOtherInformation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BatchNumber": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DocumentType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InvoiceNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "IssueReferenceNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ReferenceNbr": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "SrvOrdPrepayments": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ApplicationDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "AppliedtoOrders": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "AvailableBalance": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CashAccount": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Currency": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PaymentAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PaymentMethod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PaymentRef": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ReferenceNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SourceAppointmentNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Type": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "SrvOrdTaxDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "IncludeinVATExemptTotal": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "PendingVAT": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "RecordID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "ReverseVAT": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ServiceOrderNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ServiceOrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "StatisticalVAT": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "TaxableAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TaxAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TaxID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxRate": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TaxType": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "SrvOrdTotals": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AppointmentTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "BillableTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "EstimatedTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "LineTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PrepaymentApplied": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PrepaymentReceived": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PrepaymentRemaining": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ServiceOrderBillableUnpaidBalance": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ServiceOrderTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ServiceOrderUnpaidBalance": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TaxTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "VATExemptTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "VATTaxableTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "StartAppointment": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Appointment"
          }
        }
      },
      "StockItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ABCCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Attributes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AttributeValue"
                }
              },
              "AutoIncrementalValue": {
                "$ref": "#/components/schemas/StringValue"
              },
              "AverageCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "BaseUOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Boxes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BoxStockItem"
                }
              },
              "Categories": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CategoryStockItem"
                }
              },
              "COGSAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "COGSSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Content": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CountryOfOrigin": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CrossReferences": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InventoryItemCrossReference"
                }
              },
              "CurrentStdCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "DefaultIssueLocationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DefaultPrice": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "DefaultReceiptLocationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DefaultSubitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DefaultWarehouseID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DeferralAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DeferralSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DimensionVolume": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "DimensionWeight": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "DiscountAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DiscountSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ImageUrl": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InventoryAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InventorySubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "IsAKit": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ItemClass": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ItemStatus": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ItemType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LandedCostVarianceAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LandedCostVarianceSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "LastModified": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "LastStdCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "LotSerialClass": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Markup": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "MaxCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "MinCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "MinMarkup": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "MSRP": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PackagingOption": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PackSeparately": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "PendingStdCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "POAccrualAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "POAccrualSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PostingClass": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PriceClass": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PriceManager": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PriceWorkgroup": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProductManager": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProductWorkgroup": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PurchasePriceVarianceAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PurchasePriceVarianceSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PurchaseUOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ReasonCodeSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ReplenishmentParameters": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ReplenishmentParameterStockItem"
                }
              },
              "SalesAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SalesSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SalesUOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "StandardCostRevaluationAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "StandardCostRevaluationSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "StandardCostVarianceAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "StandardCostVarianceSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SubjectToCommission": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "TaxCategory": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TariffCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UOMConversions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InventoryItemUOMConversion"
                }
              },
              "UseOnEntry": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ValuationMethod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "VendorDetails": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StockItemVendorDetail"
                }
              },
              "VolumeUOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WarehouseDetails": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StockItemWarehouseDetail"
                }
              },
              "WeightUOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CurySpecificMSRP": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CurySpecificPrice": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Availability": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CustomURL": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ExportToExternal": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "FileURLs": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InventoryFileUrls"
                }
              },
              "MetaDescription": {
                "$ref": "#/components/schemas/StringValue"
              },
              "MetaKeywords": {
                "$ref": "#/components/schemas/StringValue"
              },
              "NoteID": {
                "$ref": "#/components/schemas/GuidValue"
              },
              "PageTitle": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SearchKeywords": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TemplateItemID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Visibility": {
                "$ref": "#/components/schemas/StringValue"
              },
              "NotAvailable": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "StockItemCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/StockItem"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "StockItemVendorDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Active": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "AddLeadTimeDays": {
                "$ref": "#/components/schemas/ShortValue"
              },
              "CurrencyID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Default": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "EOQ": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "LastVendorPrice": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "LeadTimeDays": {
                "$ref": "#/components/schemas/ShortValue"
              },
              "Location": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LotSize": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "MaxOrderQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "MinOrderFrequencyInDays": {
                "$ref": "#/components/schemas/IntValue"
              },
              "MinOrderQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Override": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "PurchaseUnit": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RecordID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "VendorID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "VendorName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Warehouse": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "StockItemWarehouseDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "DailyDemandForecast": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "DailyDemandForecastErrorSTDEV": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "DefaultIssueLocationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DefaultReceiptLocationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InventoryAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InventorySubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "IsDefault": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "LastForecastDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Override": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "OverridePreferredVendor": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "OverrideReplenishmentSettings": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "OverrideStdCost": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "PreferredVendor": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PriceOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ProductManager": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProductWorkgroup": {
                "$ref": "#/components/schemas/StringValue"
              },
              "QtyOnHand": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ReplenishmentSource": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ReplenishmentWarehouse": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Seasonality": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ServiceLevel": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WarehouseID": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "StorageDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "QtyAvailable": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "QtyAvailableforIssue": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "QtyHardAvailable": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "WarehouseID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastModifiedDateofWarehouseQty": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "QtyOnHand": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "StorageDetailByLocation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "QtyAvailableinLocation": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "QtyAvailableforIssueinLocation": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "QtyAvailableforShippinginLocation": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "LocationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastModifiedDateofLocationQty": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "QtyOnHandinLocation": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "QtyAvailableinWarehouse": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "QtyAvailableforIssueinWarehouse": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "QtyAvailableforShippinginWarehouse": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "WarehouseID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastModifiedDateofWarehouseQty": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "QtyOnHandinWarehouse": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "StorageDetailsByLocationInquiry": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "SplitByLocation": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "StorageDetailsByLocation": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StorageDetailByLocation"
                }
              },
              "WarehouseID": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "StorageDetailsByLocationInquiryCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/StorageDetailsByLocationInquiry"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "StorageDetailsInquiry": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "StorageDetails": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/StorageDetail"
                }
              },
              "WarehouseID": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "StorageDetailsInquiryCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/StorageDetailsInquiry"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "StringValue": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "error": {
            "type": "string"
          }
        }
      },
      "Subaccount": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Active": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Secured": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "SubaccountCD": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SubaccountID": {
                "$ref": "#/components/schemas/IntValue"
              }
            }
          }
        ]
      },
      "SubaccountCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Subaccount"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "Subcontract": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "SubcontractNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Date": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "StartDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "VendorID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Location": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Owner": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CurrencyID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BaseCurrencyID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CurrencyEffectiveDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "CurrencyRate": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CurrencyRateTypeID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CurrencyReciprocalRate": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "VendorRef": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "DiscountTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "RetainageTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "SubcontractTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TaxTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ControlTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Branch": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Terms": {
                "$ref": "#/components/schemas/StringValue"
              },
              "VendorTaxZone": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ApplyRetainage": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "RetainagePct": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "DoNotEmail": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "DoNotPrint": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Emailed": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Printed": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Details": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubcontractDetail"
                }
              },
              "TaxDetails": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubcontractTaxDetail"
                }
              },
              "VendorAddressInfo": {
                "$ref": "#/components/schemas/SubcontractVendorAddressInfo"
              },
              "VendorContactInfo": {
                "$ref": "#/components/schemas/SubcontractVendorContactInfo"
              }
            }
          }
        ]
      },
      "SubcontractCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Subcontract"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "SubcontractDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Account": {
                "$ref": "#/components/schemas/StringValue"
              },
              "AlternateID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Amount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "BranchID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Canceled": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Closed": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Completed": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "CostCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DiscountAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "DiscountCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DiscountPct": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "DiscountSequence": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ExtendedCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineDescription": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "ManualCost": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ManualDiscount": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "OrderNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrderQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "OrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PrepaidAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PrepaidQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Project": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Task": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Requested": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "RetainageAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "RetainagePct": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "StartDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Subaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxCategory": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UnitCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "SubcontractTaxDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "RetainedTax": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "RetainedTaxable": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TaxableAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TaxAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TaxID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxRate": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TaxType": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "SubcontractVendorAddressInfo": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AddressLine1": {
                "$ref": "#/components/schemas/StringValue"
              },
              "AddressLine2": {
                "$ref": "#/components/schemas/StringValue"
              },
              "City": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Country": {
                "$ref": "#/components/schemas/StringValue"
              },
              "VendorAddressOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "PostalCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "State": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "SubcontractVendorContactInfo": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AccountName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Email": {
                "$ref": "#/components/schemas/StringValue"
              },
              "JobTitle": {
                "$ref": "#/components/schemas/StringValue"
              },
              "VendorContactOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Phone": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "SubmitExpenseClaim": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ExpenseClaim"
          }
        }
      },
      "SubmitExpenseReceipt": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ExpenseReceipt"
          }
        }
      },
      "SuspendProject": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Project"
          }
        }
      },
      "Task": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Body": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Category": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CompletedAt": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "CompletionPercentage": {
                "$ref": "#/components/schemas/IntValue"
              },
              "DueDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Internal": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "NoteID": {
                "$ref": "#/components/schemas/GuidValue"
              },
              "Owner": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Parent": {
                "$ref": "#/components/schemas/GuidValue"
              },
              "ParentSummary": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Priority": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RelatedActivities": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ActivityDetail"
                }
              },
              "RelatedTasks": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskRelatedTask"
                }
              },
              "Reminder": {
                "$ref": "#/components/schemas/ReminderDetail"
              },
              "StartDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Summary": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TimeActivity": {
                "$ref": "#/components/schemas/TaskTimeActivity"
              },
              "WorkgroupID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CreatedByID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CreatedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "RelatedEntityType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RelatedEntityNoteID": {
                "$ref": "#/components/schemas/GuidValue"
              },
              "RelatedEntityDescription": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "TaskCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Task"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "TaskRelatedTask": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "CompletedAt": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "DueDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "RecordID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "StartDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subject": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "TaskTimeActivity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BillableOvertime": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BillableTime": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CostCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Overtime": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Project": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProjectTask": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TimeSpent": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "Tax": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "CalculateOn": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CashDiscount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CreatedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "DeductibleVAT": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EnterFromTaxBill": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ExcludeFromTaxonTaxCalculation": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "IncludeInVATExemptTotal": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "IncludeInVATTaxableTotal": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "NotValidAfter": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "PendingVAT": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ReverseVAT": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "StatisticalVAT": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "TaxAgency": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxClaimableAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxClaimableSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxExpenseAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxExpenseSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxPayableAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxPayableSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxSchedule": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaxScheduleDetail"
                }
              },
              "TaxType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Zones": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaxZoneDetail"
                }
              }
            }
          }
        ]
      },
      "TaxAndReportingCA": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ReportingType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SupplementalIncome": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "TaxDetailsCA": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EarningCodeTaxDetailCA"
                }
              },
              "WageType": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "TaxAndReportingUS": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ReportingType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SubjecttoTaxes": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxDetailsUS": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EarningCodeTaxDetailUS"
                }
              },
              "WageType": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "TaxCategory": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Active": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "CreatedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Details": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaxCategoryTaxDetail"
                }
              },
              "ExcludeListedTaxes": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "TaxCategoryID": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "TaxCategoryCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/TaxCategory"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "TaxCategoryTaxDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "CalculateOn": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CashDiscount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxCategory": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxType": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "TaxCodeSetting": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AdditionalInformation": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CompanyNotes": {
                "$ref": "#/components/schemas/StringValue"
              },
              "FormBox": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Name": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Required": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "UseDefault": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Value": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "TaxCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Tax"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "TaxDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "CustomerTaxZone": {
                "$ref": "#/components/schemas/StringValue"
              },
              "IncludeInVATExemptTotal": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "OrderNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrderType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PendingVAT": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "RecordID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "ReverseVAT": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "StatisticalVAT": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "TaxableAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TaxAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TaxID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxRate": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TaxType": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "TaxReportingSettings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ReportingGroups": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ReportingGroup"
                }
              },
              "TaxAgency": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "TaxReportingSettingsCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/TaxReportingSettings"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "TaxScheduleDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "DeductibleTaxRate": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "MaxTaxableAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "MinTaxableAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ReportingGroup": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RevisionID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "StartDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "TaxID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxRate": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "TaxSettingDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AdditionalInformation": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CompanyNotes": {
                "$ref": "#/components/schemas/StringValue"
              },
              "FormBox": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Name": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Required": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Setting": {
                "$ref": "#/components/schemas/StringValue"
              },
              "State": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UseDefault": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "UsedforGovernmentReporting": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "UsedforTaxCalculation": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Value": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "TaxSettingsCA": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "CodeType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxDetailsCA": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DeductionOrBenefitTaxDetailCA"
                }
              }
            }
          }
        ]
      },
      "TaxSettingsUS": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AllowSupplementalElection": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "CodeType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ImpactonTaxableWage": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxDetailsUS": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DeductionOrBenefitTaxDetailUS"
                }
              }
            }
          }
        ]
      },
      "TaxZone": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ApplicableTaxes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaxZoneApplicableTaxDetail"
                }
              },
              "CreatedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "TaxZoneID": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "TaxZoneApplicableTaxDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "TaxID": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "TaxZoneCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/TaxZone"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "TaxZoneDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "DefaultTaxCategory": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxZoneID": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "TaxesDecreasingApplWage": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "EmployeeTaxesDecreasingApplWageDetails": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaxesDecreasingApplWageDetail"
                }
              },
              "InclusionType": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "TaxesDecreasingApplWageDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "TaxCategory": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxName": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "TemplateItemVendorDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "RecordID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "VendorID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "VendorName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Default": {
                "$ref": "#/components/schemas/BooleanValue"
              }
            }
          }
        ]
      },
      "TemplateItems": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "SalesUOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CurySpecificMSRP": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CurySpecificPrice": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ItemClass": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Availability": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Attributes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AttributeValue"
                }
              },
              "BaseUOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Categories": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CategoryStockItem"
                }
              },
              "Content": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CurrentStdCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CustomURL": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DefaultIssueLocationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DefaultPrice": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DimensionWeight": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ExportToExternal": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "FileURLs": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InventoryFileUrls"
                }
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "IsStockItem": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ItemStatus": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastModified": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Matrix": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MatrixItems"
                }
              },
              "MetaDescription": {
                "$ref": "#/components/schemas/StringValue"
              },
              "MSRP": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PageTitle": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SearchKeywords": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxCategory": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Visibility": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WeightUOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "MetaKeywords": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RequireShipment": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "NotAvailable": {
                "$ref": "#/components/schemas/StringValue"
              },
              "VendorDetails": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TemplateItemVendorDetail"
                }
              }
            }
          }
        ]
      },
      "TemplateItemsCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/TemplateItems"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "TimeActivity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Approver": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Billable": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "BillableOvertime": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BillableTime": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CostCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EarningType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Overtime": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Project": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProjectTask": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ReferenceNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Released": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TimeSpent": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TrackTime": {
                "$ref": "#/components/schemas/BooleanValue"
              }
            }
          }
        ]
      },
      "TimeAndMaterial": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AmountToInvoice": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "BilledAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "BilledQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Branch": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CostCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Date": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "DeferralCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EmployeeID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "MaxAvailableAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "MaxLimitAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "OverLimitAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ProjectTaskID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "QtyToInvoice": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Retainage": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "RetainageAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "SalesAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SalesSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxCategory": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UnitPrice": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Vendor": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "TimeEntry": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ApprovalStatus": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Approver": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Billable": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "BillableOvertime": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BillableTime": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CertifiedJob": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "CostCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CostRate": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Date": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "EarningType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Employee": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ExternalRefNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LaborItem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Overtime": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProjectID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProjectTaskID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Summary": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Time": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "TimeEntryID": {
                "$ref": "#/components/schemas/GuidValue"
              },
              "TimeSpent": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UnionLocal": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WCCCode": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "TimeEntryCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/TimeEntry"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "Totals": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "DiscountTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "LineTotalAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "MiscTotalAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "TaxTotal": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UnbilledAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UnbilledQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "UnpaidBalance": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Freight": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "FreightCost": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "FreightCostIsuptodate": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "FreightTaxCategory": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OrderVolume": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "OrderWeight": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PackageWeight": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "PremiumFreight": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "OverrideFreightAmount": {
                "$ref": "#/components/schemas/BooleanValue"
              }
            }
          }
        ]
      },
      "TransferOrder": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Date": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Details": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TransferOrderDetail"
                }
              },
              "ExternalRef": {
                "$ref": "#/components/schemas/StringValue"
              },
              "FromWarehouseID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Hold": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "PostPeriod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ReferenceNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TotalQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ToWarehouseID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TransferType": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "TransferOrderCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/TransferOrder"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "TransferOrderDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Allocations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TransferOrderDetailAllocation"
                }
              },
              "CostCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ExpirationDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "FromLocationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "LotSerialNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Project": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProjectTask": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Qty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ReasonCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SpecialOrderNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ToLocationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ToCostCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ToCostLayerType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ToProject": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ToProjectTask": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ToSpecialOrderNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "TransferOrderDetailAllocation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "LocationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LotSerialNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Qty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "SplitLineNumber": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Subitem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ExpirationDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              }
            }
          }
        ]
      },
      "UncloseAppointment": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Appointment"
          }
        }
      },
      "UncloseOrder": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/ServiceOrder"
          }
        }
      },
      "UnionDeductionOrBenefitDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ContributionAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ContributionCalculationMethod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ContributionPercent": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ContributionType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DeductionAmount": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "DeductionAndBenefitCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DeductionCalculationMethod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DeductionPercent": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EffectiveDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "LaborItem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              }
            }
          }
        ]
      },
      "UnionEarningRateDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EffectiveDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "LaborItem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "WageRate": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "UnionLocal": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Active": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UnionLocalID": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "UnionLocalCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/UnionLocal"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "Units": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "ConversionFactor": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CreatedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "FromUOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "MultiplyOrDivide": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ToUOM": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "UnitsOfMeasure": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "UnitID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "L3Code": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Conversion": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Units"
                }
              }
            }
          }
        ]
      },
      "UnitsOfMeasureCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/UnitsOfMeasure"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "UnlockProjectBudget": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Project"
          }
        }
      },
      "UnlockProjectCommitments": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Project"
          }
        }
      },
      "UpdateDiscounts": {
        "required": [
          "entity",
          "parameters"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Discount"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "Date": {
                "$ref": "#/components/schemas/DateTimeValue"
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "UpdateIN": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Shipment"
          }
        }
      },
      "UpdateStandardCostNonStockItem": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/NonStockItem"
          }
        }
      },
      "UpdateStandardCostStockItem": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/StockItem"
          }
        }
      },
      "ValidateBusinessAccountAddresses": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/BusinessAccount"
          }
        }
      },
      "ValidateContactAddress": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Contact"
          }
        }
      },
      "ValidateLeadAddress": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Lead"
          }
        }
      },
      "ValidateProjectBalance": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Project"
          }
        }
      },
      "Vendor": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AccountRef": {
                "$ref": "#/components/schemas/StringValue"
              },
              "APAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "APSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Attributes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AttributeValue"
                }
              },
              "CashAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Contacts": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CustomerContact"
                }
              },
              "CreatedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "CurrencyID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CurrencyRateType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EnableCurrencyOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "EnableRateOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "F1099Box": {
                "$ref": "#/components/schemas/StringValue"
              },
              "F1099Vendor": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "FATCA": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "FOBPoint": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ForeignEntity": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "LandedCostVendor": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "LeadTimedays": {
                "$ref": "#/components/schemas/ShortValue"
              },
              "LegalName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LocationName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "MainContact": {
                "$ref": "#/components/schemas/Contact"
              },
              "MaxReceipt": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "MinReceipt": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ParentAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PaymentBy": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PaymentInstructions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BusinessAccountPaymentInstructionDetail"
                }
              },
              "PaymentLeadTimedays": {
                "$ref": "#/components/schemas/ShortValue"
              },
              "PaymentMethod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PaySeparately": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "PrimaryContact": {
                "$ref": "#/components/schemas/Contact"
              },
              "PrintOrders": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ReceiptAction": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ReceivingBranch": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RemittanceAddressOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "RemittanceContact": {
                "$ref": "#/components/schemas/Contact"
              },
              "RemittanceContactOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "SendOrdersbyEmail": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ShippingContactOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ShippingAddressOverride": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ShippingContact": {
                "$ref": "#/components/schemas/Contact"
              },
              "ShippingTerms": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ShipVia": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxCalculationMode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxRegistrationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TaxZone": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Terms": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ThresholdReceipt": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "VendorClass": {
                "$ref": "#/components/schemas/StringValue"
              },
              "VendorID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "VendorIsLaborUnion": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "VendorIsTaxAgency": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "VendorName": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Warehouse": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "VendorClass": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Attributes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BusinessAccountClassAttributeDetail"
                }
              },
              "ClassID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CreatedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              }
            }
          }
        ]
      },
      "VendorClassCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/VendorClass"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "VendorCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Vendor"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "VendorPriceDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BreakQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CreatedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "CurrencyID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EffectiveDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ExpirationDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Price": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Promotional": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "RecordID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Vendor": {
                "$ref": "#/components/schemas/StringValue"
              },
              "VendorName": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "VendorPriceWorksheet": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "CreatedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EffectiveDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "ExpirationDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Hold": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "OverwriteOverlappingPrices": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Promotional": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "ReferenceNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Status": {
                "$ref": "#/components/schemas/StringValue"
              },
              "VendorSalesPrices": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VendorPriceWorksheetDetail"
                }
              }
            }
          }
        ]
      },
      "VendorPriceWorksheetCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/VendorPriceWorksheet"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "VendorPriceWorksheetDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "BreakQty": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "CurrencyID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LineID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "PendingPrice": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "ReferenceNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SourcePrice": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Tax": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UOM": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Vendor": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "VendorPricesInquiry": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "InventoryID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ItemClass": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProductManager": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProductWorkgroup": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Vendor": {
                "$ref": "#/components/schemas/StringValue"
              },
              "VendorPriceDetails": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VendorPriceDetail"
                }
              }
            }
          }
        ]
      },
      "VendorPricesInquiryCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/VendorPricesInquiry"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "VisibilitySettings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "AP": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "AR": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "CA": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "CRM": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Expenses": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "GL": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "IN": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "PO": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "SO": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "TimeEntries": {
                "$ref": "#/components/schemas/BooleanValue"
              }
            }
          }
        ]
      },
      "VoidCardPayment": {
        "required": [
          "entity",
          "parameters"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Payment"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "TranType": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TranNbr": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ExtProfileId": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TranDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "NeedValidation": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "OrigTranNbr": {
                "$ref": "#/components/schemas/StringValue"
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "VoidCheck": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Check"
          }
        }
      },
      "VoidPayment": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Payment"
          }
        }
      },
      "WCCCode": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Active": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "WCCCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WCCCodeCostCodeSources": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WCCCodeCostCodeSource"
                }
              },
              "WCCCodeLaborItemSources": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WCCCodeLaborItemSource"
                }
              },
              "WCCCodeMaxInsurableWages": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WCCCodeMaxInsurableWage"
                }
              },
              "WCCCodeProjectSources": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WCCCodeProjectSource"
                }
              },
              "WCCCodeRates": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WCCCodeRate"
                }
              }
            }
          }
        ]
      },
      "WCCCodeCostCodeSource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "CostCodeFrom": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CostCodeTo": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "WorkCodeID": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "WCCCodeLaborItemSource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "LaborItem": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "WorkCodeID": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "WCCCodeMaxInsurableWage": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "DeductionandBenefitCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EffectiveDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "State": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Wage": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "WCCode": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "WCCCodeMaxInsurableWageDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "DeductionandBenefitCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EffectiveDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Wage": {
                "$ref": "#/components/schemas/DecimalValue"
              }
            }
          }
        ]
      },
      "WCCCodeProjectSource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "LineNbr": {
                "$ref": "#/components/schemas/IntValue"
              },
              "Project": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ProjectTask": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WorkCodeID": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "WCCCodeRate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Active": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "BenefitCalculationMethod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "BenefitRate": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Branch": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DeductionCalculationMethod": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DeductionCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DeductionRate": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "EffectiveDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "RecordID": {
                "$ref": "#/components/schemas/IntValue"
              },
              "State": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WorkCodeID": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "WCCCodeRateDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Active": {
                "$ref": "#/components/schemas/GuidValue"
              },
              "BenefitRate": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Branch": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DeductionRate": {
                "$ref": "#/components/schemas/DecimalValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EffectiveDate": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "WCCCode": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WCCCodeMaxInsurableWages": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WCCCodeMaxInsurableWageDetail"
                }
              }
            }
          }
        ]
      },
      "Warehouse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Active": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "COGSExpenseAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "COGSExpenseSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DiscountAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DiscountSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "DropShipLocationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "FreightChargeAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "FreightChargeSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InventoryAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "InventorySubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LandedCostVarianceAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LandedCostVarianceSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "Locations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WarehouseLocation"
                }
              },
              "MiscChargeAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "MiscChargeSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "NonStockPickingLocationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "OverrideInventoryAccountSubaccount": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "POAccrualAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "POAccrualSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PurchasePriceVarianceAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PurchasePriceVarianceSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ReasonCodeSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ReceivingLocationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "RMALocationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SalesAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "SalesSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "ShippingLocationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "StandardCostRevaluationAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "StandardCostRevaluationSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "StandardCostVarianceAccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "StandardCostVarianceSubaccount": {
                "$ref": "#/components/schemas/StringValue"
              },
              "UseItemDefaultLocationForPicking": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "WarehouseID": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "WarehouseCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/Warehouse"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "WarehouseLocation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Active": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "AssemblyAllowed": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "LocationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "PickPriority": {
                "$ref": "#/components/schemas/ShortValue"
              },
              "ReceiptsAllowed": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "SalesAllowed": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "TransfersAllowed": {
                "$ref": "#/components/schemas/BooleanValue"
              }
            }
          }
        ]
      },
      "WorkCalendar": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "CalendarExceptions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WorkCalendarExceptionDetail"
                }
              },
              "CalendarSettings": {
                "$ref": "#/components/schemas/CalendarSettings"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "TimeZone": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WorkCalendarID": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "WorkCalendarCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/WorkCalendar"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "WorkCalendarExceptionDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Date": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "DayOfWeek": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "EndTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "StartTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "UnpaidBreakTime": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WorkDay": {
                "$ref": "#/components/schemas/BooleanValue"
              }
            }
          }
        ]
      },
      "WorkClassCompensationCode": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Active": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "CostCodeFrom": {
                "$ref": "#/components/schemas/StringValue"
              },
              "CostCodeTo": {
                "$ref": "#/components/schemas/StringValue"
              },
              "Description": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WCCCode": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "WorkClassCompensationCodeCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/WorkClassCompensationCode"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      },
      "WorkLocation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "type": "object",
            "properties": {
              "Active": {
                "$ref": "#/components/schemas/BooleanValue"
              },
              "AddressInfo": {
                "$ref": "#/components/schemas/Address"
              },
              "LastModifiedDateTime": {
                "$ref": "#/components/schemas/DateTimeValue"
              },
              "UseAddressfromBranchID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WorkLocationID": {
                "$ref": "#/components/schemas/StringValue"
              },
              "WorkLocationName": {
                "$ref": "#/components/schemas/StringValue"
              }
            }
          }
        ]
      },
      "WorkLocationCustomAction": {
        "required": [
          "entity"
        ],
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/WorkLocation"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "custom": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CustomField"
                  }
                }
              }
            },
            "description": "The parameters of the action."
          }
        }
      }
    },
    "responses": {
      "ContractBasedControllerBase_401": {
        "description": "The user is not logged in to the system.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HttpError"
            }
          },
          "text/json": {
            "schema": {
              "$ref": "#/components/schemas/HttpError"
            }
          }
        }
      },
      "ContractBasedControllerBase_500": {
        "description": "Internal server error.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HttpError"
            }
          },
          "text/json": {
            "schema": {
              "$ref": "#/components/schemas/HttpError"
            }
          }
        }
      },
      "InvokeAction_204": {
        "description": "The operation that was initiated by the action is completed.",
        "headers": {
          "Location": {
            "description": "A URL that can be used to obtain the processed entity through the GET HTTP method.",
            "schema": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "InvokeAction_202": {
        "description": "The operation is in progress.",
        "headers": {
          "Location": {
            "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
            "schema": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "InvokeAction_400": {
        "description": "The data specified in the request is invalid.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HttpError"
            }
          },
          "text/json": {
            "schema": {
              "$ref": "#/components/schemas/HttpError"
            }
          }
        }
      },
      "InvokeAction_412": {
        "description": "Either the header of the request specifies that the entity has to be inserted but an entity with these keys already exists in the database and cannot be inserted, or the header specifies that the entity has to be updated but there is no entity with these keys in the database.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HttpError"
            }
          },
          "text/json": {
            "schema": {
              "$ref": "#/components/schemas/HttpError"
            }
          }
        }
      },
      "DeleteByKeys_204": {
        "description": "The record is successfully deleted."
      },
      "PutFile_204": {
        "description": "The file is successfully attached.",
        "headers": {
          "Location": {
            "description": "A URL that can be used to retrieve the file from the system.",
            "schema": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "DeleteById_204": {
        "description": "The record is successfully deleted."
      },
      "PutEntity_400": {
        "description": "The data specified in the request is invalid.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HttpError"
            }
          },
          "text/json": {
            "schema": {
              "$ref": "#/components/schemas/HttpError"
            }
          }
        }
      },
      "PutEntity_412": {
        "description": "Either the header of the request specifies that the entity has to be inserted but an entity with these keys already exists in the database and cannot be inserted, or the header specifies that the entity has to be updated but there is no entity with these keys in the database.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HttpError"
            }
          },
          "text/json": {
            "schema": {
              "$ref": "#/components/schemas/HttpError"
            }
          }
        }
      },
      "StartReport_202": {
        "description": "The operation is in progress.",
        "headers": {
          "Location": {
            "description": "A URL that can be used to check the status of the operation through the GET HTTP method.",
            "schema": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "StartReport_400": {
        "description": "The data specified in the request is invalid.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HttpError"
            }
          },
          "text/json": {
            "schema": {
              "$ref": "#/components/schemas/HttpError"
            }
          }
        }
      }
    },
    "parameters": {
      "actionName": {
        "name": "actionName",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "ids": {
        "name": "ids",
        "in": "path",
        "description": "The values of the key fields of the record. The values are slash-delimited.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "select": {
        "name": "$select",
        "in": "query",
        "description": "The fields of the entity to be returned from the system.",
        "schema": {
          "type": "string"
        }
      },
      "filter": {
        "name": "$filter",
        "in": "query",
        "description": "The conditions that determine which records should be selected from the system.",
        "schema": {
          "type": "string"
        }
      },
      "expand": {
        "name": "$expand",
        "in": "query",
        "description": "The linked and detail entities that should be expanded.",
        "schema": {
          "type": "string"
        }
      },
      "custom": {
        "name": "$custom",
        "in": "query",
        "description": "The fields that are not defined in the contract of the endpoint to be returned from the system.",
        "schema": {
          "type": "string"
        }
      },
      "filename": {
        "name": "filename",
        "in": "path",
        "description": "The name of the file that you are going to attach with the extension.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "id": {
        "name": "id",
        "in": "path",
        "description": "The session ID of the record.",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "skip": {
        "name": "$skip",
        "in": "query",
        "description": "The number of records to be skipped from the list of returned records.",
        "schema": {
          "type": "integer",
          "format": "int32"
        }
      },
      "top": {
        "name": "$top",
        "in": "query",
        "description": "The number of records to be returned from the system.",
        "schema": {
          "type": "integer",
          "format": "int32"
        }
      }
    }
  },
  "tags": [
    {
      "name": "Account",
      "description": "Chart of Accounts (GL202500)"
    },
    {
      "name": "AccountDetailsForPeriodInquiry",
      "description": "Account Details for Period (GL404001)"
    },
    {
      "name": "AccountGroup",
      "description": "Account Groups (PM201000)"
    },
    {
      "name": "AccountSummaryInquiry",
      "description": "Account Summary (GL401000)"
    },
    {
      "name": "Activity",
      "description": "Activity (CR306010)"
    },
    {
      "name": "AmazonStore",
      "description": "(BC201020)"
    },
    {
      "name": "Appointment",
      "description": "Appointments (FS300200)"
    },
    {
      "name": "AttributeDefinition",
      "description": "Attributes (CS205000)"
    },
    {
      "name": "BigCommerceStores",
      "description": "(BC201000)"
    },
    {
      "name": "Bill",
      "description": "Bills and Adjustments (AP301000)"
    },
    {
      "name": "Budget",
      "description": "Budgets (GL302010)"
    },
    {
      "name": "BusinessAccount",
      "description": "Business Accounts (CR303000)"
    },
    {
      "name": "Carrier",
      "description": "Carriers (CS207700)"
    },
    {
      "name": "Case",
      "description": "Cases (CR306000)"
    },
    {
      "name": "CashSale",
      "description": "Cash Sales (AR304000)"
    },
    {
      "name": "CashTransaction",
      "description": "Cash Transactions (CA304000)"
    },
    {
      "name": "ChangeOrder",
      "description": "Change Orders (PM308000)"
    },
    {
      "name": "ChangeOrderClass",
      "description": "Change Order Classes (PM203000)"
    },
    {
      "name": "Check",
      "description": "Checks and Payments (AP302000)"
    },
    {
      "name": "CompaniesStructure",
      "description": "Company Branch (CS401000)"
    },
    {
      "name": "CompanyFinancialPeriod",
      "description": "(GL201100)"
    },
    {
      "name": "Contact",
      "description": "Contacts (CR302000)"
    },
    {
      "name": "ContractUsage",
      "description": "Contract Usage (CT303000)"
    },
    {
      "name": "CostCode",
      "description": "(PM209500)"
    },
    {
      "name": "Currency",
      "description": "Currencies (CM202000)"
    },
    {
      "name": "Customer",
      "description": "Customers (AR303000)"
    },
    {
      "name": "CustomerClass",
      "description": "Customer Classes (AR201000)"
    },
    {
      "name": "CustomerLocation",
      "description": "Customer Locations (AR303020)"
    },
    {
      "name": "CustomerPaymentMethod",
      "description": "Customer Payment Methods (AR303010)"
    },
    {
      "name": "CustomerPriceClass",
      "description": "Customer Price Classes (AR208000)"
    },
    {
      "name": "DeductionBenefitCode",
      "description": "Deduction and Benefit Codes (PR101060)"
    },
    {
      "name": "Discount",
      "description": "Discounts (AR209500)"
    },
    {
      "name": "DiscountCode",
      "description": "Discount Codes (AR209000)"
    },
    {
      "name": "EarningTypeCode",
      "description": "Earning Type Codes (PR102000)"
    },
    {
      "name": "Email",
      "description": "Email Activity (CR306015)"
    },
    {
      "name": "EmailProcessing",
      "description": "Emails Pending Processing (SM507000)"
    },
    {
      "name": "Employee",
      "description": "Employees (EP203000)"
    },
    {
      "name": "EmployeePayrollClass",
      "description": "Employee Payroll Class (PR202000)"
    },
    {
      "name": "EmployeePayrollSettings",
      "description": "Employee Payroll Settings (PR203000)"
    },
    {
      "name": "Event",
      "description": "Event (CR306030)"
    },
    {
      "name": "ExpenseClaim",
      "description": "Expense Claim (EP301000)"
    },
    {
      "name": "ExpenseReceipt",
      "description": "Expense Receipt (EP301020)"
    },
    {
      "name": "ExternalCommitment",
      "description": "External Commitments (PM209000)"
    },
    {
      "name": "FinancialPeriod",
      "description": "Master Financial Calendar (GL201000)"
    },
    {
      "name": "FinancialYear",
      "description": "Financial Year (GL101000)"
    },
    {
      "name": "FOBPoint",
      "description": "FOB Points (CS208500)"
    },
    {
      "name": "InventoryAdjustment",
      "description": "Adjustments (IN303000)"
    },
    {
      "name": "InventoryAllocationInquiry",
      "description": "Inventory Allocation Details (IN402000)"
    },
    {
      "name": "InventoryIssue",
      "description": "Issues (IN302000)"
    },
    {
      "name": "InventoryQuantityAvailable",
      "description": "Available Quantity by Inventory Item (SO640590)"
    },
    {
      "name": "InventoryReceipt",
      "description": "Receipts (IN301000)"
    },
    {
      "name": "InventorySummaryInquiry",
      "description": "Inventory Summary (IN401000)"
    },
    {
      "name": "Invoice",
      "description": "Invoices and Memos (AR301000)"
    },
    {
      "name": "ItemClass",
      "description": "Item Classes (IN201000)"
    },
    {
      "name": "ItemSalesCategory",
      "description": "Item Sales Categories (IN204060)"
    },
    {
      "name": "ItemWarehouse",
      "description": "Item Warehouse  Details (IN204500)"
    },
    {
      "name": "JournalTransaction",
      "description": "Journal Transactions (GL301000)"
    },
    {
      "name": "KitAssembly",
      "description": "Kit Assembly (IN307000)"
    },
    {
      "name": "KitSpecification",
      "description": "Kit Specifications (IN209500)"
    },
    {
      "name": "LaborCostRate",
      "description": "Labor Rates (PM209900)"
    },
    {
      "name": "Lead",
      "description": "Leads (CR301000)"
    },
    {
      "name": "Ledger",
      "description": "Ledgers (GL201500)"
    },
    {
      "name": "LotSerialClass",
      "description": "Lot/Serial Classes (IN207000)"
    },
    {
      "name": "NonStockItem",
      "description": "Non-Stock Items (IN202000)"
    },
    {
      "name": "Opportunity",
      "description": "Opportunities (CR304000)"
    },
    {
      "name": "PayGroup",
      "description": "Pay Groups (PR205000)"
    },
    {
      "name": "Payment",
      "description": "Payments and Applications (AR302000)"
    },
    {
      "name": "PaymentMethod",
      "description": "Payment Methods (CA204000)"
    },
    {
      "name": "PayPeriod",
      "description": "Pay Periods (PR201000)"
    },
    {
      "name": "PayrollBatch",
      "description": "Payroll Batches (PR301000)"
    },
    {
      "name": "PayrollUnionLocal",
      "description": "Union Locals (PR209700)"
    },
    {
      "name": "PayrollWCCCode",
      "description": "Workers' Compensation Codes (PR209800)"
    },
    {
      "name": "PhysicalInventoryCount",
      "description": "Physical Inventory Count (IN305010)"
    },
    {
      "name": "PhysicalInventoryReview",
      "description": "Physical Inventory Review (IN305000)"
    },
    {
      "name": "ProFormaInvoice",
      "description": "Pro Forma Invoices (PM307000)"
    },
    {
      "name": "Project",
      "description": "Projects (PM301000)"
    },
    {
      "name": "ProjectBudget",
      "description": "Project Budget (PM309000)"
    },
    {
      "name": "ProjectTask",
      "description": "Project Tasks (PM302000)"
    },
    {
      "name": "ProjectTemplate",
      "description": "Project Templates (PM208000)"
    },
    {
      "name": "ProjectTemplateTask",
      "description": "Project Template Tasks (PM208010)"
    },
    {
      "name": "ProjectTransaction",
      "description": "Project Transactions (PM304000)"
    },
    {
      "name": "PTOBank",
      "description": "PTO Banks (PR204000)"
    },
    {
      "name": "PurchaseOrder",
      "description": "Purchase Orders (PO301000)"
    },
    {
      "name": "PurchaseReceipt",
      "description": "Purchase Receipts (PO302000)"
    },
    {
      "name": "SalesInvoice",
      "description": "Invoices (SO303000)"
    },
    {
      "name": "SalesOrder",
      "description": "Sales Orders (SO301000)"
    },
    {
      "name": "Salesperson",
      "description": "Salespersons (AR205000)"
    },
    {
      "name": "SalesPricesInquiry",
      "description": "Sales Prices (AR202000)"
    },
    {
      "name": "SalesPriceWorksheet",
      "description": "Sales Price Worksheets (AR202010)"
    },
    {
      "name": "ServiceOrder",
      "description": "Service Orders (FS300100)"
    },
    {
      "name": "Shipment",
      "description": "Shipments (SO302000)"
    },
    {
      "name": "ShippingBox",
      "description": "Boxes (CS207600)"
    },
    {
      "name": "ShippingTerm",
      "description": "Shipping Terms (CS208000)"
    },
    {
      "name": "ShippingZones",
      "description": "Shipping Zones (CS207510)"
    },
    {
      "name": "ShipVia",
      "description": "Ship via Codes (CS207500)"
    },
    {
      "name": "ShopifyStore",
      "description": "(BC201010)"
    },
    {
      "name": "StockItem",
      "description": "Stock Items (IN202500)"
    },
    {
      "name": "StorageDetailsByLocationInquiry",
      "description": "Storage Details by Item Warehouse Location (IN408055)"
    },
    {
      "name": "StorageDetailsInquiry",
      "description": "Storage Details (IN408050)"
    },
    {
      "name": "Subaccount",
      "description": "Subaccounts (GL203000)"
    },
    {
      "name": "Subcontract",
      "description": "(SC301000)"
    },
    {
      "name": "Task",
      "description": "Task (CR306020)"
    },
    {
      "name": "Tax",
      "description": "Taxes (TX205000)"
    },
    {
      "name": "TaxCategory",
      "description": "Tax Categories (TX205500)"
    },
    {
      "name": "TaxReportingSettings",
      "description": "Reporting Settings (TX205100)"
    },
    {
      "name": "TaxZone",
      "description": "Tax Zones (TX206000)"
    },
    {
      "name": "TemplateItems",
      "description": "Template Items (IN203000)"
    },
    {
      "name": "TimeEntry",
      "description": "Time Entry (PM209100)"
    },
    {
      "name": "TransferOrder",
      "description": "Transfers (IN304000)"
    },
    {
      "name": "UnionLocal",
      "description": "(PM209700)"
    },
    {
      "name": "UnitsOfMeasure",
      "description": "Units of Measure (CS203500)"
    },
    {
      "name": "Vendor",
      "description": "Vendors (AP303000)"
    },
    {
      "name": "VendorClass",
      "description": "Vendor Classes (AP201000)"
    },
    {
      "name": "VendorPricesInquiry",
      "description": "Vendor Prices (AP202000)"
    },
    {
      "name": "VendorPriceWorksheet",
      "description": "Vendor Price Worksheets (AP202010)"
    },
    {
      "name": "Warehouse",
      "description": "Warehouses (IN204000)"
    },
    {
      "name": "WorkCalendar",
      "description": "Work Calendar (CS209000)"
    },
    {
      "name": "WorkClassCompensationCode",
      "description": "(PM209800)"
    },
    {
      "name": "WorkLocation",
      "description": "Work Locations (PR101040)"
    }
  ]
}